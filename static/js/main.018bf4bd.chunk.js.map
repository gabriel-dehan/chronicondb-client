{"version":3,"sources":["engine/data lazy /^/.//.*//extracts$/ groupOptions: {} namespace object","types/Character.types.ts","types/Item.types.ts","types/Enchant.types.ts","components/atoms/Loader/Loader.tsx","engine/context.ts","engine/data/dataMappings.ts","helpers/typeUtils.ts","types/Filters.types.ts","engine/EngineEnchants.ts","helpers/objectUtils.ts","engine/EngineItems.ts","engine/EngineSkills.ts","engine/Engine.ts","components/atoms/ScrollToTop/ScrollToTop.tsx","hooks/useEngine.ts","hooks/useStores.ts","components/atoms/Icon/Icon.tsx","components/organisms/Footer/Footer.tsx","routes.ts","components/atoms/Dropdown/Dropdown.tsx","hooks/useOnClickOutside.ts","types/DataStore.types.ts","hooks/useFilters.ts","hooks/useResponsive.ts","components/atoms/GameIcon/GameIcon.tsx","components/organisms/Header/Header.tsx","layouts/Default.tsx","components/organisms/Enchants/Categories/Categories.tsx","components/atoms/Search/Search.tsx","components/organisms/Enchants/Filters/Filters.tsx","components/atoms/Badge/Badge.tsx","components/organisms/Enchants/Enchant/Enchant.tsx","components/organisms/Enchants/List/List.tsx","components/templates/Enchants/EnchantsTemplate.tsx","pages/enchants/Enchants.tsx","components/molecules/Tabs/Tabs.tsx","components/molecules/Items/ItemsEnchantsPool/ItemsEnchantsPool.tsx","components/molecules/Items/RunesEnchantsPool/RunesEnchantsPool.tsx","components/organisms/Items/EnchantsPool/EnchantsPool.tsx","components/molecules/Items/AppliedEnchant/AppliedEnchant.tsx","components/molecules/Items/EnchantSlot/EnchantSlot.tsx","components/molecules/Items/Set/Set.tsx","components/organisms/ItemDownloader/DownloadableItem/DownloadableItem.tsx","components/organisms/ItemDownloader/ItemDownloader.tsx","hooks/useAsDownloadableImage.ts","components/organisms/Items/Item/Item.tsx","components/templates/Item/ItemTemplate.tsx","pages/items/Item.tsx","components/organisms/Items/Categories/Categories.tsx","components/atoms/CheckboxSelect/CheckboxSelect.tsx","components/atoms/Multiselect/Multiselect.tsx","components/organisms/Items/Filters/Filters.tsx","components/atoms/SortSelect/SortSelect.tsx","components/molecules/Items/Header/Header.tsx","components/organisms/Items/List/List.tsx","components/templates/Items/ItemsTemplate.tsx","pages/items/Items.tsx","pages/Main.tsx","stores/FiltersStore.ts","pages/App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","CharacterClass","ItemRarity","ItemCategory","ItemType","SetUuid","EnchantType","EnchantCategory","Loader","width","height","color","style","position","top","left","viewBox","xmlns","stroke","fill","fillRule","strokeWidth","cx","cy","r","attributeName","begin","dur","values","calcMode","keyTimes","keySplines","repeatCount","EngineContext","createContext","EpicEnchantableCategories","Ring","Amulet","EnchantableCategories","Accessory","Armor","Boots","Helmet","Offhand","Weapon","ENCHANT_SLOTS_BY_RARITY","Ordinary","Enchanted","count","types","Minor","Major","categoriesRestriction","Rare","Epic","Unique","Legendary","TrueLegendary","Mythical","ITEM_TYPES_BY_CATEGORIES","Helm","Bow","Sword","Staff","Fists","Spellbook","Shield","Tome","Claw","Arrow","Gem","CubeGem","StarGem","SphereGem","Consumables","Elixir","Potion","Scroll","Relic","Misc","Key","QuestItem","SpecialItem","Container","UnknownItem","Bag","Craft","CraftingMaterial","Rune","All","Scout","WrathfulRevenge","Seeker","Challenger","Thief","Bond","Harverst","Summoner","SunAndMoon","FuriousRetaliation","AllForOne","OneForAll","Templar","Reckoning","Valkyrie","ThunderCharged","ThunderingArmy","Caines","Wargod","Ayeela","Soulpurger","Berserker","Bloodsoak","Cataclysm","SpiritualGarb","Skysoul","Dragonfire","Volcanic","NothernRage","FrostWyrm","Warden","HighRanger","Windcaller","Everspring","ShroomTender","Stormcaller","WispMother","Torrential","Snowstorm","Warlock","BloodBinder","PlagueMage","Coldhearted","Deathbringer","DemonLord","BurningHells","Desecrator","Masochist","Christmas","Master","allEnumValues","enumObject","key","SortOrder","FiltersType","EngineEnchants","engine","categories","_categoriesByTypes","enchantsPool","searchEngine","this","Minisearch","idField","fields","storeFields","hydrateEnchantsPool","removeAll","addAll","data","enchantsSearchIndex","filters","enchants","filterBySearch","filterByTypeAndCategory","type","filter","enchant","category","item","loaded","includes","rarity","enchantSlots","fixedEnchants","enchantsToRawEnchants","baseEnchants","isEmpty","search","resultingUuids","prefix","fuzzy","uuid","defaultCategory","defaultType","enchantsIds","skills","compact","enchantId","find","ranges","name","description","min","minimum","max","cap","reduce","memo","skillId","skill","s","EnchantsPoolData","hydratedPool","poolByEnchantType","itemType","categoriesByTypes","push","uniq","obj","sortFunction","a","sort","result","DEFAULT_RARITIES_FILTERS","FILTER_UNAFFECTED_CATEGORIES","EngineItems","typesByCategories","categoriesByType","_categoriesByType","itemsSearchIndex","items","filterByClass","filterByRarities","filterOnlySet","sortBy","set","sets","setItems","itemIds","itemId","characterClass","classRestriction","rarities","onlySet","orderBy","NameAsc","b","toUpperCase","NameDesc","LevelAsc","minLevel","LevelDesc","findKey","Engine","version","Items","Enchants","Skills","EngineSkills","undefined","loadData","default","onDataLoaded","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","useEngine","useContext","useStores","stores","allStores","MobXProviderContext","storeNames","length","forEach","storeName","store","IconName","Footer","className","target","rel","href","Icon","aria-label","src","alt","RouteId","RoutePath","Dropdown","element","callback","label","defaultValue","options","onChange","useState","showDropdown","setShowDropdown","value","currentValue","setCurrentValue","currentValueLabel","opt","dropdownRef","createRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","onClick","ArrowDownBlue","index","data-value","onSelect","DataStore","ROUTES_ID_MAPPING","Item","Enchant","Skill","Help","Developers","AVAILABLE_FILTERS_FOR_ROUTES","General","useFilters","filtersType","routes","filtersStore","Filters","history","useHistory","location","path","route","matchPath","autorun","replace","toQueryString","capitalize","Breakpoint","GameIconType","useResponsive","isUpToTablet","useMediaQuery","query","Tablet","MAIN_MENU_ITEMS","observer","setFilters","isMobileMenuOpen","setIsMobileMenuOpen","Menu","open","onClose","handler","placement","menuItem","menuRouteId","isCurrent","to","patch","patches","onPatchChange","DefaultLayout","children","BASE_PATH","ICONS_PATH","GameIcon","toLowerCase","Categories","baseCategory","baseType","selectedCategory","setSelectedCategory","selectedType","setSelectedType","onHandleClick","renderTypeMenu","renderCategories","enchantCategories","enchantCategory","enchantType","enchantTypes","isSelected","defaultEnchantCategory","onTypeSelect","ArrowRightBlue","Search","placeholder","inputValue","setInputValue","onDebouncedChange","useCallback","debounce","val","Badge","backgroundColor","isGem","camelCase","affixes","affix","finalNodes","replacedRanges","replaceWithJSX","_","i","replacedSkills","match","parseInt","skillName","getSkillById","renderDescription","renderRange","renderRanges","itemTypes","rolls","maximum","greaterCap","List","all","EnchantsPage","EnchantsPool","navItems","defaultItem","currentTab","setCurrentTab","React","navItem","hoverColor","borderColor","onTabClick","Children","node","ItemsEnchantsPool","getTypeEnchantsPool","availableEnchantTypes","pickBy","pool","currentEnchant","setCurrentEnchant","isString","reverse","renderPoolForType","getRunesEnchantsPool","AppliedEnchant","descriptionToTemplate","EnchantSlot","enchantSlot","prev","curr","ItemSet","setCollapsed","isCollapsed","setIsCollapsed","ArrowRightYellow","ArrowDownYellow","join","bonuses","bonus","piecesCount","toString","icon","itemEnchants","useMemo","getItemEnchantsSlots","itemSetData","getSetData","renderBaseEnchants","enchantForType","renderFixedEnchants","slot","renderEnchantsSlots","flavor","ItemDownloader","elementRef","renderItem","setRenderItem","download","blob","setBlob","setTimeout","toBlob","pixelRatio","saveAs","useAsDownloadableImage","opacity","title","display","transform","strokeOpacity","d","from","arrow","distance","offset","size","enableBackground","ItemTemplate","useParams","ArrowRightWhite","ItemPage","renderCategoryMenu","renderItemTypes","onItemTypeSelect","defaultItemType","onCategorySelect","CheckboxSelect","selected","setIsSelected","optionStyles","textShadow","borderStyles","boxShadow","Multiselect","defaultValues","selectedOptions","setSelectedOptions","option","newSelectedOptions","xor","onClickOption","raritiesOptions","classOptions","charClass","SortSelect","currentOrder","nameSortOrder","levelSortOrder","currentType","ItemsPage","useRef","createBrowserHistory","engineLoaded","setEngineLoaded","currentPatch","loadVersion","exact","component","FiltersStore","qs","parse","latestPatch","defaultPatch","general","itemsSearch","itemsCategory","itemsType","itemsCharacterClass","itemsRarities","itemsOrderBy","itemsOnlySet","enchantsSearch","enchantsType","enchantsCategory","skillsSearch","skillsCharacterClass","merge","has","filtersTypes","camelCaseKeys","flatten","pick","generalPatch","stringify","observable","action","computed","loadStores","App","setAllStores","setEngine","useAsync","loadStoresAndData","Provider","loadedStores","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configure","enforceActions","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.018bf4bd.chunk.js","sourcesContent":["var map = {\n\t\"./1.10.2/extracts\": [\n\t\t141,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 63;\nmodule.exports = webpackAsyncContext;","export enum CharacterClass {\n  All = 'All',\n  Warlock = 'Warlock',\n  Templar = 'Templar',\n  Berserker = 'Berserker',\n  Warden = 'Warden',\n}","import { CharacterClass } from 'types/Character.types';\n\nexport interface Item {\n  uuid: number,\n  name: string,\n  icon: string | null,\n  flavor?: string,\n  description?: string,\n  category: ItemCategory,\n  type: ItemType,\n  rarity: ItemRarity,\n  classRestriction: CharacterClass | null;\n  minLevel: number;\n  set: SetUuid | null;\n  baseEnchants: number[];\n  fixedEnchants: number[];\n}\n\nexport interface ItemSet {\n  uuid: SetUuid;\n  name: string;\n  itemIds: number[];\n  bonuses: Record<number, string>;\n}\n\nexport enum ItemRarity {\n  Ordinary = 'Ordinary',\n  Enchanted = 'Enchanted',\n  Rare = 'Rare',\n  Unique = 'Unique',\n  Legendary = 'Legendary',\n  TrueLegendary = 'True Legendary',\n  Mythical = 'Mythical'\n}\n\nexport enum ItemCategory {\n  Helmet = 'Helmet',\n  Armor = 'Armor',\n  Boots = 'Boots',\n  Weapon = 'Weapon',\n  Offhand = 'Offhand',\n  Ring = 'Ring',\n  Amulet = 'Amulet',\n  Accessory = 'Accessory',\n  Consumables = 'Consumables',\n  Gem = 'Gem',\n  Misc = 'Misc',\n  Craft = 'Craft'\n}\n\nexport enum ItemType {\n  Helm = 'Helm',\n  Armor = 'Armor',\n  Bow = 'Bow',\n  Sword = 'Sword',\n  Staff = 'Staff',\n  Fists = 'Fists',\n  Boots = 'Boots',\n  Accessory = 'Accessory',\n  Ring = 'Ring',\n  Amulet = 'Amulet',\n  Claw = 'Claw',\n  Arrow = 'Arrow',\n  Spellbook = 'Spellbook',\n  Shield = 'Shield',\n  Key = 'Key',\n  Tome = 'Tome',\n  Elixir = 'Elixir',\n  QuestItem = 'Quest Item',\n  SpecialItem = 'Special Item',\n  Scroll = 'Scroll',\n  Potion = 'Potion',\n  Container = 'Container',\n  CraftingMaterial = 'Crafting Material',\n  UnknownItem = 'Unknown Item',\n  Bag = 'Bag',\n  CubeGem = 'Cube Gem',\n  SphereGem = 'Sphere Gem',\n  StarGem = 'Star Gem',\n  Relic = 'Relic',\n  Rune = 'Item'\n}\n\nexport enum SetUuid {\n  SunAndMoon = 'sunandmoon',\n  Seeker = 'seeker',\n  Bond = 'bond',\n  AllForOne = 'element1',\n  OneForAll = 'element2',\n  Scout = 'scout',\n  Summoner = 'summoner',\n  Thief = 'thiefs',\n  Harverst = 'harvest',\n  WrathfulRevenge = 'thorns',\n  FuriousRetaliation = 'thorns2',\n  Challenger = 'challenger',\n  Valkyrie = 'valkyrie',\n  Reckoning = 'reckoning',\n  ThunderingArmy = 'thunderingarmy',\n  ThunderCharged = 'thundercharge',\n  Caines = 'caines',\n  Wargod = 'wargod',\n  Soulpurger = 'soulpurger',\n  Ayeela = 'ayeela',\n  Bloodsoak = 'bloodsoak',\n  Cataclysm = 'cataclysm',\n  Skysoul = 'soulsky',\n  SpiritualGarb = 'spiritgarb',\n  Volcanic = 'volcano',\n  Dragonfire = 'dragonfire',\n  NothernRage = 'northernrage',\n  FrostWyrm = 'frostwyrm',\n  BloodBinder = 'bloodbinder',\n  PlagueMage = 'plaguemage',\n  Coldhearted = 'coldhearted',\n  Deathbringer = 'deathbringers',\n  DemonLord = 'demonlord',\n  BurningHells = 'burninghell',\n  Desecrator = 'desecrators',\n  Masochist = 'masochists',\n  HighRanger = 'highranger',\n  Windcaller = 'windcaller',\n  ShroomTender = 'shroomtender',\n  Everspring = 'everspring',\n  Stormcaller = 'stormcaller',\n  WispMother = 'wispmother',\n  Torrential = 'torrent',\n  Snowstorm = 'snowstorm',\n  Christmas = 'xmas',\n  Master = 'masters',\n}\n","import { ItemRarity, ItemCategory, ItemType } from './Item.types';\n\nexport interface Enchant {\n  uuid: number;\n  name: string;\n  category: EnchantCategory;\n  type: EnchantType;\n  affixes?: string[];\n  description: string;\n  ranges: EnchantRanges;\n  items: number[];\n  itemTypes: ItemType[];\n  skills?: number[];\n}\n\nexport interface EnchantRanges {\n  [ItemRarity.Ordinary]: EnchantRangeBoundary;\n  [ItemRarity.Enchanted]: EnchantRangeBoundary;\n  [ItemRarity.Rare]: EnchantRangeBoundary;\n  [ItemRarity.Unique]: EnchantRangeBoundary;\n  [ItemRarity.Legendary]: EnchantRangeBoundary;\n  [ItemRarity.TrueLegendary]: EnchantRangeBoundary;\n  [ItemRarity.Mythical]: EnchantRangeBoundary;\n}\n\nexport interface EnchantRangeBoundary {\n  minimum: number;\n  maximum: number;\n  cap: number;\n  greaterCap: number;\n}\n\nexport enum EnchantType {\n  Minor = 'Minor',\n  Major = 'Major',\n  Epic = 'Epic',\n  Legendary = 'Legendary'\n}\n\nexport enum EnchantCategory {\n  Power = 'Power',\n  Enchant = 'Enchant',\n  Gem = 'Gem',\n  Rune = 'Rune'\n}\n\nexport interface SimpleEnchant {\n  uuid: number;\n  name: string;\n  description: string;\n  min: number;\n  max: number;\n  skills?: Record<number, string>;\n}\n\nexport interface ItemEnchantSlot{\n  count: number;\n  types: EnchantType[]; // If multiple element it's an OR\n  categoriesRestriction?: ItemCategory[];\n}\n\nexport interface ItemEnchantSlots {\n  baseEnchants: SimpleEnchant[];\n  fixedEnchants: SimpleEnchant[];\n  enchantSlots?: ItemEnchantSlot[];\n}\n\nexport type CraftableEnchantTypes = EnchantType.Epic | EnchantType.Major | EnchantType.Minor;\nexport type EnchantPoolType = Record<CraftableEnchantTypes, number[]>;\nexport type EnchantsPool = Record<ItemType, EnchantPoolType>\n","import React, { FunctionComponent } from 'react';\n\ninterface Props {\n  width: number;\n  height: number;\n  color: string;\n}\n\nconst Loader: FunctionComponent<Props> = ({\n  width,\n  height,\n  color,\n}) => {\n  return (\n    <div style={{ position: 'absolute', top: `calc(45% - ${height / 2}px)`, left: `calc(50% - ${width / 2}px)` }}>\n      <svg width={`${width}`} height={`${height}`} viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\" stroke={color}>\n        <g fill=\"none\" fillRule=\"evenodd\" strokeWidth=\"2\">\n          <circle cx=\"22\" cy=\"22\" r=\"1\">\n            <animate attributeName=\"r\"\n              begin=\"0s\" dur=\"1.8s\"\n              values=\"1; 20\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.165, 0.84, 0.44, 1\"\n              repeatCount=\"indefinite\" />\n            <animate attributeName=\"stroke-opacity\"\n              begin=\"0s\" dur=\"1.8s\"\n              values=\"1; 0\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.3, 0.61, 0.355, 1\"\n              repeatCount=\"indefinite\" />\n          </circle>\n          <circle cx=\"22\" cy=\"22\" r=\"1\">\n            <animate attributeName=\"r\"\n              begin=\"-0.9s\" dur=\"1.8s\"\n              values=\"1; 20\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.165, 0.84, 0.44, 1\"\n              repeatCount=\"indefinite\" />\n            <animate attributeName=\"stroke-opacity\"\n              begin=\"-0.9s\" dur=\"1.8s\"\n              values=\"1; 0\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.3, 0.61, 0.355, 1\"\n              repeatCount=\"indefinite\" />\n          </circle>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default Loader;","import { createContext } from 'react';\n\nimport Engine from 'engine/Engine';\n\n/* Ugly but the engine context will be set for sure in the App and it is not supposed to be null\n * We could create a new Engine() to discard it right afterwards but that'd be worse in term of memory\n */\nconst EngineContext = createContext<Engine>(null as unknown as Engine);\n\nexport default EngineContext;\n","import { CharacterClass } from '../../types/Character.types';\nimport { EnchantType, ItemEnchantSlot } from '../../types/Enchant.types';\nimport { ItemCategory, SetUuid, ItemType, ItemRarity } from '../../types/Item.types';\n\nexport const EpicEnchantableCategories: ItemCategory[] = [ItemCategory.Ring, ItemCategory.Amulet];\nexport const EnchantableCategories: ItemCategory[] = [\n  ItemCategory.Ring,\n  ItemCategory.Amulet,\n  ItemCategory.Accessory,\n  ItemCategory.Armor,\n  ItemCategory.Boots,\n  ItemCategory.Helmet,\n  ItemCategory.Offhand,\n  ItemCategory.Weapon,\n];\n\nexport const ENCHANT_SLOTS_BY_RARITY: Record<ItemRarity, ItemEnchantSlot[]> = {\n  [ItemRarity.Ordinary]: [],\n  [ItemRarity.Enchanted]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor, EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n  ],\n  [ItemRarity.Rare]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Unique]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Legendary]: [\n    {\n      count: 2,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.TrueLegendary]: [\n    {\n      count: 2,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Mythical]: [],\n};\n\nexport const ITEM_TYPES_BY_CATEGORIES: Record<ItemCategory, ItemType[]> = {\n  [ItemCategory.Helmet]: [ItemType.Helm],\n  [ItemCategory.Armor]: [ItemType.Armor],\n  [ItemCategory.Boots]: [ItemType.Boots],\n  [ItemCategory.Weapon]: [\n    ItemType.Bow,\n    ItemType.Sword,\n    ItemType.Staff,\n    ItemType.Fists,\n  ],\n  [ItemCategory.Offhand]: [\n    ItemType.Spellbook,\n    ItemType.Shield,\n    ItemType.Tome,\n    ItemType.Claw,\n    ItemType.Arrow,\n  ],\n  [ItemCategory.Ring]: [ItemType.Ring],\n  [ItemCategory.Amulet]: [ItemType.Amulet],\n  [ItemCategory.Accessory]: [ItemType.Accessory],\n  [ItemCategory.Gem]: [\n    ItemType.CubeGem,\n    ItemType.StarGem,\n    ItemType.SphereGem,\n  ],\n  [ItemCategory.Consumables]: [\n    ItemType.Elixir,\n    ItemType.Potion,\n    ItemType.Scroll,\n    ItemType.Relic,\n  ],\n  [ItemCategory.Misc]: [\n    ItemType.Key,\n    ItemType.QuestItem,\n    ItemType.SpecialItem,\n    ItemType.Container,\n    ItemType.UnknownItem,\n    ItemType.Bag,\n  ],\n  [ItemCategory.Craft]: [\n    ItemType.CraftingMaterial,\n    ItemType.Rune,\n  ],\n};\n\nexport const SETS_BY_CLASS: Record<CharacterClass, SetUuid[]> = {\n  [CharacterClass.All]: [\n    SetUuid.Scout,\n    SetUuid.WrathfulRevenge,\n    SetUuid.Seeker,\n    SetUuid.Challenger,\n    SetUuid.Thief,\n    SetUuid.Bond,\n    SetUuid.Harverst,\n    SetUuid.Summoner,\n    SetUuid.SunAndMoon,\n    SetUuid.FuriousRetaliation,\n    SetUuid.AllForOne,\n    SetUuid.OneForAll,\n  ],\n  [CharacterClass.Templar]: [\n    SetUuid.Reckoning,\n    SetUuid.Valkyrie,\n    SetUuid.ThunderCharged,\n    SetUuid.ThunderingArmy,\n    SetUuid.Caines,\n    SetUuid.Wargod,\n    SetUuid.Ayeela,\n    SetUuid.Soulpurger,\n  ],\n  [CharacterClass.Berserker]: [\n    SetUuid.Bloodsoak,\n    SetUuid.Cataclysm,\n    SetUuid.SpiritualGarb,\n    SetUuid.Skysoul,\n    SetUuid.Dragonfire,\n    SetUuid.Volcanic,\n    SetUuid.NothernRage,\n    SetUuid.FrostWyrm,\n  ],\n  [CharacterClass.Warden]: [\n    SetUuid.HighRanger,\n    SetUuid.Windcaller,\n    SetUuid.Everspring,\n    SetUuid.ShroomTender,\n    SetUuid.Stormcaller,\n    SetUuid.WispMother,\n    SetUuid.Torrential,\n    SetUuid.Snowstorm,\n  ],\n  [CharacterClass.Warlock]: [\n    SetUuid.BloodBinder,\n    SetUuid.PlagueMage,\n    SetUuid.Coldhearted,\n    SetUuid.Deathbringer,\n    SetUuid.DemonLord,\n    SetUuid.BurningHells,\n    SetUuid.Desecrator,\n    SetUuid.Masochist,\n  ],\n};\n\nexport const ITEM_ID_BY_SETS: Record<SetUuid, number[]> = {\n  [SetUuid.SunAndMoon]: [504, 505],\n  [SetUuid.Seeker]: [331, 332, 333],\n  [SetUuid.Bond]: [496, 497],\n  [SetUuid.AllForOne]: [502, 503],\n  [SetUuid.OneForAll]: [500, 501],\n  [SetUuid.Scout]:  [151, 327, 328],\n  [SetUuid.Summoner]: [510, 511, 512, 513],\n  [SetUuid.Thief]: [494, 495],\n  [SetUuid.Harverst]:  [498, 499],\n  [SetUuid.WrathfulRevenge]: [329, 330, 149],\n  [SetUuid.FuriousRetaliation]: [506, 507, 508, 509],\n  [SetUuid.Challenger]: [334, 335, 336],\n  [SetUuid.Valkyrie]: [547, 548, 549, 550],\n  [SetUuid.Reckoning]: [376, 377, 378, 379],\n  [SetUuid.ThunderingArmy]: [539, 540, 541, 542],\n  [SetUuid.ThunderCharged]: [123, 134, 318, 326],\n  [SetUuid.Caines]: [372, 373, 374, 375],\n  [SetUuid.Wargod]: [543, 544, 545, 546],\n  [SetUuid.Soulpurger]: [535, 536, 537, 538],\n  [SetUuid.Ayeela]: [124, 323, 324, 325],\n  [SetUuid.Bloodsoak]: [91, 100, 337, 556],\n  [SetUuid.Cataclysm]: [552, 553, 554, 555],\n  [SetUuid.Skysoul]: [557, 558, 559, 560],\n  [SetUuid.SpiritualGarb]: [380, 381, 382, 383],\n  [SetUuid.Volcanic]: [562, 563, 564, 565],\n  [SetUuid.Dragonfire]: [102, 339, 340, 561],\n  [SetUuid.NothernRage]: [384, 385, 386, 566],\n  [SetUuid.FrostWyrm]: [567, 568, 569, 570],\n  [SetUuid.BloodBinder]: [368, 369, 370, 594],\n  [SetUuid.PlagueMage]: [598, 599, 600, 601],\n  [SetUuid.Coldhearted]: [113, 321, 322, 596],\n  [SetUuid.Deathbringer]: [606, 607, 608, 609],\n  [SetUuid.DemonLord]: [112, 118, 319, 595],\n  [SetUuid.BurningHells]: [602, 603, 604, 605],\n  [SetUuid.Desecrator]: [364, 365, 366, 597],\n  [SetUuid.Masochist]: [610, 611, 612, 613],\n  [SetUuid.HighRanger]: [142, 341, 342, 343],\n  [SetUuid.Windcaller]: [576, 577, 578, 579],\n  [SetUuid.ShroomTender]: [585, 586, 587, 588],\n  [SetUuid.Everspring]: [388, 389, 390, 391],\n  [SetUuid.Stormcaller]: [74, 139, 140, 580],\n  [SetUuid.WispMother]: [581, 582, 583, 584],\n  [SetUuid.Torrential]: [590, 591, 592, 593],\n  [SetUuid.Snowstorm]: [392, 393, 394, 589],\n  [SetUuid.Christmas]: [716, 717, 718, 719, 720],\n  [SetUuid.Master]: [776, 616],\n};\n","export function enumToObject<T extends Record<string, unknown>, V>(enumObject: T, value: V) {\n  const obj: Partial<Record<keyof T, V>> = {};\n\n  Object.keys(enumObject).forEach((key) => {\n    obj[key as keyof T] = value;\n  });\n\n  return obj as Record<keyof T, V>;\n}\n\nexport function allEnumValues<T>(enumObject: Record<string, T>): T[] {\n  return Object\n    .keys(enumObject)\n    .map(key => enumObject[key]);\n}\n\nexport function isInEnum<T>(enumObject: Record<string, T>, value: T): boolean {\n  return Object.values(enumObject).includes(value);\n}\n\nexport type DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};","export enum SortOrder {\n  NameAsc = 'nameAsc',\n  NameDesc = 'nameDesc',\n  LevelAsc = 'levelAsc',\n  LevelDesc = 'levelDesc',\n}\n\nexport interface GeneralFilters {\n  patch: string;\n}\n\nexport interface ItemsFilters {\n  search?: string;\n  category?: string;\n  type?: string;\n  characterClass?: string;\n  rarities?: string[];\n  onlySet?: boolean;\n  orderBy?: SortOrder;\n}\n\nexport interface EnchantsFilters {\n  search?: string;\n  type?: string;\n  category?: string;\n}\n\nexport interface SkillsFilters {\n  search?: string;\n  characterClass?: string;\n}\n\nexport interface Filters {\n  general: GeneralFilters;\n  items: ItemsFilters;\n  enchants: EnchantsFilters;\n  skills: SkillsFilters;\n}\n\n/* Flattened filters */\nexport type QueryFiltersInterface = {\n  patch: string;\n  itemsSearch?: string;\n  itemsCategory?: string;\n  itemsType?: string;\n  itemsCharacterClass?: string;\n  itemsRarities?: string[];\n  itemsOnlySet?: string;\n  itemsOrderBy?: string;\n  enchantsSearch?: string;\n  enchantsType?: string;\n  enchantsCategory?: string;\n  skillsSearch?: string;\n  skillsCharacterClass: string;\n}\n\nexport enum FiltersType {\n  General = 'general',\n  Items = 'items',\n  Enchants = 'enchants',\n  Skills = 'skills'\n}\n","import { compact, isEmpty, reduce, uniq } from 'lodash';\nimport Minisearch from 'minisearch';\n\nimport { ENCHANT_SLOTS_BY_RARITY } from 'engine/data/dataMappings';\nimport EnchantsPoolData from 'engine/data/enchantsPool.json';\nimport { sortObject } from 'helpers/objectUtils';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport {\n  ItemEnchantSlots,\n  SimpleEnchant,\n  EnchantType,\n  Enchant,\n  EnchantCategory,\n  CraftableEnchantTypes,\n  EnchantsPool,\n  EnchantPoolType,\n} from 'types/Enchant.types';\nimport { EnchantsFilters } from 'types/Filters.types';\nimport { ItemRarity, Item, ItemType } from 'types/Item.types';\n\nimport Engine, { DataInterface } from './Engine';\n\ntype HydratedPoolType = Record<CraftableEnchantTypes, Enchant[]>\ntype HydratedEnchantsPool = Record<ItemType, HydratedPoolType>;\n\nexport default class EngineEnchants {\n  public readonly engine: Engine;\n  public categories: EnchantCategory[];\n  public types: EnchantType[];\n  private _categoriesByTypes?: Record<EnchantType, EnchantCategory[]>;\n  private enchantsPool!: HydratedEnchantsPool;\n  private searchEngine: Minisearch;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.categories = allEnumValues(EnchantCategory);\n    this.types = allEnumValues(EnchantType);\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: ['name', 'category', 'description', 'itemTypes', 'itemCategories'],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.enchantsPool = this.hydrateEnchantsPool();\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.enchantsSearchIndex);\n  }\n\n  /* Methods */\n  public all(filters: EnchantsFilters): Enchant[] {\n    let enchants = this.enchants;\n\n    enchants = this.filterBySearch(enchants, filters);\n    enchants = this.filterByTypeAndCategory(enchants, filters);\n\n    return enchants;\n  }\n  public getTypeEnchantsPool(type: ItemType): HydratedPoolType | null {\n    return this.enchantsPool[type] || null;\n  }\n\n  public getRunesEnchantsPool(): Enchant[] {\n    return this.enchants.filter(enchant => enchant.category === EnchantCategory.Rune);\n  }\n\n  public getItemEnchantsSlots(item: Item): ItemEnchantSlots | null {\n    if (this.engine.loaded && ![ItemRarity.Mythical].includes(item.rarity)) {\n      const enchantSlots = ENCHANT_SLOTS_BY_RARITY[item.rarity];\n      const fixedEnchants = this.enchantsToRawEnchants(item.rarity, item.fixedEnchants);\n      const baseEnchants = this.enchantsToRawEnchants(item.rarity, item.baseEnchants);\n\n      if (isEmpty(enchantSlots) && isEmpty(fixedEnchants) && isEmpty(baseEnchants)) {\n        return null;\n      } else {\n        return {\n          enchantSlots,\n          fixedEnchants,\n          baseEnchants,\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  private get enchants(): Enchant[] {\n    if (this.engine.loaded) {\n      return this.data.enchants;\n    }\n\n    return [];\n  }\n\n  public get defaultType(): EnchantType {\n    return Object.keys(this.categoriesByTypes)[0] as EnchantType;\n  }\n\n  public get defaultCategory(): EnchantCategory {\n    return this.categoriesByTypes[this.defaultType][0];\n  }\n\n  public get categoriesByTypes(): Record<EnchantType, EnchantCategory[]> {\n    if (!this._categoriesByTypes) {\n      const enchants = this.enchants.reduce((memo: Record<string, string[]>, enchant: Enchant) => {\n        if (enchant.type === 'Gem' as EnchantType) {\n          return memo;\n        }\n\n        if (memo[enchant.type]) {\n          memo[enchant.type].push(enchant.category);\n          memo[enchant.type] = uniq(memo[enchant.type]);\n        } else {\n          memo[enchant.type] = [];\n        }\n\n        return memo;\n      }, {});\n\n      enchants[EnchantType.Major].push(EnchantCategory.Gem);\n      this._categoriesByTypes = sortObject(enchants, (a) => {\n        if (a === EnchantType.Minor) {\n          return 1;\n        }\n        return -1;\n      }) as Record<EnchantType, EnchantCategory[]>;\n    }\n\n    return this._categoriesByTypes;\n  }\n\n  /* Private */\n  private filterBySearch(enchants: Enchant[], filters: EnchantsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine.search(filters.search, {\n        prefix: true,\n        fuzzy: 0.2,\n      }).map(r => r.uuid);\n\n      return enchants.filter(enchant => resultingUuids.includes(enchant.uuid));\n    }\n\n    return enchants;\n  }\n\n  private filterByTypeAndCategory(enchants: Enchant[], filters: EnchantsFilters) {\n    if (filters.category === 'Any' || filters.type === 'Any') {\n      return enchants;\n    } else {\n      const category = (filters.category || this.defaultCategory) as EnchantCategory;\n      const type = (category === EnchantCategory.Gem ? 'Gem' : (filters.type || this.defaultType)) as EnchantType;\n\n      return enchants.filter(enchant => enchant.type === type && enchant.category === category);\n    }\n  }\n\n  /* Private utils */\n  private enchantsToRawEnchants(rarity: ItemRarity, enchantsIds: number[]): SimpleEnchant[] {\n    const { skills } = this.data;\n\n    return compact(\n      enchantsIds.map(enchantId => this.enchants.find(e => e.uuid === enchantId))\n    ).map((enchant) => {\n      const ranges = enchant.ranges[rarity];\n\n      return {\n        uuid: enchant.uuid,\n        name: enchant.name,\n        description: enchant.description,\n        min: ranges.minimum,\n        max: ranges.cap,\n        skills: enchant.skills?.reduce((memo: Record<number, string>, skillId) => {\n          const skill = skills.find(s => s.uuid === skillId);\n          memo[skillId] = skill?.name || 'Unknown Skill';\n          return memo;\n        }, {}),\n      };\n    });\n  }\n\n  private hydrateEnchantsPool(): HydratedEnchantsPool {\n    const enchantsPool = EnchantsPoolData as unknown as EnchantsPool;\n\n    // @ts-ignore\n    return reduce(enchantsPool, (hydratedPool: HydratedEnchantsPool, poolByEnchantType: EnchantPoolType, itemType: ItemType) => {\n      hydratedPool[itemType] = {\n        [EnchantType.Epic]: compact(poolByEnchantType[EnchantType.Epic].map(uuid => this.enchants.find(e => e.uuid === uuid))),\n        [EnchantType.Major]: compact(poolByEnchantType[EnchantType.Major].map(uuid => this.enchants.find(e => e.uuid === uuid))),\n        [EnchantType.Minor]: compact(poolByEnchantType[EnchantType.Minor].map(uuid => this.enchants.find(e => e.uuid === uuid))),\n      };\n      return hydratedPool;\n    }, {});\n  }\n}\n","export function sortObject<T extends Record<string, unknown>>(obj: T, sortFunction: (a: string, b: string) => number): T {\n  return Object.keys(obj).sort(sortFunction).reduce((result: Record<string, unknown>, key) => {\n    result[key] = obj[key];\n    return result;\n  }, {}) as T;\n}","import { compact, findKey } from 'lodash';\nimport Minisearch from 'minisearch';\n\nimport { ITEM_TYPES_BY_CATEGORIES } from 'engine/data/dataMappings';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport { CharacterClass } from 'types/Character.types';\nimport { ItemsFilters, SortOrder } from 'types/Filters.types';\nimport { ItemCategory, ItemType, Item, ItemRarity, ItemSet } from 'types/Item.types';\n\nimport Engine, { DataInterface } from './Engine';\n\nexport interface ItemSetData extends ItemSet {\n  items: Item[];\n  types: ItemType[];\n}\n\nexport const DEFAULT_RARITIES_FILTERS = [\n  ItemRarity.Unique,\n  ItemRarity.Legendary,\n  ItemRarity.TrueLegendary,\n];\n\nconst FILTER_UNAFFECTED_CATEGORIES = [\n  'Any',\n  ItemCategory.Consumables,\n  ItemCategory.Craft,\n  ItemCategory.Gem,\n  ItemCategory.Misc,\n];\n\nexport default class EngineItems {\n  public readonly engine: Engine;\n  public categories: ItemCategory[];\n  public types: ItemType[];\n  public typesByCategories: Record<ItemCategory, ItemType[]>;\n  public categoriesByType: Record<ItemType, ItemCategory>;\n  private searchEngine: Minisearch;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.types = allEnumValues(ItemType);\n    this.categories = allEnumValues(ItemCategory);\n    this.typesByCategories = ITEM_TYPES_BY_CATEGORIES;\n    this.categoriesByType = this._categoriesByType();\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: ['name', 'classRestriction', 'enchants', 'setName', 'setBonuses'],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.itemsSearchIndex);\n  }\n\n  /* Methods */\n  public all(filters: ItemsFilters): Item[] {\n    let items = this.items;\n\n    items = this.filterBySearch(items, filters);\n    items = this.filterByTypeAndCategory(items, filters);\n    items = this.filterByClass(items, filters);\n    items = this.filterByRarities(items, filters);\n    items = this.filterOnlySet(items, filters);\n    items = this.sortBy(items, filters);\n\n    return items;\n  }\n\n  public find(uuid: number): Item | null {\n    return this.items.find(item => item.uuid === uuid) || null;\n  }\n\n  public getSetData(item: Item): ItemSetData | null {\n    if (item.set) {\n      const set = this.data.sets.find(set => set.uuid === item.set);\n\n      if (set) {\n        const setItems = compact(set.itemIds.map(itemId => this.items.find(item => item.uuid === itemId)));\n        return {\n          ...set,\n          items: setItems,\n          types: setItems.map(item => item.type),\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  private get items(): Item[] {\n    if (this.engine.loaded) {\n      return this.data.items;\n    }\n\n    return [];\n  }\n\n  public get defaultCategory(): ItemCategory {\n    return this.categories[0];\n  }\n\n  public get defaultType(): ItemType {\n    return this.typesByCategories[this.defaultCategory][0];\n  }\n\n  /* Private */\n  private filterBySearch(items: Item[], filters: ItemsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine.search(filters.search, {\n        prefix: true,\n        fuzzy: 0.2,\n      }).map(r => r.uuid);\n\n      return items.filter(item => resultingUuids.includes(item.uuid));\n    }\n\n    return items;\n  }\n\n  private filterByTypeAndCategory(items: Item[], filters: ItemsFilters) {\n    if (filters.category === 'Any' || filters.type === 'Any') {\n      return items;\n    } else {\n      const category = (filters.category || this.defaultCategory) as ItemCategory;\n      const type = (filters.type || this.defaultType) as ItemType;\n\n      return items.filter(item => item.type === type && item.category === category);\n    }\n  }\n\n  private filterByClass(items: Item[], filters: ItemsFilters) {\n    // If we have a category and it's a category that should not be affected by rarity\n    if (filters.category && FILTER_UNAFFECTED_CATEGORIES.includes(filters.category)) {\n      return items;\n    }\n\n    // For all others categories, filter by rarity\n    if (filters.characterClass && filters.characterClass !== CharacterClass.All) {\n      return items.filter(item => filters.characterClass === item.classRestriction);\n    }\n\n    return items;\n  }\n\n  private filterByRarities(items: Item[], filters: ItemsFilters) {\n    // Don't use this filter for unaffected categories\n    if (FILTER_UNAFFECTED_CATEGORIES.includes(filters.category || this.defaultCategory)) {\n      // Don't return mythical items anyway if it is unselected\n      if (!filters.rarities?.includes(ItemRarity.Mythical)) {\n        return items.filter(item => item.rarity !== ItemRarity.Mythical);\n      } else {\n        return items;\n      }\n    }\n\n    // For all others categories, filter by rarity\n    if (filters.rarities) {\n      return items.filter(item => filters.rarities?.includes(item.rarity));\n    } else {\n      return items.filter(item => DEFAULT_RARITIES_FILTERS.includes(item.rarity));\n    }\n  }\n\n  private filterOnlySet(items: Item[], filters: ItemsFilters) {\n    // Don't use this filter for unaffected categories\n    if (FILTER_UNAFFECTED_CATEGORIES.includes(filters.category || this.defaultCategory)) {\n      return items;\n    }\n\n    if (filters.onlySet) {\n      return items.filter(item => !!item.set);\n    }\n\n    return items;\n  }\n\n  private sortBy(items: Item[], filters: ItemsFilters) {\n    if (!filters.orderBy) {\n      return items;\n    }\n\n    switch (filters.orderBy) {\n      case SortOrder.NameAsc:\n        return items.sort((a, b) => {\n          const [nameA, nameB] = [a.name.toUpperCase(), b.name.toUpperCase()];\n          return nameA < nameB ? -1 : 1;\n        });\n      case SortOrder.NameDesc:\n        return items.sort((a, b) => {\n          const [nameA, nameB] = [a.name.toUpperCase(), b.name.toUpperCase()];\n          return nameA < nameB ? 1 : -1;\n        });\n      case SortOrder.LevelAsc:\n        return items.sort((a, b) => a.minLevel - b.minLevel);\n      case SortOrder.LevelDesc:\n        return items.sort((a, b) => -(a.minLevel - b.minLevel));\n      default:\n        return items;\n    }\n  }\n\n  private _categoriesByType(): Record<ItemType, ItemCategory> {\n    // @ts-ignore\n    return this.types.reduce((memo: Record<ItemType, ItemCategory>, type) => {\n      memo[type] = findKey(this.typesByCategories, types =>\n        types.includes(type)\n      ) as ItemCategory;\n\n      return memo;\n    }, {});\n  }\n}\n","import { Skill } from 'types/Skill.types';\n\nimport Engine, { DataInterface } from './Engine';\n\n\nexport default class EngineEnchants {\n  public readonly engine: Engine;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n  }\n\n  public onDataLoaded() {\n    //\n  }\n\n  getSkillById(uuid: number): Skill | null {\n    return this.data.skills.find(skill => skill.uuid === uuid) || null;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n}\n","import { CharacterClass } from 'types/Character.types';\nimport { Enchant } from 'types/Enchant.types';\nimport { Item, ItemSet } from 'types/Item.types';\nimport { Skill, SkillTree } from 'types/Skill.types';\n\nimport EngineEnchants from './EngineEnchants';\nimport EngineItems from './EngineItems';\nimport EngineSkills from './EngineSkills';\n\ntype Version = string;\n\nexport interface DataInterface {\n  items: Item[];\n  enchants: Enchant[];\n  sets: ItemSet[];\n  skills: Skill[];\n  skillsByClass: Record<CharacterClass, Record<SkillTree, Skill[]>>;\n  itemsSearchIndex: Record<string, string | number>[];\n  enchantsSearchIndex: Record<string, string | number>[];\n  skillsSearchIndex: Record<string, string | number>[];\n}\n\n/* Singleton */\nexport default class Engine {\n  public version!: Version;\n  public data?: DataInterface;\n\n  public readonly Items!: EngineItems;\n  public readonly Enchants!: EngineEnchants;\n  public readonly Skills!: EngineSkills;\n\n  constructor(version: Version) {\n    this.version = version;\n    this.Items = new EngineItems(this);\n    this.Enchants = new EngineEnchants(this);\n    this.Skills = new EngineSkills(this);\n  }\n\n  public get loaded(): boolean {\n    return !!this.data;\n  }\n\n  public async loadVersion(version: Version) {\n    if (version !== this.version) {\n      this.data = undefined;\n      this.version = version;\n      await this.loadData();\n    }\n  }\n\n  public async loadData() {\n    this.data = (await import(`./data/${this.version}/extracts`)).default;\n    this.Items.onDataLoaded();\n    this.Enchants.onDataLoaded();\n  }\n}","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nconst ScrollToTop: React.FunctionComponent = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import { useContext } from 'react';\n\nimport EngineContext from 'engine/context';\nimport Engine from 'engine/Engine';\n\nexport default function useEngine(): Engine {\n  const engine = useContext(EngineContext);\n\n  return engine;\n}","import { useContext } from 'react';\n\nimport { MobXProviderContext } from 'mobx-react';\n\nimport { Stores } from 'types/DataStore.types';\n\n/**\n * Use MobX stores provided by the MobX context\n *\n * @param {DataStore} [storeNames] list of DataStores to be returned. Values can be taken from the `DataStore` enum. If left empty all available stores are returned\n */\nexport function useStores<StoresData extends Partial<Stores>>(...storeNames: (keyof StoresData)[]): StoresData {\n  const allStores: StoresData = useContext(MobXProviderContext) as StoresData;\n  let stores: StoresData;\n\n  if (storeNames && storeNames.length) {\n    stores = {} as StoresData;\n    storeNames.forEach((storeName) => {\n      const store = allStores[storeName];\n      if (!store) {\n        throw new Error(`Attempting to get an in-existant MobX store: ${storeName}`);\n      }\n\n      stores[storeName] = store;\n    });\n  } else {\n    stores = allStores;\n  }\n\n  return stores;\n}\n","import React, { FunctionComponent } from 'react';\n\nexport enum IconName {\n  ArrowDownBlue = 'arrow_down_blue',\n  ArrowDownPurple = 'arrow_down_purple',\n  ArrowDownYellow = 'arrow_down_yellow',\n  ArrowDownWhite = 'arrow_down_white',\n  ArrowRightBlue = 'arrow_right_blue',\n  ArrowRightPurple = 'arrow_right_purple',\n  ArrowRightYellow = 'arrow_right_yellow',\n  ArrowRightWhite = 'arrow_right_white',\n  ArrowUpBlue = 'arrow_up_blue',\n  Copy = 'copy',\n  Link = 'link',\n  Search = 'search',\n  Menu = 'menu'\n}\n\nconst SVG_PATH = 'assets/images/icons';\n\nexport interface Props {\n  id?: string;\n  className?: string;\n  name: IconName;\n  width?: number;\n  height?: number;\n}\n\nconst Icon: FunctionComponent<Props> = ({\n  id,\n  className,\n  name,\n  width,\n  height,\n}) =>  (\n  <img\n    aria-label={name}\n    src={`/${SVG_PATH}/${name}.svg`}\n    width={width}\n    height={height}\n    alt={name}\n    id={id}\n    className={className}\n  />\n);\n\nexport default Icon;\n","import React, { FunctionComponent } from 'react';\n\nimport './Footer.scss';\n\nconst Footer: FunctionComponent = () => {\n  return (\n    <footer className=\"o-footer\">\n      <span className=\"o-footer-item made-with\">\n        Made with&nbsp;&nbsp;❤️\n      </span>\n      <span className=\"o-footer__separator\">|</span>\n      <span className=\"o-footer-item issues\">\n        Noticed an <strong>issue?</strong> Tell me all about it&nbsp;\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/gabriel-dehan/chronicondb-client/issues\"\n        >\n          here.\n        </a>\n      </span>\n      <span className=\"o-footer__separator\">|</span>\n      <span className=\"o-footer-item source-code\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/gabriel-dehan/chronicondb-client\"\n        >\n          Source code\n        </a>\n      </span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export enum RouteId {\n  Items = 'items',\n  Item = 'item',\n  Enchants  = 'enchants',\n  Enchant  = 'enchant',\n  Skills = 'skills',\n  Skill = 'skill',\n  Help = 'help',\n  Developers = 'developers',\n}\n\nexport enum RoutePath {\n  Items = '/items',\n  Item = '/item/:uuid',\n  Enchants = '/enchants',\n  Enchant = '/enchant/:uuid',\n  Skills = '/skills',\n  Skill = '/skill/:uuid',\n  Help = '/help',\n  Developers = '/developers',\n}\n\ninterface RoutesMapping {\n  [key: string]: RouteId;\n}\n\nexport const ROUTES_ID_MAPPING: RoutesMapping = {\n  [RoutePath.Items]: RouteId.Items,\n  [RoutePath.Item]: RouteId.Item,\n  [RoutePath.Enchants]: RouteId.Enchants,\n  [RoutePath.Enchant]: RouteId.Enchant,\n  [RoutePath.Skills]: RouteId.Skills,\n  [RoutePath.Skill]: RouteId.Skill,\n  [RoutePath.Help]: RouteId.Help,\n  [RoutePath.Developers]: RouteId.Developers,\n};\n","import React, { FunctionComponent, useState, createRef } from 'react';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nimport './Dropdown.scss';\n\nexport interface DropdownOption {\n  label: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  id?: string;\n  className?: string;\n  label: string;\n  defaultValue?: string;\n  options: DropdownOption[];\n  onChange: (value: string) => void;\n}\n\nconst Dropdown: FunctionComponent<DropdownProps> = ({\n  id,\n  className,\n  label,\n  defaultValue,\n  options,\n  onChange,\n}) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [currentValue, setCurrentValue] = useState(defaultValue || options[0].value);\n  const currentValueLabel = options.find(opt => opt.value === currentValue)?.label || defaultValue;\n  const dropdownRef = createRef<HTMLDivElement>();\n\n  useOnClickOutside(dropdownRef, onClickOutside);\n\n  return (\n    <div\n      id={id}\n      className={`a-dropdown ${className ? className : ''}`}\n      ref={dropdownRef}\n    >\n      <div className=\"a-dropdown__container\">\n        <div\n          className=\"a-dropdown__trigger\"\n          onClick={toggleDropdown}\n        >\n          <span className=\"a-dropdown__trigger-label\">{label}</span>\n          <span className=\"a-dropdown__trigger-value\">{currentValueLabel}</span>\n          <div className=\"a-dropdown__icon\"><Icon name={IconName.ArrowDownBlue} width={16} height={8} /></div>\n        </div>\n        <div className={`a-dropdown__options ${showDropdown ? 'open' : ''}`}>\n          {options.map(({ value, label }, index) => (\n            <span\n              key={`dropdown-${value}-${index}`}\n              className={`a-dropdown__option ${value === currentValue ? 'selected' : ''}`}\n              data-value={value}\n              onClick={() => onSelect(value)}\n            >\n              {label}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  function onSelect(value: string) {\n    setCurrentValue(value);\n    setShowDropdown(false);\n    onChange(value);\n  }\n\n  function toggleDropdown() {\n    setShowDropdown(!showDropdown);\n  }\n\n  function onClickOutside() {\n    if (showDropdown) {\n      setShowDropdown(false);\n    }\n  }\n};\n\nexport default Dropdown;","import { useEffect, RefObject } from 'react';\n\nexport default function useOnClickOutside(\n  element: RefObject<HTMLElement>,\n  callback: (event: MouseEvent) => void\n) {\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (element.current && !element.current.contains(event.target as Node)) {\n        callback(event);\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [element, callback]);\n}","import { FiltersStore } from 'stores/FiltersStore';\n\nexport enum DataStore {\n  Filters = 'filtersStore'\n}\n\nexport interface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { useHistory, useLocation, matchPath } from 'react-router-dom';\n\nimport { capitalize } from 'lodash';\nimport { autorun } from 'mobx';\n\nimport { allEnumValues } from 'helpers/typeUtils';\nimport { useStores } from 'hooks/useStores';\nimport { RoutePath } from 'routes';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\nimport {\n  GeneralFilters,\n  ItemsFilters,\n  EnchantsFilters,\n  SkillsFilters,\n  FiltersType,\n} from 'types/Filters.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\ntype useFiltersInterface<T> = [T, (params: T) => void];\n\nconst AVAILABLE_FILTERS_FOR_ROUTES: Record<RoutePath, FiltersType[]> = {\n  [RoutePath.Items]: [FiltersType.General, FiltersType.Items],\n  [RoutePath.Item]: [],\n  [RoutePath.Enchants]: [FiltersType.General, FiltersType.Enchants],\n  [RoutePath.Enchant]: [],\n  [RoutePath.Skills]: [FiltersType.General, FiltersType.Skills],\n  [RoutePath.Skill]: [],\n  [RoutePath.Help]: [],\n  [RoutePath.Developers]: [FiltersType.General],\n};\n\nexport default function useFilters\n  <T extends GeneralFilters | ItemsFilters | EnchantsFilters | SkillsFilters>(filtersType: FiltersType)\n  : useFiltersInterface<T>  {\n  const routes = allEnumValues(RoutePath);\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const history = useHistory();\n  const location = useLocation();\n\n  // When the change location change and on first render, observe the filters store\n  useEffect(() => {\n    const path = (\n      routes.find(route => matchPath(location.pathname, { path: route }))\n      || location.pathname\n    ) as RoutePath;\n\n    autorun(() => {\n      history.replace({\n        search: filtersStore.toQueryString(AVAILABLE_FILTERS_FOR_ROUTES[path]),\n      });\n    });\n  }, [location.pathname]);\n\n  return [filtersStore.filters[filtersType] as T, setFilters];\n\n  /* A bit too metaprogramming for typescript */\n  function setFilters(filters: T) {\n    // @ts-ignore\n    filtersStore[`set${capitalize(filtersType)}Filters`](filters);\n  }\n}","import { useMediaQuery } from 'react-responsive';\n\nexport enum Breakpoint {\n  Mobile = 480,\n  Tablet = 860,\n  Laptop = 1024,\n  Desktop = 1280,\n}\n\nconst useResponsive = () => {\n  return {\n    isUpToTablet: useMediaQuery({ query: `(max-width: ${Breakpoint.Tablet}px)` }),\n  };\n};\n\nexport default useResponsive;","import React, { FunctionComponent } from 'react';\n\nexport enum GameIconType {\n  ItemCategory = 'itemCategory',\n  EnchantType = 'enchantType',\n  Item = 'item',\n  Enchant = 'enchant',\n}\n\nconst BASE_PATH = 'assets/images/game';\n\nconst ICONS_PATH: Record<GameIconType, string> = {\n  [GameIconType.ItemCategory]: `${BASE_PATH}/items/categories/`,\n  [GameIconType.EnchantType]: `${BASE_PATH}/enchants/types/`,\n  [GameIconType.Item]: `${BASE_PATH}/items/all/`,\n  [GameIconType.Enchant]: `${BASE_PATH}/enchants/`,\n};\n\nexport interface Props {\n  id?: string;\n  className?: string;\n  type: GameIconType;\n  name: string;\n  width?: number;\n  height?: number;\n}\n\nconst GameIcon: FunctionComponent<Props> = ({\n  id,\n  className,\n  type,\n  name,\n  width,\n  height,\n}) =>  (\n  <img\n    aria-label={name}\n    src={`/${ICONS_PATH[type]}/${name.toLowerCase()}.png`}\n    width={width}\n    height={height}\n    alt={name}\n    id={id}\n    className={className}\n  />\n);\n\nexport default GameIcon;\n","\n\nimport React, { FunctionComponent, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { observer } from 'mobx-react';\nimport Drawer from 'rc-drawer';\n\nimport Dropdown from 'components/atoms/Dropdown/Dropdown';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport patches from 'engine/data/patches.json';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { RouteId, RoutePath, ROUTES_ID_MAPPING } from 'routes';\nimport { GeneralFilters, FiltersType } from 'types/Filters.types';\n\nimport './Header.scss';\n\ntype MenuItem = Record<string, RoutePath>;\n\nconst MAIN_MENU_ITEMS: MenuItem[] = [\n  { path: RoutePath.Items },\n  { path: RoutePath.Enchants },\n  { path: RoutePath.Skills },\n];\n\nconst Header: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const { pathname } = useLocation();\n  const [filters, setFilters] = useFilters<GeneralFilters>(FiltersType.General);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return renderMobileHeader();\n  }\n\n  return renderDesktopHeader();\n\n  function renderDesktopHeader() {\n    return (\n      <header className=\"o-header\">\n        <div className=\"o-header__left\">\n          <h1 className=\"o-header__logo\">ChroniconDB</h1>\n          <ul className=\"o-header__main-menu\">\n            {MAIN_MENU_ITEMS.map((menuItem) => {\n              const menuRouteId: RouteId = ROUTES_ID_MAPPING[menuItem.path];\n              const { path } = menuItem;\n              const isCurrent = pathname === path;\n\n              return (\n                <li\n                  className={`o-header__main-menu-item ${isCurrent ? 'current' : ''}`}\n                  key={menuRouteId}\n                >\n                  <Link to={path}>{menuRouteId}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <ul className=\"o-header__sub-menu\">\n          <li className=\"o-header__sub-menu-item\">\n            <div className=\"o-header__sub-menu-patches\">\n              <Dropdown\n                label=\"Patch:\"\n                defaultValue={filters.patch}\n                options={patches.map(patch => ({ label: patch, value: patch }))}\n                onChange={onPatchChange}\n              />\n            </div>\n          </li>\n          <li className={`o-header__sub-menu-item ${pathname === RoutePath.Developers ? 'current' : ''}`}>\n            <Link to={RoutePath.Developers}>{RouteId.Developers}</Link>\n          </li>\n        </ul>\n      </header>\n    );\n  }\n\n  function renderMobileHeader() {\n    return (\n      <header className=\"o-header\">\n        <div className=\"o-header__left\">\n          <h1 className=\"o-header__logo\">ChroniconDB</h1>\n        </div>\n        <div className=\"o-header__right\" onClick={() => setIsMobileMenuOpen(true)}>\n          <Icon name={IconName.Menu} width={28} />\n        </div>\n        <Drawer\n          className=\"o-header__menuMobile\"\n          open={isMobileMenuOpen}\n          onClose={() => setIsMobileMenuOpen(false)}\n          handler={false}\n          width=\"50vw\"\n          placement={'right'}\n        >\n          <ul className=\"o-header__menuMobile-items\">\n            {MAIN_MENU_ITEMS.map((menuItem) => {\n              const menuRouteId: RouteId = ROUTES_ID_MAPPING[menuItem.path];\n              const { path } = menuItem;\n              const isCurrent = pathname === path;\n\n              return (\n                <li\n                  className={`o-header__menuMobile-item ${isCurrent ? 'current' : ''}`}\n                  key={menuRouteId}\n                >\n                  <Link to={path} onClick={() => setIsMobileMenuOpen(false)}>{menuRouteId}</Link>\n                </li>\n              );\n            })}\n            <li className={`o-header__menuMobile-item ${pathname === RoutePath.Developers ? 'current' : ''}`}>\n              <Link to={RoutePath.Developers} onClick={() => setIsMobileMenuOpen(false)}>{RouteId.Developers}</Link>\n            </li>\n            <li className=\"o-header__menuMobile-item patch\">\n              <Dropdown\n                label=\"Patch:\"\n                defaultValue={filters.patch}\n                options={patches.map(patch => ({ label: patch, value: patch }))}\n                onChange={onPatchChange}\n              />\n            </li>\n          </ul>\n        </Drawer>\n      </header>\n    );\n  }\n\n  function onPatchChange(patch: string) {\n    setFilters({ patch });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default observer(Header);\n","import React, { FunctionComponent } from 'react';\n\n\nimport Footer from 'components/organisms/Footer/Footer';\nimport Header from 'components/organisms/Header/Header';\n\nimport './Default.scss';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst DefaultLayout: FunctionComponent<Props> = ({ children }) => {\n\n  return (\n    <div className=\"p-layout\">\n      <Header />\n      <div className=\"p-wrapper\">\n        <div className=\"p-content\">\n          {children}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { map } from 'lodash';\nimport Drawer from 'rc-drawer';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useEngine from 'hooks/useEngine';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { EnchantCategory, EnchantType } from 'types/Enchant.types';\nimport { EnchantsFilters, FiltersType } from 'types/Filters.types';\n\nimport './Categories.scss';\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<EnchantsFilters>(FiltersType.Enchants);\n\n  const { Enchants: { categoriesByTypes, defaultCategory, defaultType } } = Engine;\n  const baseCategory = (filters.category ?? defaultCategory) as EnchantCategory;\n  const baseType = (filters.type ?? defaultType) as EnchantType;\n\n  const [selectedCategory, setSelectedCategory] = useState<EnchantCategory>(baseCategory);\n  const [selectedType, setSelectedType] = useState<EnchantType>(baseType);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-enchantTypes__menuMobile type-${selectedType.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderTypeMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderTypeMenu();\n  }\n\n  function renderCategories(type: EnchantType, enchantCategories: EnchantCategory[]) {\n    return (\n      <ul className=\"o-enchantTypes__enchantCategories\">\n        {enchantCategories.map(enchantCategory => (\n          <li\n            key={`enchant-type-${enchantCategory}`}\n            className={`o-enchantTypes__enchantCategory ${selectedCategory === enchantCategory ? 'selected' : ''}`}\n          >\n            <span\n              className=\"o-enchantTypes__enchantCategoryName\"\n              onClick={() => onCategorySelect(enchantCategory, type)}\n            >\n              {enchantCategory === EnchantCategory.Enchant ? 'Item' : enchantCategory}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderTypeMenu() {\n    return (\n      <ul className=\"o-enchantTypes\">\n        {map(categoriesByTypes, ((enchantTypes, type: EnchantType) => {\n          const isSelected = selectedType === type;\n          return (\n            <li\n              key={`enchant-type-${type}`}\n              className={`o-enchantTypes__type ${isSelected ? 'selected' : ''}`}\n            >\n              <span\n                className=\"o-enchantTypes__typeName\"\n                onClick={() => onTypeSelect(type)}\n              >\n                <Icon\n                  className=\"o-enchantTypes__typeName-arrow\"\n                  width={isSelected ? 14 : 6}\n                  height={isSelected ? 7 : 12}\n                  name={isSelected ? IconName.ArrowDownBlue : IconName.ArrowRightBlue}\n                />\n                {type}\n                <GameIcon\n                  className=\"o-enchantTypes__typeName-icon\"\n                  type={GameIconType.EnchantType}\n                  name={type}\n                  width={28}\n                />\n              </span>\n              {renderCategories(type, enchantTypes)}\n            </li>\n          );\n        }))}\n      </ul>\n    );\n  }\n\n  function onTypeSelect(type: EnchantType) {\n    const defaultEnchantCategory = categoriesByTypes[type][0];\n\n    setSelectedType(type);\n    setSelectedCategory(defaultEnchantCategory);\n    setFilters({ type, category: defaultEnchantCategory });\n  }\n\n  function onCategorySelect(category: EnchantCategory, enchantType: EnchantType) {\n    setSelectedCategory(category);\n    setFilters({ category, type: enchantType });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default Categories;","import React, { FunctionComponent, useState, useCallback } from 'react';\n\nimport { isEmpty, debounce } from 'lodash';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\n\nimport './Search.scss';\n\ninterface SearchProps {\n  className?: string;\n  placeholder?: string;\n  value: string;\n  onChange: (value?: string) => void;\n}\n\nconst Search: FunctionComponent<SearchProps> = ({\n  className,\n  placeholder,\n  value,\n  onChange,\n}) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const onDebouncedChange = useCallback(debounce((val) => {\n    onChange(isEmpty(val) ? undefined : val);\n  }, 500), []);\n\n  return (\n    <div className={`a-search ${className ? className : ''}`}>\n      <input\n        className=\"a-search__input\"\n        placeholder={placeholder}\n        type=\"text\"\n        value={inputValue}\n        onChange={onInputChange}\n      />\n      <div className=\"a-search__iconContainer\">\n        <Icon\n          className=\"a-search__icon\"\n          name={IconName.Search}\n          width={18}\n        />\n      </div>\n    </div>\n  );\n\n  function onInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setInputValue(e.target.value);\n    onDebouncedChange(e.target.value);\n  }\n};\n\nexport default Search;","import React, { FunctionComponent } from 'react';\n\nimport Search from 'components/atoms/Search/Search';\nimport useFilters from 'hooks/useFilters';\nimport { EnchantsFilters, FiltersType } from 'types/Filters.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<EnchantsFilters>(FiltersType.Enchants);\n\n  return (\n    <div className=\"o-enchantFilters\">\n      <Search\n        className=\"o-enchantFilters__search\"\n        placeholder=\"Search\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n    </div>\n  );\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React from 'react';\n\nimport './Badge.scss';\n\ninterface Props {\n  label: string;\n  color: string;\n}\n\nconst Badge: React.FunctionComponent<Props> = ({\n  label,\n  color,\n}) => {\n  return (\n    <em className=\"a-badge\" style={{ backgroundColor: color }}>\n      {label}\n    </em>\n  );\n};\n\nexport default Badge;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { camelCase, uniq, map } from 'lodash';\n\nimport Badge from 'components/atoms/Badge/Badge';\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport useEngine from 'hooks/useEngine';\nimport { Enchant as EnchantInterfacee, EnchantCategory, EnchantType } from 'types/Enchant.types';\nimport { ItemRarity, ItemType } from 'types/Item.types';\n\nimport './Enchant.scss';\n\ninterface Props {\n  enchant: EnchantInterfacee,\n}\n\nconst Enchant: FunctionComponent<Props> = ({\n  enchant,\n}) => {\n  const Engine = useEngine();\n  const isGem = enchant.category === EnchantCategory.Gem;\n  // We put Gems enchants as Major Enchants\n  const type = isGem ? EnchantType.Major : enchant.type;\n\n  return (\n    <div className=\"o-enchant\">\n      <div className=\"o-enchant__header\">\n        <div className=\"o-enchant__header-content\">\n          <span className=\"o-enchant__icon\">\n            <GameIcon type={GameIconType.EnchantType} name={type} width={32} />\n          </span>\n          <div className=\"o-enchant__header-title\">\n            <h2 className=\"o-enchant__header-name\">\n              {enchant.name}\n            </h2>\n            <h3\n              className=\"o-enchant__header-category\"\n              style={{ color: `var(--color-enchant-${camelCase(type)})` }}\n            >\n              {isGem ? EnchantType.Major : type}\n              &nbsp;\n              {enchant.category === EnchantCategory.Enchant ? 'Item' : enchant.category} Enchant\n            </h3>\n          </div>\n        </div>\n        <div className=\"o-enchant__header-affixes\">\n          {enchant.affixes && uniq(enchant.affixes).map(affix => (\n            <span\n              key={`enchant-${enchant.uuid}-affix-${affix}`}\n              className=\"o-enchant__header-affix\"\n            >\n              <Badge\n                label={affix}\n                color={`var(--color-enchant-dim-${camelCase(type)})`}\n              />\n            </span>\n          ))}\n        </div>\n      </div>\n      <div className=\"o-enchant__content\">\n        <div className=\"o-enchant__content-main\">\n          <div className=\"o-enchant__description\">\n            {renderDescription()}\n          </div>\n          <div className=\"o-enchant__ranges\">\n            {renderRanges()}\n          </div>\n        </div>\n        <div className=\"o-enchant__content-sub\">\n          <h3 className=\"o-enchant__itemTypes-title\">\n            Can be applied to:\n          </h3>\n          <ul>\n            {enchant.itemTypes.map(itemType => (\n              <li\n                key={`enchant-${enchant.uuid}-itemType-${itemType}`}\n                className=\"o-enchant__itemType\"\n              >\n                <Link to={{\n                  pathname: '/items',\n                  search: `?itemsType=${itemType}&itemsCategory=${Engine.Items.categoriesByType[itemType]}`,\n                }}>\n                  {itemType === ItemType.Rune ? 'Rune' : itemType}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderRanges() {\n    if (isGem) {\n      return (\n        <div className=\"o-enchant__ranges-column full\">\n          {renderRange(ItemRarity.Rare)}\n          {renderRange(ItemRarity.Enchanted)}\n          {renderRange(ItemRarity.Ordinary)}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"o-enchant__ranges-column\">\n          {renderRange(ItemRarity.TrueLegendary)}\n          {renderRange(ItemRarity.Legendary)}\n          {renderRange(ItemRarity.Unique)}\n        </div>\n        <div className=\"o-enchant__ranges-column\">\n          {renderRange(ItemRarity.Rare)}\n          {renderRange(ItemRarity.Enchanted)}\n          {renderRange(ItemRarity.Ordinary)}\n        </div>\n      </>\n    );\n  }\n\n  function renderRange(rarity: ItemRarity) {\n    const rolls = enchant.ranges[rarity];\n\n    return (\n      <div key={`epool-rolls-${rarity}`} className=\"o-enchant__rolls\">\n        <strong\n          className=\"o-enchant__rolls-rarity\"\n          style={{ color: `var(--color-item-${camelCase(rarity)})` }}\n        >\n          {rarity}\n        </strong>\n        <ul>\n          <li className=\"o-enchant__roll\">\n            <span className=\"o-enchant__roll-header\">\n                Roll range\n            </span>\n            <em className=\"o-enchant__roll-roll\">\n              {rolls.minimum} - {rolls.maximum}\n            </em>\n          </li>\n          <li className=\"o-enchant__roll\">\n            <span className=\"o-enchant__roll-header\">\n                Augment caps\n            </span>\n            <em className=\"o-enchant__roll-roll\">\n              {rolls.cap} - {rolls.greaterCap}\n            </em>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  // TODO: Refactor with AppliedEnchant and enchant page\n  function renderDescription() {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"o-enchant__description-enchant-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i) => {\n        const skillId = parseInt(match);\n        const skillName = Engine.Skills.getSkillById(skillId)?.name;\n        if (skillName) {\n          return (\n            <a\n              href={`/skills?uuid=${skillId}`}\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}`}\n              className=\"o-enchant__description-enchant-skill\"\n            >\n              {skillName}\n            </a>\n          );\n        } else {\n          return (\n            <a\n              href={`/skills?uuid=${skillId}`}\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}`}\n              className=\"o-enchant__description-enchant-skill unknown\"\n            >\n              Unknown Skill\n            </a>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    return finalNodes;\n  }\n};\n\nexport default Enchant;","import React, { FunctionComponent } from 'react';\n\nimport Enchant from 'components/organisms/Enchants/Enchant/Enchant';\nimport { Enchant as EnchantInterface } from 'types/Enchant.types';\n\nimport './List.scss';\n\ninterface Props {\n  enchants: EnchantInterface[];\n}\n\nconst List: FunctionComponent<Props> = ({\n  enchants,\n}) => {\n\n  return (\n    <div className=\"o-enchantsList\">\n      {enchants.length > 0 ? (\n        <>\n          <div className=\"o-enchantsList__header\">\n            <div className=\"o-enchantsList__header__items\">\n              <h3 className=\"o-enchantsList__header__thead\">\n                Enchant\n              </h3>\n              <h3 className=\"o-enchantsList__header__thead\">\n                Affixes\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-enchantsList__container\">\n            <div className=\"o-enchantsList__enchants\">\n              {enchants.map(enchant => (\n                <Enchant key={`enchant-${enchant.uuid}`} enchant={enchant} />\n              ))}\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"o-enchantsList__noEnchant\">\n          No Enchant was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Enchants/Categories/Categories';\nimport Filters from 'components/organisms/Enchants/Filters/Filters';\nimport List from 'components/organisms/Enchants/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nimport './EnchantsTemplate.scss';\n\nconst EnchantsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n\n  const enchants = getFilteredEnchants();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-enchants__wrapper\">\n        <Categories />\n        <div className=\"t-enchants__list\">\n          <List enchants={enchants} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredEnchants() {\n    return Engine.Enchants.all({\n      search: filtersStore.enchants.search,\n      type: filtersStore.enchants.type,\n      category: filtersStore.enchants.category,\n    });\n  }\n};\n\nexport default observer(EnchantsTemplate);","import React, { FunctionComponent } from 'react';\n\nimport EnchantsTemplate from 'components/templates/Enchants/EnchantsTemplate';\n\nconst EnchantsPage: FunctionComponent = () => {\n  return (\n    <EnchantsTemplate />\n  );\n};\n\nexport default EnchantsPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport './Tabs.scss';\n\nexport interface TabsNavItem {\n  label: string;\n  color: string;\n  borderColor?: string;\n  hoverColor?: string;\n}\n\ninterface Props {\n  className?: string;\n  defaultItem?: number;\n  navItems: TabsNavItem[];\n}\n\n// TODO: Should definitely handle colors differently, this is disgusting\nconst EnchantsPool: FunctionComponent<Props> = ({\n  className,\n  navItems,\n  defaultItem,\n  children,\n}) => {\n  const [currentTab, setCurrentTab] = useState(defaultItem || 0);\n\n  React.useEffect(() => {\n    setCurrentTab(defaultItem || 0);\n  }, [defaultItem]);\n\n  return (\n    <div className={`m-tabs ${className ? className : ''}`}>\n      <ul className=\"m-tabs__navigation\">\n        {navItems.map((navItem: TabsNavItem, index) => (\n          <li\n            key={`tab-${navItem.label}-${index}`}\n            className={`m-tabs__navigation-tab ${currentTab === index ? 'selected' : ''}`}\n            style={{\n              '--box-shadow-color': navItem.hoverColor || navItem.color,\n              color: navItem.color,\n              borderColor: navItem.borderColor || navItem.color,\n            } as React.CSSProperties}\n            onClick={() => onTabClick(index)}\n          >\n            {navItem.label}\n          </li>\n        ))}\n      </ul>\n\n      {React.Children.map(children, node => (\n        <div key={`tabPanel-${currentTab}`}>\n          {node}\n        </div>\n      ))?.filter((_, i) => i === currentTab)}\n    </div>\n  );\n\n  function onTabClick(index: number) {\n    setCurrentTab(index);\n  }\n\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent, useState } from 'react';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { pickBy, map, camelCase, isString } from 'lodash';\n\nimport Tabs from 'components/molecules/Tabs/Tabs';\nimport useEngine from 'hooks/useEngine';\nimport { CraftableEnchantTypes, EnchantType, Enchant } from 'types/Enchant.types';\nimport { ItemType, ItemRarity } from 'types/Item.types';\n\nimport './ItemsEnchantsPool.scss';\n\ninterface Props {\n  type: ItemType,\n}\n\nconst ItemsEnchantsPool: FunctionComponent<Props> = ({\n  type,\n}) => {\n  const Engine = useEngine();\n  const enchantsPool = Engine.Enchants.getTypeEnchantsPool(type);\n  const availableEnchantTypes = (enchantsPool ?\n    Object.keys(pickBy(enchantsPool, pool => pool.length > 0))\n    : []\n  ) as CraftableEnchantTypes[];\n  const [currentEnchant, setCurrentEnchant] = useState<Enchant | null>(null);\n\n  return (\n    <div className=\"m-enchantsPool\">\n      {enchantsPool ? (\n        <div className=\"m-enchantsPool__content\">\n          <Tabs\n            navItems={availableEnchantTypes.map(enchantType => ({\n              label: enchantType,\n              color: `var(--color-enchant-${enchantType.toLowerCase()})`,\n              borderColor: enchantType === EnchantType.Minor ?\n                'var(--color-element-mid-beige)' :\n                `var(--color-enchant-${enchantType.toLowerCase()})`,\n              hoverColor: `var(--color-enchant-dim-${enchantType.toLowerCase()})`,\n            }))}\n          >\n            {availableEnchantTypes.map((enchantType) => {\n              return (\n                <div key={`pool-${enchantType}`}>\n                  {renderPoolForType(enchantType)}\n                </div>\n              );\n            })}\n          </Tabs>\n\n        </div>\n      ) : (\n        <div className=\"m-enchantsPool__none\">\n          {type}s are not enchantable\n        </div>\n      )}\n    </div>\n  );\n\n  function renderPoolForType(type: CraftableEnchantTypes) {\n    if (!enchantsPool) {\n      return null;\n    }\n\n    return enchantsPool[type].map((enchant) => {\n      const isSelected = currentEnchant?.uuid === enchant.uuid;\n\n      return (\n        <div\n          key={`epool-${type}-${enchant.uuid}`}\n          className={`m-enchantsPool__enchant etype-${type.toLowerCase()} ${isSelected ? 'expanded' : ''}`}\n        >\n          <span\n            className=\"m-enchantsPool__enchant-name\"\n            onClick={() => setCurrentEnchant(isSelected ? null : enchant)}\n          >\n            {enchant.name}\n          </span>\n          {isSelected && (\n            <div className=\"m-enchantsPool__enchant__data\">\n              <strong className=\"m-enchantsPool__enchant__data-description\">\n                {renderDescription(enchant)}\n              </strong>\n              {map(enchant.ranges, (rolls, rarity) => {\n                if (rarity === ItemRarity.Mythical) {\n                  return null;\n                }\n\n                return (\n                  <div key={`epool-rolls-${rarity}`} className=\"m-enchantsPool__enchant__rolls\">\n                    <strong\n                      className=\"m-enchantsPool__enchant__rolls-rarity\"\n                      style={{ color: `var(--color-item-${camelCase(rarity)})` }}\n                    >\n                      {rarity}\n                    </strong>\n                    <ul>\n                      <li className=\"m-enchantsPool__enchant__roll\">\n                        <span className=\"m-enchantsPool__enchant__roll-header\">\n                    Roll range\n                        </span>\n                        <em className=\"m-enchantsPool__enchant__roll-roll\">\n                          {rolls.minimum} - {rolls.maximum}\n                        </em>\n                      </li>\n                      <li className=\"m-enchantsPool__enchant__roll\">\n                        <span className=\"m-enchantsPool__enchant__roll-header\">\n                    Augment caps\n                        </span>\n                        <em className=\"m-enchantsPool__enchant__roll-roll\">\n                          {rolls.cap} - {rolls.greaterCap}\n                        </em>\n                      </li>\n                    </ul>\n                  </div>\n                );\n              }).reverse()}\n\n            </div>\n          )}\n        </div>\n      );\n    });\n  }\n\n  // TODO: Refactor with AppliedEnchant and Enchant page\n  function renderDescription(enchant: Enchant) {\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-enchantsPool__enchant__data-description-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (replacedRanges && isString(replacedRanges[0]) && !replacedRanges[0].match(/^\\+/)) {\n      replacedRanges[0] = `- ${replacedRanges[0]}`;\n    }\n\n    return replacedRanges;\n  }\n};\n\nexport default ItemsEnchantsPool;","import React, { FunctionComponent, useState } from 'react';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { isString } from 'lodash';\n\nimport Tabs from 'components/molecules/Tabs/Tabs';\nimport useEngine from 'hooks/useEngine';\nimport { EnchantType, Enchant } from 'types/Enchant.types';\nimport { ItemRarity } from 'types/Item.types';\n\nimport './RunesEnchantsPool.scss';\n\nconst EnchantsPool: FunctionComponent = () => {\n  const Engine = useEngine();\n  const enchantsPool = Engine.Enchants.getRunesEnchantsPool();\n  const availableEnchantTypes = [EnchantType.Legendary];\n  const [currentEnchant, setCurrentEnchant] = useState<Enchant | null>(null);\n\n  return (\n    <div className=\"m-runesEnchantsPool\">\n      <div className=\"m-runesEnchantsPool__content\">\n        <Tabs\n          navItems={availableEnchantTypes.map(enchantType => ({\n            label: enchantType,\n            color: `var(--color-enchant-${enchantType.toLowerCase()})`,\n            borderColor: enchantType === EnchantType.Minor ?\n              'var(--color-element-mid-beige)' :\n              `var(--color-enchant-${enchantType.toLowerCase()})`,\n            hoverColor: `var(--color-enchant-dim-${enchantType.toLowerCase()})`,\n          }))}\n        >\n          {availableEnchantTypes.map((enchantType) => {\n            return (\n              <div key={`pool-${enchantType}`}>\n                {renderPool()}\n              </div>\n            );\n          })}\n        </Tabs>\n      </div>\n    </div>\n  );\n\n  function renderPool() {\n    return enchantsPool.map((enchant) => {\n      const isSelected = currentEnchant?.uuid === enchant.uuid;\n      const rolls = enchant.ranges[ItemRarity.TrueLegendary];\n\n      return (\n        <div\n          key={`epool-legendary-${enchant.uuid}`}\n          className={`m-runesEnchantsPool__enchant etype-legendary ${isSelected ? 'expanded' : ''}`}\n        >\n          <span\n            className=\"m-runesEnchantsPool__enchant-name\"\n            onClick={() => setCurrentEnchant(isSelected ? null : enchant)}\n          >\n            {enchant.name}\n          </span>\n          {isSelected && (\n            <div className=\"m-runesEnchantsPool__enchant__data\">\n              <strong className=\"m-runesEnchantsPool__enchant__data-description\">\n                {renderDescription(enchant)}\n              </strong>\n\n              <div key={`epool-rolls-trueLegendary`} className=\"m-runesEnchantsPool__enchant__rolls\">\n                <ul>\n                  <li className=\"m-runesEnchantsPool__enchant__roll\">\n                    <span className=\"m-runesEnchantsPool__enchant__roll-header\">\n                      Roll range\n                    </span>\n                    <em className=\"m-runesEnchantsPool__enchant__roll-roll\">\n                      {rolls.minimum} - {rolls.maximum}\n                    </em>\n                  </li>\n                  <li className=\"m-runesEnchantsPool__enchant__roll\">\n                    <span className=\"m-runesEnchantsPool__enchant__roll-header\">\n                      Augment caps\n                    </span>\n                    <em className=\"m-runesEnchantsPool__enchant__roll-roll\">\n                      {rolls.cap} - {rolls.greaterCap}\n                    </em>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    });\n  }\n\n  // TODO: Refactor with AppliedEnchant and enchant page\n  function renderDescription(enchant: Enchant) {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-runesEnchantsPool__enchant__data-description-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i) => {\n        const skillId = parseInt(match);\n        const skillName = Engine.Skills.getSkillById(skillId)?.name;\n        if (skillName) {\n          return (\n            <a\n              href={`/skills?uuid=${skillId}`}\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}`}\n              className=\"m-runesEnchantsPool__enchant__data-description-skill\"\n            >\n              {skillName}\n            </a>\n          );\n        } else {\n          return (\n            <a\n              href={`/skills?uuid=${skillId}`}\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}`}\n              className=\"m-runesEnchantsPool__enchant__data-description-skill unknown\"\n            >\n              Unknown Skill\n            </a>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (finalNodes && isString(finalNodes[0]) && !finalNodes[0].match(/^\\+/)) {\n      finalNodes[0] = `- ${finalNodes[0]}`;\n    }\n\n    return finalNodes;\n  }\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent } from 'react';\n\nimport Drawer from 'rc-drawer';\n\nimport ItemsEnchantsPool from 'components/molecules/Items/ItemsEnchantsPool/ItemsEnchantsPool';\nimport RunesEnchantsPool from 'components/molecules/Items/RunesEnchantsPool/RunesEnchantsPool';\nimport useResponsive from 'hooks/useResponsive';\nimport { ItemType } from 'types/Item.types';\n\nimport './EnchantsPool.scss';\n\ninterface Props {\n  itemType: ItemType;\n}\n\nconst EnchantsPool: FunctionComponent<Props> = ({\n  itemType,\n}) => {\n  const { isUpToTablet } = useResponsive();\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        className={`o-enchantsPool__enchantsPoolMobile`}\n        width=\"80vw\"\n        placement={'left'}\n      >\n        <div className=\"o-enchantsPool__possibleEnchants\">\n          <div className=\"o-enchantsPool__title\">\n            Possible enchants\n          </div>\n          {itemType === ItemType.Rune ? (\n            <RunesEnchantsPool />\n          ) : (\n            <ItemsEnchantsPool type={itemType} />\n          )}\n        </div>\n      </Drawer>\n    );\n  }\n\n  return (\n    <div className=\"o-enchantsPool__possibleEnchants\">\n      {itemType === ItemType.Rune ? (\n        <RunesEnchantsPool />\n      ) : (\n        <ItemsEnchantsPool type={itemType} />\n      )}\n    </div>\n  );\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent } from 'react';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { isString } from 'lodash';\n\nimport { SimpleEnchant } from 'types/Enchant.types';\nimport { Item } from 'types/Item.types';\n\nimport './AppliedEnchant.scss';\n\ninterface Props {\n  item: Item\n  enchant: SimpleEnchant;\n}\n\nconst AppliedEnchant: FunctionComponent<Props> = ({\n  item,\n  enchant,\n}) => {\n  return (\n    <li className=\"m-appliedEnchant\">\n      {descriptionToTemplate()}\n    </li>\n  );\n\n  // TODO: Refactor with EnchantsPool\n  function descriptionToTemplate() {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${item.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-appliedEnchant__range\"\n        >\n          {renderRange()}\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i) => {\n        const skillId = parseInt(match);\n        const skillName = enchant.skills ? enchant.skills[skillId] : null;\n        if (skillName) {\n          return (\n            <a\n              href={`/skills?uuid=${skillId}`}\n              key={`tpl-${item.uuid}-skill-${skillId}-${i}`}\n              className=\"m-appliedEnchant__skill\"\n            >\n              {skillName}\n            </a>\n          );\n        } else {\n          return (\n            <a\n              href={`/skills?uuid=${skillId}`}\n              key={`tpl-${item.uuid}-skill-${skillId}-${i}`}\n              className=\"m-appliedEnchant__skill unknown\"\n            >\n              Unknown Skill\n            </a>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (finalNodes && isString(finalNodes[0]) && !finalNodes[0].match(/^\\+/)) {\n      finalNodes[0] = `- ${finalNodes[0]}`;\n    }\n\n    return finalNodes;\n  }\n\n  function renderRange() {\n    if (enchant.min === enchant.max) {\n      return (\n        <em className=\"m-appliedEnchant__max\">{enchant.max}</em>\n      );\n    } else {\n      return (\n        <>\n          [<em className=\"m-appliedEnchant__min\">{enchant.min}</em>-<em className=\"m-appliedEnchant__max\">{enchant.max}</em>]\n        </>\n      );\n    }\n  }\n};\n\nexport default AppliedEnchant;","import React, { FunctionComponent } from 'react';\n\nimport { ItemEnchantSlot, EnchantType } from 'types/Enchant.types';\nimport { Item } from 'types/Item.types';\n\nimport './EnchantSlot.scss';\n\ninterface Props {\n  item: Item;\n  enchantSlot: ItemEnchantSlot;\n}\n\nconst EnchantSlot: FunctionComponent<Props> = ({\n  item,\n  enchantSlot,\n}) => {\n  return (\n    <li className=\"m-enchantSlot\">\n      +<em className=\"m-enchantSlot__count\">{enchantSlot.count}</em>&nbsp;\n      {formattedTypes()}&nbsp;\n      {enchantSlot.count > 1 ? 'enchants' : 'enchant'}\n    </li>\n  );\n\n  function formattedTypes() {\n    const renderSlotType = (type: EnchantType) => (\n      <em\n        key={`${item.uuid}-slot-${type}`}\n        className=\"m-enchantSlot__type\"\n        style={{ color: `var(--color-enchant-${type.toLowerCase()})` }}\n      >\n        {type}\n      </em>\n    );\n\n    return enchantSlot\n      .types\n      .map<React.ReactNode>(renderSlotType)\n      .reduce((prev, curr) => [prev, ' or ', curr]);\n  }\n};\n\nexport default EnchantSlot;","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { map } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport { ItemSetData } from 'engine/EngineItems';\nimport { RoutePath } from 'routes';\n\nimport './Set.scss';\n\ninterface Props {\n  set: ItemSetData,\n  setCollapsed?: boolean,\n}\n\nconst ItemSet: FunctionComponent<Props> = ({\n  set,\n  setCollapsed = true,\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(setCollapsed);\n\n  return (\n    <div className=\"m-itemSet\">\n      <div\n        className=\"m-itemSet__nameContainer\"\n        onClick={() => setIsCollapsed(!isCollapsed)}\n      >\n        Set: <span className=\"m-itemSet__name\">{set.name}</span>\n        <span className={`m-itemSet__collapseIcon ${isCollapsed ? '' : 'expanded'}`}>\n          {isCollapsed ? (\n            <Icon name={IconName.ArrowRightYellow} width={6} height={12} />\n          ) : (\n            <Icon name={IconName.ArrowDownYellow} width={14} height={7} />\n          )}\n        </span>\n      </div>\n      <div className={`m-itemSet__contentContainer ${isCollapsed ? '' : 'expanded'}`}>\n        <div className=\"m-itemSet__content\">\n          <div className=\"m-itemSet__setInfo\">\n            <strong className=\"m-itemSet__setInfo-itemTypes\">\n              {set.types.join(', ')}\n            </strong>\n            <ul className=\"m-itemSet__setInfo-bonuses\">\n              {map(set.bonuses, (bonus, piecesCount) => (\n                <li\n                  key={`set-bonus-${set.uuid}-${piecesCount}`}\n                  className=\"m-itemSet__setInfo-bonus\"\n                >\n                  <em className=\"m-itemSet__setInfo-bonus-count\">{piecesCount})</em>\n                  {bonus}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <ul className=\"m-itemSet__itemsInfo\">\n            {set.items.map(item => (\n              <li\n                key={`set-items-${set.uuid}-${item.uuid}`}\n              >\n                <Link to={RoutePath.Item.replace(':uuid', item.uuid.toString())} className=\"m-itemSet__itemsInfo-item\">\n                  {item.icon && (\n                    <GameIcon type={GameIconType.Item} name={item.icon} width={18} />\n                  )}\n                  <em className=\"m-itemSet__itemsInfo-item-name\">\n                    {item.name}\n                  </em>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemSet;","import React, { Fragment, FunctionComponent, useMemo } from 'react';\n\nimport { camelCase, map } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport AppliedEnchant from 'components/molecules/Items/AppliedEnchant/AppliedEnchant';\nimport EnchantSlot from 'components/molecules/Items/EnchantSlot/EnchantSlot';\nimport useEngine from 'hooks/useEngine';\nimport { Item as ItemInterface, ItemCategory, ItemType } from 'types/Item.types';\n\nimport './DownloadableItem.scss';\n\ninterface Props {\n  item: ItemInterface,\n  setCollapsed?: boolean,\n}\n\nconst Item: FunctionComponent<Props> = ({\n  item,\n}) => {\n  const Engine = useEngine();\n  const itemEnchants = useMemo(() => Engine.Enchants.getItemEnchantsSlots(item), [item]);\n  const itemSetData = useMemo(() => Engine.Items.getSetData(item), [item]);\n  const classRestriction = item.classRestriction || 'Any Class';\n\n  return (\n    <div className=\"o-downloadableItem__container\">\n      <div className=\"o-downloadableItem\">\n        <div className=\"o-downloadableItem__header\">\n          <div className=\"o-downloadableItem__header-content\">\n            <span className=\"o-downloadableItem__icon\">\n              {item.icon && (\n                <GameIcon type={GameIconType.Item} name={item.icon} width={32} />\n              )}\n            </span>\n            <div className=\"o-downloadableItem__header-title\">\n              <h2\n                className=\"o-downloadableItem__name\"\n                style={{ color: `var(--color-item-${camelCase(item.rarity)})` }}\n              >\n                {item.name}\n              </h2>\n              <h3\n                className=\"o-downloadableItem__rarity\"\n\n              >\n                {item.rarity} {item.type}\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-downloadableItem__header-req\">\n            <span>\n              Level: {item.minLevel}\n            </span>\n            {classRestriction} Item\n          </div>\n        </div>\n        <div className=\"o-downloadableItem__content\">\n          {item.description && (\n            <div className=\"o-downloadableItem__description\">\n              {item.description}\n            </div>\n          )}\n          {itemEnchants &&(\n            <div className=\"o-downloadableItem__enchants\">\n              {renderBaseEnchants()}\n            </div>\n          )}\n          {itemSetData && (\n            <div className=\"o-downloadableItem__set\">\n              <span className=\"o-downloadableItem__set-name\">Set: {itemSetData.name}</span>\n              <div className=\"o-downloadableItem__setInfo\">\n                <strong className=\"o-downloadableItem__setInfo-itemTypes\">\n                  {itemSetData.types.join(', ')}\n                </strong>\n                <ul className=\"o-downloadableItem__setInfo-bonuses\">\n                  {map(itemSetData.bonuses, (bonus, piecesCount) => (\n                    <li\n                      key={`set-bonus-${itemSetData.uuid}-${piecesCount}`}\n                      className=\"o-downloadableItem__setInfo-bonus\"\n                    >\n                      <em className=\"o-downloadableItem__setInfo-bonus-count\">{piecesCount})</em>\n                      {bonus}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          )}\n          {itemEnchants &&\n            <div className=\"o-downloadableItem__enchants\">\n              <div className=\"o-downloadableItem__enchants__slotsContainer\">\n                {renderFixedEnchants()}\n                {renderEnchantsSlots()}\n              </div>\n            </div>\n          }\n          {item.flavor && (\n            <div className=\"o-downloadableItem__flavor\">\n              {item.flavor}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderBaseEnchants() {\n    return itemEnchants && itemEnchants.baseEnchants?.length > 0 && (\n      <ul className=\"o-downloadableItem__enchants__base\">\n        {itemEnchants.baseEnchants?.map((enchant, index) => (\n          <AppliedEnchant\n            key={`${item.uuid}-ebase-${index}`}\n            item={item}\n            enchant={enchant}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  function renderFixedEnchants() {\n    const isGem = item.category === ItemCategory.Gem;\n    // TODO: Extract to a proper dataMapping\n    const enchantForType = ['Weapon/Offhand', 'Helm/Armor/Boots', 'Amulet/Ring/Accessory'];\n\n    return itemEnchants && (\n      <ul className=\"o-downloadableItem__enchants__fixed\">\n        {itemEnchants.fixedEnchants?.map((enchant, index) => (\n          <Fragment key={`fr-${item.uuid}-fbase-${index}`}>\n            {isGem && <span className=\"o-downloadableItem__enchants__fixed-label\">{enchantForType[index]}</span>}\n            <AppliedEnchant\n              item={item}\n              key={`${item.uuid}-fbase-${index}`}\n              enchant={enchant}\n            />\n          </Fragment>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderEnchantsSlots() {\n    return itemEnchants && (\n      <ul className=\"o-downloadableItem__enchants__slots\">\n        {itemEnchants.enchantSlots?.map((slot, index) => {\n          return (!slot.categoriesRestriction || slot.categoriesRestriction.includes(item.category)) && (\n            <EnchantSlot\n              key={`${item.uuid}-eslot-${index}`}\n              item={item}\n              enchantSlot={slot}\n            />\n          );\n        })}\n        {[ItemType.Helm, ItemType.Armor, ItemType.Boots].includes(item.type) &&\n          <li className=\"o-downloadableItem__enchants__slots-replace\">\n            <em className=\"o-downloadableItem__enchants__slots-replace-chance\">25%</em> chance to replace 1 <em style={{ color: 'var(--color-enchant-major)' }}>Major</em> with 1 <em style={{ color: 'var(--color-enchant-epic)' }}>Epic</em>\n          </li>\n        }\n      </ul>\n    );\n  }\n};\n\nexport default Item;","import React, { createRef, FunctionComponent, useState, useEffect } from 'react';\nimport { Tooltip } from 'react-tippy';\n\nimport useAsDownloadableImage from 'hooks/useAsDownloadableImage';\nimport { Item } from 'types/Item.types';\n\nimport DownloadableItem from './DownloadableItem/DownloadableItem';\n\nimport './ItemDownloader.scss';\n\nconst ItemDownloader: FunctionComponent<{ item: Item }> = ({\n  item,\n}) => {\n  const elementRef = createRef<HTMLDivElement>();\n  const [renderItem, setRenderItem] = useState(false);\n  const download = useAsDownloadableImage(elementRef, { height: '100%', opacity: '1', width: 'auto' });\n\n  useEffect(() => {\n    if (renderItem) {\n      download(item.name, () => {\n        setRenderItem(false);\n      });\n\n      // If the item hasn't downloaded after 4 seconds, cancel.\n      setTimeout(() => setRenderItem(false), 4000);\n    }\n  });\n\n  return (\n    <span className=\"o-itemDownloader\" title=\"Download as an image\">\n      {renderItem ? (\n        <span className=\"o-itemDownloader__icon\">\n          <svg style={{ display: 'block' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"-5 0 50 35\" stroke=\"#dc9d63\">\n            <g fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(1 1)\" strokeWidth=\"8\">\n                <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"/>\n                <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                </path>\n              </g>\n            </g>\n          </svg>\n        </span>\n      ) : (\n        <span className=\"o-itemDownloader__icon\" onClick={() => setRenderItem(true)}>\n          <Tooltip\n            title=\"Download item as an image\"\n            position=\"right\"\n            arrow={true}\n            distance={0}\n            offset={-10}\n            size=\"small\"\n          >\n            <svg style={{ display: 'block' }} xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\" width=\"18\" height=\"18\">\n              <g>\n                <path fill=\"#DECFB0\" d=\"M412.907,214.08C398.4,140.693,333.653,85.333,256,85.333c-61.653,0-115.093,34.987-141.867,86.08    C50.027,178.347,0,232.64,0,298.667c0,70.72,57.28,128,128,128h277.333C464.213,426.667,512,378.88,512,320    C512,263.68,468.16,218.027,412.907,214.08z M256,384L149.333,277.333h64V192h85.333v85.333h64L256,384z\"/>\n              </g>\n            </svg>\n          </Tooltip>\n        </span>\n      )}\n      {renderItem && (\n        <div className=\"o-itemDownloader__item\" ref={elementRef} style={{ height: '0', opacity: '0', width: '0' }}>\n          <DownloadableItem item={item} />\n        </div>\n      )}\n    </span>\n  );\n};\n\nexport default ItemDownloader;","import { useState, useEffect, RefObject, CSSProperties } from 'react';\n\nimport { saveAs } from 'file-saver';\nimport { toBlob } from 'html-to-image';\n\nexport default function useAsDownloadableImage(node: RefObject<HTMLElement>, style: CSSProperties): (name: string, callback?: () => void) => void {\n  const [blob, setBlob] = useState<Blob>();\n\n  useEffect(() => {\n    // Make sure the node.current render is finished\n    setTimeout(() => {\n      if (node.current) {\n        // @ts-ignore\n        toBlob(node.current, { pixelRatio: 1, style })\n          .then((blob) => {\n            if (blob) {\n              setBlob(blob);\n            }\n          });\n      }\n    }, 500);\n  }, [node, style]);\n\n  return (name: string, callback?: () => void) => {\n    if (blob) {\n      saveAs(blob, `${name}.png`);\n      callback && callback();\n    }\n  };\n}\n","import React, { Fragment, FunctionComponent, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { camelCase } from 'lodash';\n\nimport Badge from 'components/atoms/Badge/Badge';\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport AppliedEnchant from 'components/molecules/Items/AppliedEnchant/AppliedEnchant';\nimport EnchantSlot from 'components/molecules/Items/EnchantSlot/EnchantSlot';\nimport ItemSet from 'components/molecules/Items/Set/Set';\n// import DownloadableItem from 'components/organisms/ItemDownloader/DownloadableItem/DownloadableItem';\nimport ItemDownloader from 'components/organisms/ItemDownloader/ItemDownloader';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\nimport { Item as ItemInterface, ItemCategory, ItemType } from 'types/Item.types';\n\nimport './Item.scss';\n\ninterface Props {\n  item: ItemInterface,\n  setCollapsed?: boolean,\n}\n\nconst Item: FunctionComponent<Props> = ({\n  item,\n  setCollapsed,\n}) => {\n  const Engine = useEngine();\n  const itemEnchants = useMemo(() => Engine.Enchants.getItemEnchantsSlots(item), [item]);\n  const itemSetData = useMemo(() => Engine.Items.getSetData(item), [item]);\n  const classRestriction = item.classRestriction || 'Any Class';\n  // return <DownloadableItem item={item} />;\n\n  return (\n    <div className=\"o-item__container\">\n      <div className=\"o-item\">\n        <div className=\"o-item__header\">\n          <div className=\"o-item__header-content\">\n            <span className=\"o-item__icon\">\n              {item.icon && (\n                <GameIcon type={GameIconType.Item} name={item.icon} width={32} />\n              )}\n            </span>\n            <div className=\"o-item__header-title\">\n              <h2 className=\"o-item__name\">\n                <Link to={RoutePath.Item.replace(':uuid', item.uuid.toString())} className=\"o-item__header-title-link\" target=\"__blank\">\n                  {item.name}\n                </Link>\n                <ItemDownloader item={item} />\n              </h2>\n              <h3\n                className=\"o-item__rarity\"\n                style={{ color: `var(--color-item-${camelCase(item.rarity)})` }}\n              >\n                {item.rarity} {item.type}\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-item__header-req\">\n            <Badge\n              label={classRestriction}\n              color={`var(--color-class-${camelCase(classRestriction)})`}\n            />\n            <span>\n              LVL. {item.minLevel}\n            </span>\n          </div>\n        </div>\n        <div className=\"o-item__content\">\n          {item.description && (\n            <div className=\"o-item__description\">\n              {item.description}\n            </div>\n          )}\n          {itemEnchants &&\n            <div className=\"o-item__enchants\">\n              {renderBaseEnchants()}\n              <div className=\"o-item__enchants__slotsContainer\">\n                {renderFixedEnchants()}\n                {renderEnchantsSlots()}\n              </div>\n            </div>\n          }\n          {item.flavor && (\n            <div className=\"o-item__flavor\">\n              {item.flavor}\n            </div>\n          )}\n        </div>\n        {itemSetData && (\n          <div className=\"o-item__set\">\n            <ItemSet set={itemSetData} setCollapsed={setCollapsed} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  function renderBaseEnchants() {\n    return itemEnchants && itemEnchants.baseEnchants?.length > 0 && (\n      <ul className=\"o-item__enchants__base\">\n        {itemEnchants.baseEnchants?.map((enchant, index) => (\n          <AppliedEnchant\n            key={`${item.uuid}-ebase-${index}`}\n            item={item}\n            enchant={enchant}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  function renderFixedEnchants() {\n    const isGem = item.category === ItemCategory.Gem;\n    // TODO: Extract to a proper dataMapping\n    const enchantForType = ['Weapon/Offhand', 'Helm/Armor/Boots', 'Amulet/Ring/Accessory'];\n\n    return itemEnchants && (\n      <ul className=\"o-item__enchants__fixed\">\n        {itemEnchants.fixedEnchants?.map((enchant, index) => (\n          <Fragment key={`fr-${item.uuid}-fbase-${index}`}>\n            {isGem && <span className=\"o-item__enchants__fixed-label\">{enchantForType[index]}</span>}\n            <AppliedEnchant\n              item={item}\n              key={`${item.uuid}-fbase-${index}`}\n              enchant={enchant}\n            />\n          </Fragment>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderEnchantsSlots() {\n    return itemEnchants && (\n      <ul className=\"o-item__enchants__slots\">\n        {itemEnchants.enchantSlots?.map((slot, index) => {\n          return (!slot.categoriesRestriction || slot.categoriesRestriction.includes(item.category)) && (\n            <EnchantSlot\n              key={`${item.uuid}-eslot-${index}`}\n              item={item}\n              enchantSlot={slot}\n            />\n          );\n        })}\n        {[ItemType.Helm, ItemType.Armor, ItemType.Boots].includes(item.type) &&\n          <li className=\"o-item__enchants__slots-replace\">\n            <em className=\"o-item__enchants__slots-replace-chance\">25%</em> chance to replace 1 <em style={{ color: 'var(--color-enchant-major)' }}>Major</em> with 1 <em style={{ color: 'var(--color-enchant-epic)' }}>Epic</em>\n          </li>\n        }\n      </ul>\n    );\n  }\n};\n\nexport default Item;","import React, { FunctionComponent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport EnchantsPool from 'components/organisms/Items/EnchantsPool/EnchantsPool';\nimport Item from 'components/organisms/Items/Item/Item';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\n\nimport './ItemTemplate.scss';\n\nconst ItemTemplate: FunctionComponent = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const Engine = useEngine();\n  const item = Engine.Items.find(parseInt(uuid));\n\n  return (\n    <>\n      <div className=\"t-item\">\n        {item ? (\n          <>\n            <div className=\"t-item__header\">\n              <Link to={RoutePath.Items}>\n                <Icon\n                  className=\"t-item__header-icon\"\n                  width={7}\n                  height={14}\n                  name={IconName.ArrowRightWhite}\n                /> Back to items\n              </Link>\n            </div>\n            <div className=\"t-item__container\">\n              <Item item={item} setCollapsed={false} />\n              <EnchantsPool itemType={item.type} />\n            </div>\n          </>\n        ) : (\n          <div className=\"t-item__notFound\">\n            Item Not Found\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ItemTemplate;","import React, { FunctionComponent } from 'react';\n\nimport ItemTemplate from 'components/templates/Item/ItemTemplate';\n\nexport const ItemPage: FunctionComponent = () => {\n  return (\n    <ItemTemplate />\n  );\n};\n\nexport default ItemPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport { map } from 'lodash';\nimport Drawer from 'rc-drawer';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useEngine from 'hooks/useEngine';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { ItemsFilters, FiltersType } from 'types/Filters.types';\nimport { ItemCategory, ItemType } from 'types/Item.types';\n\nimport './Categories.scss';\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n\n  const { Items: { typesByCategories, defaultCategory, defaultType } } = Engine;\n  const baseCategory = (filters.category ?? defaultCategory) as ItemCategory;\n  const baseType = (filters.type ?? defaultType) as ItemType;\n\n  const [selectedCategory, setSelectedCategory] = useState<ItemCategory>(baseCategory);\n  const [selectedType, setSelectedType] = useState<ItemType>(baseType);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-itemCategories__menuMobile category-${selectedCategory.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderCategoryMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderCategoryMenu();\n  }\n\n  function renderItemTypes(category: ItemCategory, itemTypes: ItemType[]) {\n    return (\n      <ul className=\"o-itemCategories__itemTypes\">\n        {itemTypes.map(itemType => (\n          <li\n            key={`item-type-${itemType}`}\n            className={`o-itemCategories__itemType ${selectedType === itemType ? 'selected' : ''}`}\n          >\n            <span\n              className=\"o-itemCategories__itemTypeName\"\n              onClick={() => onItemTypeSelect(category, itemType)}\n            >\n              {itemType === ItemType.Rune ? 'Rune' : itemType}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderCategoryMenu() {\n    return (\n      <ul className=\"o-itemCategories\">\n        {map(typesByCategories, ((itemTypes, category: ItemCategory) => {\n          const isSelected = selectedCategory === category;\n          return (\n            <li\n              key={`item-category-${category}`}\n              className={`o-itemCategories__category ${isSelected ? 'selected' : ''}`}\n            >\n              <span\n                className=\"o-itemCategories__categoryName\"\n                onClick={() => onCategorySelect(category)}\n              >\n                <Icon\n                  className=\"o-itemCategories__categoryName-arrow\"\n                  width={isSelected ? 14 : 6}\n                  height={isSelected ? 7 : 12}\n                  name={isSelected ? IconName.ArrowDownBlue : IconName.ArrowRightBlue}\n                />\n                {category}\n                <GameIcon\n                  className=\"o-itemCategories__categoryName-icon\"\n                  type={GameIconType.ItemCategory}\n                  name={category}\n                  width={28}\n                />\n              </span>\n              {renderItemTypes(category, itemTypes)}\n            </li>\n          );\n        }))}\n      </ul>\n    );\n  }\n\n  function onCategorySelect(category: ItemCategory) {\n    const defaultItemType = typesByCategories[category][0];\n\n    setSelectedCategory(category);\n    setSelectedType(defaultItemType);\n    setFilters({ category, type: defaultItemType });\n  }\n\n  function onItemTypeSelect(category: ItemCategory, itemType: ItemType) {\n    setSelectedType(itemType);\n    setFilters({ category, type: itemType });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default Categories;","import React, { FunctionComponent, useState } from 'react';\n\nimport './CheckboxSelect.scss';\n\nexport interface CheckboxSelectProps {\n  className?: string;\n  selected: boolean;\n  label: string;\n  value: string;\n  color: string;\n  onChange: (selected: boolean) => void;\n}\n\nconst CheckboxSelect: FunctionComponent<CheckboxSelectProps> = ({\n  className,\n  selected,\n  label,\n  value,\n  color,\n  onChange,\n}) => {\n  const [isSelected, setIsSelected] = useState(selected);\n  const optionStyles = isSelected ? {\n    color: color,\n    textShadow: `0px -2px 16px ${color}`,\n  } : {};\n  const borderStyles = isSelected ? {\n    backgroundColor: color,\n    boxShadow: `0 0 12px ${color}, 0 1px 6px ${color}`,\n  } : {};\n\n  return (\n    <div className={`a-checkboxSelect ${className ? className : ''}`}>\n      <div\n        key={`checkboxSelect-label-${value}`}\n        className={`a-checkboxSelect__label ${isSelected ? 'selected' : ''}`}\n        onClick={onClickOption}\n        style={optionStyles}\n      >\n        {label}\n        <span className=\"a-checkboxSelect-borderBottom\" style={borderStyles}></span>\n      </div>\n    </div>\n  );\n\n  function onClickOption() {\n    setIsSelected(!isSelected);\n    onChange(!isSelected);\n  }\n};\n\nexport default CheckboxSelect;","import React, { FunctionComponent, useState } from 'react';\n\nimport { xor } from 'lodash';\n\nimport './Multiselect.scss';\n\nexport interface MultiselectOption {\n  label: string;\n  value: string;\n  color: string;\n}\n\nexport interface MultiselectProps {\n  className?: string;\n  defaultValues: string[];\n  options: MultiselectOption[];\n  onChange: (values: string[]) => void;\n}\n\nconst Multiselect: FunctionComponent<MultiselectProps> = ({\n  className,\n  defaultValues,\n  options,\n  onChange,\n}) => {\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(defaultValues);\n\n  return (\n    <div className={`a-multiselect ${className ? className : ''}`}>\n      {options.map((option) => {\n        const isSelected = selectedOptions.includes(option.value);\n        const optionStyles = isSelected ? {\n          color: option.color,\n          textShadow: `0px -2px 16px ${option.color}`,\n        } : {};\n        const borderStyles = isSelected ? {\n          backgroundColor: option.color,\n          boxShadow: `0 0 12px ${option.color}, 0 1px 6px ${option.color}`,\n        } : {};\n\n        return (\n          <div\n            key={`multiselect-option-${option.value}`}\n            className={`a-multiselect__option ${isSelected ? 'selected' : ''}`}\n            onClick={() => onClickOption(option)}\n            style={optionStyles}\n          >\n            {option.label}\n            <span className=\"a-multiselect__option-borderBottom\" style={borderStyles}></span>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  function onClickOption(option: MultiselectOption) {\n    const newSelectedOptions = xor(selectedOptions, [option.value]);\n    setSelectedOptions(newSelectedOptions);\n    onChange(newSelectedOptions);\n  }\n};\n\nexport default Multiselect;","import React, { FunctionComponent } from 'react';\n\nimport { camelCase } from 'lodash';\n\nimport CheckboxSelect from 'components/atoms/CheckboxSelect/CheckboxSelect';\nimport Dropdown from 'components/atoms/Dropdown/Dropdown';\nimport Multiselect, { MultiselectOption } from 'components/atoms/Multiselect/Multiselect';\nimport Search from 'components/atoms/Search/Search';\nimport { DEFAULT_RARITIES_FILTERS } from 'engine/EngineItems';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport useFilters from 'hooks/useFilters';\nimport { CharacterClass } from 'types/Character.types';\nimport { ItemsFilters, FiltersType } from 'types/Filters.types';\nimport { ItemRarity } from 'types/Item.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n\n  const raritiesOptions: MultiselectOption[] = allEnumValues(ItemRarity).map(rarity => ({\n    label: rarity,\n    value: rarity,\n    color: `var(--color-item-${camelCase(rarity)})`,\n  }));\n\n  const classOptions = allEnumValues(CharacterClass).map(charClass => ({\n    label: charClass === CharacterClass.All ? 'All classes' : charClass,\n    value: charClass,\n  }));\n\n  return (\n    <div className=\"o-itemFilters\">\n      <Search\n        className=\"o-itemFilters__search\"\n        placeholder=\"Search\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n      <Multiselect\n        className=\"o-itemFilters__raritySelect\"\n        defaultValues={filters.rarities ? filters.rarities : DEFAULT_RARITIES_FILTERS}\n        options={raritiesOptions}\n        onChange={onRaritiesSelect}\n      />\n      <CheckboxSelect\n        className=\"o-itemFilters__setCheckbox\"\n        selected={filters.onlySet || false}\n        label=\"Only Sets\"\n        value=\"Set\"\n        color={`var(--color-item-set)`}\n        onChange={onSetSelect}\n      />\n      <Dropdown\n        className=\"o-itemFilters__classDropdown\"\n        label=\"\"\n        defaultValue={filters.characterClass || CharacterClass.All}\n        options={classOptions}\n        onChange={onClassSelect}\n      />\n    </div>\n  );\n\n  function onRaritiesSelect(rarities: string[]) {\n    setFilters({ rarities });\n  }\n\n  function onSetSelect(isSelected: boolean) {\n    setFilters({ onlySet: isSelected });\n  }\n\n  function onClassSelect(characterClass: string) {\n    setFilters({ characterClass });\n  }\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React, { FunctionComponent } from 'react';\n\ninterface Props {\n  currentOrder: 'asc' | 'desc' | null;\n  label: string;\n  onChange: () => void;\n}\n\nimport './SortSelect.scss';\n\nconst SortSelect: FunctionComponent<Props> = ({\n  currentOrder,\n  label,\n  onChange,\n}) => {\n  return (\n    <span className=\"a-sortSelect\" onClick={onChange}>\n      {label}\n      <span className=\"a-sortSelect__icon\">\n        <span className={`a-sortSelect__icon-up ${currentOrder === 'asc' ? 'selected' : ''}`}></span>\n        <span className={`a-sortSelect__icon-down ${currentOrder === 'desc' ? 'selected' : ''}`}></span>\n      </span>\n    </span>\n  );\n};\n\nexport default SortSelect;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport SortSelect from 'components/atoms/SortSelect/SortSelect';\nimport useFilters from 'hooks/useFilters';\nimport { ItemsFilters, FiltersType, SortOrder } from 'types/Filters.types';\n\nimport './Header.scss';\n\nconst Header: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n  let nameSortOrder: 'asc' | 'desc' | null = null;\n  let levelSortOrder: 'asc' | 'desc' | null = null;\n\n  if (filters.orderBy && [SortOrder.NameAsc, SortOrder.NameDesc].includes(filters.orderBy)) {\n    nameSortOrder = filters.orderBy === SortOrder.NameAsc ? 'asc' : 'desc';\n  }\n\n  if (filters.orderBy && [SortOrder.LevelAsc, SortOrder.LevelDesc].includes(filters.orderBy)) {\n    levelSortOrder = filters.orderBy === SortOrder.LevelAsc ? 'asc' : 'desc';\n  }\n\n  return (\n    <div className=\"m-header\">\n      <div className=\"m-header__items\">\n        <h3 className=\"m-header__thead\">\n          <SortSelect\n            label=\"Item\"\n            currentOrder={nameSortOrder}\n            onChange={() => orderBy(filters.orderBy === SortOrder.NameAsc ? SortOrder.NameDesc : SortOrder.NameAsc)}\n          />\n        </h3>\n        <h3  className=\"m-header__thead req\">\n          <SortSelect\n            label=\"Req.\"\n            currentOrder={levelSortOrder}\n            onChange={() => orderBy(filters.orderBy === SortOrder.LevelAsc ? SortOrder.LevelDesc : SortOrder.LevelAsc)}\n          />\n        </h3>\n      </div>\n      <div className=\"m-header__enchants\">\n        <h3 className=\"m-header__thead\">Possible Enchants</h3>\n      </div>\n    </div>\n  );\n\n  function orderBy(orderBy: SortOrder) {\n    setFilters({ orderBy });\n  }\n};\n\nexport default observer(Header);","import React, { FunctionComponent } from 'react';\n\nimport Header from 'components/molecules/Items/Header/Header';\nimport EnchantsPool from 'components/organisms/Items/EnchantsPool/EnchantsPool';\nimport Item from 'components/organisms/Items/Item/Item';\nimport { Item as ItemInterface } from 'types/Item.types';\n\nimport './List.scss';\n\ninterface Props {\n  items: ItemInterface[];\n}\n\nconst List: FunctionComponent<Props> = ({ items }) => {\n  const currentType = items[0]?.type;\n\n  return (\n    <div className=\"o-itemsList\">\n      {items.length > 0 ? (\n        <>\n          <Header />\n          <div className=\"o-itemsList__container\">\n            <div className=\"o-itemsList__items\">\n              {items.map(item => (\n                <Item key={`item-${item.uuid}`} item={item} />\n              ))}\n            </div>\n            <EnchantsPool itemType={currentType} />\n          </div>\n        </>\n      ) : (\n        <div className=\"o-itemsList__noItem\">\n          No item was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Items/Categories/Categories';\nimport Filters from 'components/organisms/Items/Filters/Filters';\nimport List from 'components/organisms/Items/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nimport './ItemsTemplate.scss';\n\nconst ItemsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n\n  const items = getFilteredItems();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-items__wrapper\">\n        <Categories />\n        <div className=\"t-items__list\">\n          <List items={items} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredItems() {\n    return Engine.Items.all({\n      search: filtersStore.items.search,\n      category: filtersStore.items.category,\n      type: filtersStore.items.type,\n      characterClass: filtersStore.items.characterClass,\n      rarities: filtersStore.items.rarities,\n      orderBy: filtersStore.items.orderBy,\n      onlySet: filtersStore.items.onlySet,\n    });\n  }\n};\n\nexport default observer(ItemsTemplate);","import React, { FunctionComponent } from 'react';\n\nimport ItemsTemplate from 'components/templates/Items/ItemsTemplate';\n\nexport const ItemsPage: FunctionComponent = () => {\n  return (\n    <ItemsTemplate />\n  );\n};\n\nexport default ItemsPage;","import React, { FunctionComponent, useEffect, useState, useRef } from 'react';\nimport { Router } from 'react-router';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { createBrowserHistory } from 'history';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport Loader from 'components/atoms/Loader/Loader';\nimport ScrollToTop from 'components/atoms/ScrollToTop/ScrollToTop';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport Layout from 'layouts/Default';\nimport EnchantsPage from 'pages/enchants/Enchants';\nimport ItemPage from 'pages/items/Item';\nimport ItemsPage from 'pages/items/Items';\nimport { RoutePath } from 'routes';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nconst Main: FunctionComponent =  () => {\n  const engine = useEngine();\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const history = useRef(createBrowserHistory());\n  const [engineLoaded, setEngineLoaded] = useState(engine.loaded);\n\n  useEffect(() => {\n    // Load engine data\n    autorun(() => {\n      setEngineLoaded(false);\n      if (!engine.loaded && filtersStore.currentPatch) {\n        // First load\n        engine.loadData().then(() => setEngineLoaded(true));\n      } else {\n        // Subsequent version changes\n        engine.loadVersion(filtersStore.currentPatch).then(() => setTimeout(() => setEngineLoaded(true), 500));\n      }\n    });\n  }, []);\n\n  return (\n    <Router history={history.current}>\n      <ScrollToTop />\n      <Layout>\n        <Switch>\n          <Route path=\"/\">\n            {!engineLoaded ? (\n              <Loader width={100} height={100} color=\"var(--color-element-yellow)\" />\n            ) : (\n              <Switch>\n                <Route exact path={RoutePath.Items} component={ItemsPage} />\n                <Route exact path={RoutePath.Item} component={ItemPage} />\n                <Route exact path={RoutePath.Enchants} component={EnchantsPage} />\n                <Route exact path={RoutePath.Enchant} component={EnchantsPage} />\n                <Route exact path={RoutePath.Skills} component={EnchantsPage} />\n                <Route exact path={RoutePath.Skill} component={EnchantsPage} />\n                <Route exact path={RoutePath.Developers} component={EnchantsPage} />\n\n                <Route>\n                  <Redirect to={RoutePath.Items} />\n                </Route>\n              </Switch>\n            )}\n\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default observer(Main);","import camelCaseKeys from 'camelcase-keys';\nimport { flatten } from 'flatten-anything';\nimport { isEmpty, merge, pick, has } from 'lodash';\nimport { observable, action, computed } from 'mobx';\nimport qs from 'query-string';\n\nimport patches from 'engine/data/patches.json';\nimport {\n  GeneralFilters,\n  ItemsFilters,\n  EnchantsFilters,\n  SkillsFilters,\n  Filters,\n  FiltersType,\n  QueryFiltersInterface,\n  SortOrder,\n} from 'types/Filters.types';\n\n// Has a dependency on query params, not very clean but it works. See `useFilters`\nexport class FiltersStore {\n  @observable\n  public general: GeneralFilters;\n\n  @observable\n  public items: ItemsFilters;\n\n  @observable\n  public enchants: EnchantsFilters;\n\n  @observable\n  public skills: SkillsFilters;\n\n  // A bit ugly but gets the job done\n  constructor() {\n    const query = qs.parse(location.search) as unknown as QueryFiltersInterface;\n\n    const latestPatch = patches[patches.length - 1];\n    /* Make sure the patch in the query string exists,\n     * And, yes, I DARED nest that, sue me! :smirk:\n     */\n    const defaultPatch = query.patch\n      ? patches.includes(query.patch)\n        ? query.patch\n        : latestPatch\n      : latestPatch;\n\n    this.general = {\n      patch: defaultPatch,\n    };\n\n    this.items = {\n      search: query.itemsSearch,\n      category: query.itemsCategory,\n      type: query.itemsType,\n      characterClass: query.itemsCharacterClass,\n      rarities: query.itemsRarities,\n      orderBy: query.itemsOrderBy as SortOrder,\n      onlySet: query.itemsOnlySet ? query.itemsOnlySet === 'true' : undefined, // typecast\n    };\n\n    this.enchants = {\n      search: query.enchantsSearch,\n      type: query.enchantsType,\n      category: query.enchantsCategory,\n    };\n\n    this.skills = {\n      search: query.skillsSearch,\n      characterClass: query.skillsCharacterClass,\n    };\n  }\n\n  @action\n  public setGeneralFilters(filters: Partial<GeneralFilters>) {\n    this.general = merge(this.general, filters);\n  }\n\n  @action\n  public setItemsFilters(filters: Partial<ItemsFilters>) {\n    this.items = merge(this.items, filters);\n\n    // Override rarities instead of merge as it is an array of unique toggleable values\n    if (filters.rarities) {\n      this.items.rarities = filters.rarities;\n    }\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.items.search = undefined;\n    }\n  }\n\n  @action\n  public setEnchantsFilters(filters: Partial<EnchantsFilters>) {\n    this.enchants = merge(this.enchants, filters);\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.enchants.search = undefined;\n    }\n  }\n\n  @action\n  public setSkillsFilters(filters: Partial<SkillsFilters>) {\n    this.skills = merge(this.skills, filters);\n\n    // Allow undefined value for search\n    if (isEmpty(filters.search)) {\n      this.items.search = undefined;\n    }\n  }\n\n  @computed\n  get filters(): Filters {\n    return {\n      general: this.general,\n      items: this.items,\n      enchants: this.enchants,\n      skills: this.skills,\n    };\n  }\n\n  @computed\n  get currentPatch() {\n    return this.general.patch;\n  }\n\n  public toQueryString(filtersTypes: FiltersType[]): string {\n    const query = camelCaseKeys(\n      flatten(pick(this.filters, filtersTypes), 1)\n    ) as Record<string, string>;\n\n    // Rename patch key so it is less intrusive\n    if (filtersTypes.includes(FiltersType.General)) {\n      query.patch = query.generalPatch;\n      delete query.generalPatch;\n    }\n\n    return qs.stringify(query as unknown as QueryFiltersInterface);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { useAsync } from 'react-async-hook';\n\nimport { Provider } from 'mobx-react';\n\nimport Loader from 'components/atoms/Loader/Loader';\nimport EngineContext from 'engine/context';\nimport Engine from 'engine/Engine';\nimport Main from 'pages/Main';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore, Stores } from 'types/DataStore.types';\n\nconst App: FunctionComponent = () => {\n  const [stores, setAllStores] = useState<Stores | null>(null);\n  const [engine, setEngine] = useState<Engine | null>(null);\n\n  useAsync(() => loadStoresAndData(), []);\n\n  if (!stores || !engine) {\n    return <Loader width={100} height={100} color=\"white\" />;\n  }\n\n  return (\n    <Provider {...stores}>\n      <EngineContext.Provider value={engine}>\n        <Main />\n      </EngineContext.Provider>\n    </Provider>\n  );\n\n  // return (\n  //   <I18nextProvider i18n={i18n}>\n  //           <Provider {...stores}>\n  //             <Main history={history} />\n  //           </Provider>\n  //   </I18nextProvider>\n  // );\n\n  async function loadStoresAndData() {\n    const loadedStores = await loadStores();\n    setAllStores(loadedStores);\n    setEngine(new Engine(loadedStores[DataStore.Filters].currentPatch));\n  }\n\n};\n\nasync function loadStores(): Promise<Stores> {\n  // Init rest of stores, (MobX requires all stores are instantiated immediately)\n  return {\n    [DataStore.Filters]: new FiltersStore(),\n  };\n}\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configure } from 'mobx';\n\nimport App from 'pages/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport 'assets/styles/fonts.css';\nimport 'assets/styles/variables.css';\nimport 'assets/styles/global.css';\nimport 'rc-drawer/assets/index.css';\nimport 'react-tippy/dist/tippy.css';\n\n// Mobx : all state that is observed somewhere needs to be changed through actions\nconfigure({ enforceActions: 'observed' });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}