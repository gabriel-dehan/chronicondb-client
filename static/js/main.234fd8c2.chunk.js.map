{"version":3,"sources":["engine/data lazy /^/.//.*//extracts$/ groupOptions: {} namespace object","types/Artifact.types.ts","components/atoms/Loader/Loader.tsx","engine/context.ts","helpers/typeUtils.ts","engine/EngineArtifacts.ts","types/Character.types.ts","types/Item.types.ts","types/Enchant.types.ts","types/Skill.types.ts","engine/data/dataMappings.ts","engine/EngineEnchants.ts","types/Filters.types.ts","helpers/objectUtils.ts","engine/EngineItems.ts","engine/EngineSkills.ts","engine/Engine.ts","components/atoms/ScrollToTop/ScrollToTop.tsx","hooks/useEngine.ts","hooks/useStores.ts","components/atoms/Icon/Icon.tsx","components/organisms/Footer/Footer.tsx","routes.ts","components/atoms/Dropdown/Dropdown.tsx","hooks/useOnClickOutside.ts","types/DataStore.types.ts","hooks/useFilters.ts","hooks/useResponsive.ts","components/atoms/GameIcon/GameIcon.tsx","components/organisms/Header/Header.tsx","layouts/Default.tsx","hooks/useSeo.tsx","components/organisms/Artifacts/Categories/Categories.tsx","components/atoms/Search/Search.tsx","components/organisms/Artifacts/Filters/Filters.tsx","components/molecules/Artifacts/Header/Header.tsx","hooks/useInfiniteScroll.tsx","components/atoms/Badge/Badge.tsx","components/organisms/Artifacts/Artifact/Artifact.tsx","components/organisms/Artifacts/List/List.tsx","components/templates/Artifacts/ArtifactsTemplate.tsx","pages/artifacts/Artifacts.tsx","components/templates/Developers/DevelopersTemplate.tsx","pages/developers/Developers.tsx","components/organisms/Enchants/Categories/Categories.tsx","components/organisms/Enchants/Filters/Filters.tsx","components/organisms/Enchants/Enchant/Enchant.tsx","components/organisms/Enchants/List/List.tsx","components/templates/Enchants/EnchantsTemplate.tsx","pages/enchants/Enchants.tsx","components/molecules/Tabs/Tabs.tsx","components/molecules/Items/ItemsEnchantsPool/ItemsEnchantsPool.tsx","components/molecules/Items/RunesEnchantsPool/RunesEnchantsPool.tsx","components/organisms/Items/EnchantsPool/EnchantsPool.tsx","components/molecules/Items/AppliedEnchant/AppliedEnchant.tsx","components/molecules/Items/EnchantSlot/EnchantSlot.tsx","components/molecules/Items/Set/Set.tsx","components/organisms/ItemDownloader/DownloadableItem/DownloadableItem.tsx","components/organisms/ItemDownloader/ItemDownloader.tsx","hooks/useAsDownloadableImage.ts","components/organisms/Items/Item/Item.tsx","components/templates/Item/ItemTemplate.tsx","pages/items/Item.tsx","components/organisms/Items/Categories/Categories.tsx","components/atoms/CheckboxSelect/CheckboxSelect.tsx","components/atoms/Multiselect/Multiselect.tsx","components/organisms/Items/Filters/Filters.tsx","components/atoms/SortSelect/SortSelect.tsx","components/molecules/Items/Header/Header.tsx","components/organisms/Items/List/List.tsx","components/templates/Items/ItemsTemplate.tsx","pages/items/Items.tsx","components/organisms/Skills/Skill/Skill.tsx","components/templates/Skill/SkillTemplate.tsx","pages/skills/Skill.tsx","components/organisms/Skills/Categories/Categories.tsx","components/organisms/Skills/Filters/Filters.tsx","components/molecules/Skills/Header/Header.tsx","components/organisms/Skills/List/List.tsx","components/templates/Skills/SkillsTemplate.tsx","pages/skills/Skills.tsx","pages/Main.tsx","stores/FiltersStore.ts","pages/App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","ArtifactType","Loader","width","height","color","style","position","top","left","viewBox","xmlns","stroke","fill","fillRule","strokeWidth","cx","cy","r","attributeName","begin","dur","values","calcMode","keyTimes","keySplines","repeatCount","EngineContext","createContext","allEnumValues","enumObject","key","CharacterClass","ItemRarity","ItemCategory","ItemType","SetUuid","EnchantType","EnchantCategory","DamageElement","SkillFamily","SkillType","SkillTree","EngineArtifacts","engine","searchEngine","types","this","Minisearch","idField","fields","storeFields","removeAll","addAll","data","artifactsSearchIndex","loaded","artifacts","filters","filterBySearch","filterByType","sort","a","b","uuid","search","resultingUuids","prefix","combineWith","filter","skill","includes","Triangle","type","EpicEnchantableCategories","Ring","Amulet","EnchantableCategories","Accessory","Armor","Boots","Helmet","Offhand","Weapon","ENCHANT_SLOTS_BY_RARITY","Ordinary","Enchanted","count","Minor","Major","categoriesRestriction","Rare","Epic","Unique","Legendary","TrueLegendary","Mythical","ITEM_TYPES_BY_CATEGORIES","Helm","Bow","Sword","Staff","Fists","Spellbook","Shield","Tome","Claw","Arrow","Gem","CubeGem","StarGem","SphereGem","Consumables","Elixir","Potion","Scroll","Relic","Misc","Key","QuestItem","SpecialItem","Dye","Container","UnknownItem","Bag","Craft","CraftingMaterial","Rune","SKILLTREES_BY_CLASSES","All","Scout","WrathfulRevenge","Seeker","Challenger","Thief","Bond","Harverst","Summoner","SunAndMoon","FuriousRetaliation","AllForOne","OneForAll","Templar","Reckoning","Valkyrie","ThunderCharged","ThunderingArmy","Caines","Wargod","Ayeela","Soulpurger","Berserker","Bloodsoak","Cataclysm","SpiritualGarb","Skysoul","Dragonfire","Volcanic","NothernRage","FrostWyrm","Warden","HighRanger","Windcaller","Everspring","ShroomTender","Stormcaller","WispMother","Torrential","Snowstorm","Warlock","BloodBinder","PlagueMage","Coldhearted","Deathbringer","DemonLord","BurningHells","Desecrator","Masochist","Christmas","Master","Vengeance","Wrath","Conviction","Redemption","Mastery","Guardian","SkyLord","Dragonkin","Frostborn","WindRanger","Druid","StormCaller","WinterHerald","Corruptor","Lich","Demonologist","Reaper","SortOrder","FiltersType","EngineEnchants","categories","_categoriesByTypes","enchantsPool","hydrateEnchantsPool","enchantsSearchIndex","enchants","filterByTypeAndCategory","enchant","category","item","rarity","enchantSlots","fixedEnchants","enchantsToRawEnchants","baseEnchants","isEmpty","categoriesByTypes","defaultType","reduce","memo","push","uniq","obj","sortFunction","result","defaultCategory","enchantsIds","skills","compact","enchantId","find","ranges","name","description","min","minimum","max","cap","skillId","s","hydratedPool","poolByEnchantType","itemType","DEFAULT_RARITIES_FILTERS","FILTER_UNAFFECTED_CATEGORIES","ITEM_TYPES_WITH_EPIC_REPLACEMENT_CHANCE","EngineItems","typesByCategories","categoriesByType","_categoriesByType","itemsSearchIndex","items","filterByClass","filterByRarities","filterOnlySet","sortBy","set","sets","setItems","itemIds","itemId","characterClass","classRestriction","rarities","onlySet","orderBy","minLevel","NameAsc","toUpperCase","NameDesc","LevelAsc","LevelDesc","findKey","classes","trees","treesByClasses","skillsSearchIndex","filterByClassAndTree","filterByFamily","filterByTypes","params","class","toLowerCase","classTrees","defaultTreeForClass","defaultClass","tree","defaultTree","family","Engine","version","Items","Enchants","Skills","Artifacts","EngineSkills","undefined","loadData","default","onDataLoaded","compare","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","useEngine","useContext","useStores","stores","allStores","MobXProviderContext","storeNames","length","forEach","storeName","store","String","IconName","Footer","className","target","rel","href","Icon","src","alt","RouteId","RoutePath","Dropdown","element","callback","label","defaultValue","options","onChange","useState","showDropdown","setShowDropdown","value","currentValue","setCurrentValue","currentValueLabel","opt","dropdownRef","createRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","onClick","ArrowDownBlue","index","onSelect","DataStore","ROUTES_ID_MAPPING","Item","Skill","Developers","AVAILABLE_FILTERS_FOR_ROUTES","General","useFilters","filtersType","routes","filtersStore","Filters","history","useHistory","location","path","route","matchPath","autorun","filtersForPath","replace","toQueryString","capitalize","Breakpoint","GameIconType","useResponsive","isUpToTablet","useMediaQuery","query","Tablet","MAIN_MENU_ITEMS","observer","setFilters","isMobileMenuOpen","setIsMobileMenuOpen","Menu","open","onClose","handler","placement","menuItem","menuRouteId","isCurrent","to","patch","patches","onPatchChange","DefaultLayout","children","useSeo","title","content","BASE_PATH","ICONS_PATH","Enchant","SkillSpell","SkillMastery","ClassProfile","ClassHeader","ClassBanner","Artifact","GameIcon","Categories","baseType","selectedType","setSelectedType","onHandleClick","renderCategoryMenu","isSelected","artifactType","Search","placeholder","inputValue","setInputValue","onDebouncedChange","useCallback","debounce","val","Header","useInfiniteScroll","perPage","chunk","dataChunks","setDataChunks","paginatedData","setPaginatedData","chunks","InfiniteScroll","getTag","dataLength","next","fetchNextData","hasMore","loader","currentChunk","Math","ceil","Badge","backgroundColor","artifact","camelCase","arrow","distance","offset","size","charClass","renderBadges","replacementCounter","replaceWithJSX","match","i","renderDescription","List","all","EnchantsPage","Seo","DevelopersTemplate","DevelopersPage","baseCategory","selectedCategory","setSelectedCategory","renderTypeMenu","renderCategories","enchantCategories","enchantCategory","enchantType","enchantTypes","defaultEnchantCategory","onTypeSelect","ArrowRightBlue","isGem","affixes","affix","finalNodes","replacedRanges","_","replacedSkills","parseInt","skillName","toString","renderRange","renderRanges","itemTypes","rolls","maximum","greaterCap","EnchantsPool","navItems","defaultItem","currentTab","setCurrentTab","React","navItem","hoverColor","borderColor","onTabClick","Children","node","ItemsEnchantsPool","getTypeEnchantsPool","availableEnchantTypes","pickBy","pool","currentEnchant","setCurrentEnchant","renderPoolForType","reverse","isString","getRunesEnchantsPool","AppliedEnchant","descriptionToTemplate","EnchantSlot","enchantSlot","prev","curr","ItemSet","setCollapsed","isCollapsed","setIsCollapsed","ArrowRightYellow","ArrowDownYellow","join","bonuses","bonus","piecesCount","icon","itemEnchants","useMemo","getItemEnchantsSlots","itemSetData","getSetData","renderBaseEnchants","enchantForType","renderFixedEnchants","slot","renderEnchantsSlots","flavor","ItemDownloader","elementRef","renderItem","setRenderItem","download","blob","setBlob","setTimeout","toBlob","pixelRatio","saveAs","useAsDownloadableImage","opacity","display","transform","strokeOpacity","d","from","enableBackground","ItemTemplate","useParams","ArrowRightWhite","ItemPage","renderItemTypes","onItemTypeSelect","defaultItemType","onCategorySelect","CheckboxSelect","selected","setIsSelected","optionStyles","textShadow","borderStyles","boxShadow","Multiselect","defaultValues","selectedOptions","setSelectedOptions","option","newSelectedOptions","xor","onClickOption","raritiesOptions","classOptions","SortSelect","currentOrder","nameSortOrder","levelSortOrder","currentType","ItemsPage","SKILLS_TEMPLATE_REGEX","DAMAGE_TYPES_TEMPLATE_REGEX","VALUES_TEMPLATE_REGEX","GENERIC_REPLACE_REGEX","SINGLE_REPLACE_REGEX","SKILL_FAMILIES","safeUuid","renderSkillLink","findByName","damageTypeId","valueType","renderValues","skillRequirement","skillReq","maxRank","cooldown","cost100","valueNodes","SkillTemplate","queryParams","qs","parse","findParams","skillCharacterClass","SkillPage","baseClass","baseTree","selectedClass","setSelectedClass","selectedTree","setSelectedTree","renderSkillTrees","skillTrees","skillTree","onSkillTreeSelect","defaultSkillTree","onClassSelect","skillTypes","typesOptions","familyOptions","useRef","createBrowserHistory","engineLoaded","setEngineLoaded","currentPatch","loadVersion","exact","component","SkillsPage","ArtifactPage","FiltersStore","latestPatch","defaultPatch","general","itemsSearch","itemsCategory","itemsType","itemsCharacterClass","itemsRarities","itemsOrderBy","itemsOnlySet","enchantsSearch","enchantsType","enchantsCategory","skillsSearch","skillsCharacterClass","skillsTree","skillsTypes","skillsFamily","artifactSearch","merge","has","filtersTypes","camelCaseKeys","flatten","pick","FiltersTypes","generalPatch","stringify","observable","action","computed","loadStores","App","setAllStores","setEngine","useAsync","loadStoresAndData","Provider","loadedStores","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configure","enforceActions","ReactDOM","render","StrictMode","getElementById"],"mappings":"qTAAA,IAAIA,EAAM,CACT,oBAAqB,CACpB,IACA,GAED,oBAAqB,CACpB,IACA,GAED,oBAAqB,CACpB,IACA,GAED,oBAAqB,CACpB,IACA,GAED,oBAAqB,CACpB,IACA,GAED,oBAAqB,CACpB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,oBAAqB,CACpB,IACA,GAED,oBAAqB,CACpB,IACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,IAGD,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,EAC5B,GACD,CACAX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,EACpB,EACAC,EAAoBW,GAAK,GACzBG,EAAOC,QAAUf,C,o6BC9CLgB,E,2GCqCGC,EA/C0B,SAAH,GAI/B,IAHLC,EAAK,EAALA,MACAC,EAAM,EAANA,OACAC,EAAK,EAALA,MAEA,OACE,qBAAKC,MAAO,CAAEC,SAAU,WAAYC,IAAI,cAAD,OAAgBJ,EAAS,EAAC,OAAOK,KAAK,cAAD,OAAgBN,EAAQ,EAAC,QAAQ,SAC3G,qBAAKA,MAAK,UAAKA,GAASC,OAAM,UAAKA,GAAUM,QAAQ,YAAYC,MAAM,6BAA6BC,OAAQP,EAAM,SAChH,oBAAGQ,KAAK,OAAOC,SAAS,UAAUC,YAAY,IAAG,UAC/C,yBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAG,UAC3B,yBAASC,cAAc,IACrBC,MAAM,KAAKC,IAAI,OACfC,OAAO,QACPC,SAAS,SACTC,SAAS,OACTC,WAAW,uBACXC,YAAY,eACd,yBAASP,cAAc,iBACrBC,MAAM,KAAKC,IAAI,OACfC,OAAO,OACPC,SAAS,SACTC,SAAS,OACTC,WAAW,sBACXC,YAAY,kBAEhB,yBAAQV,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAG,UAC3B,yBAASC,cAAc,IACrBC,MAAM,QAAQC,IAAI,OAClBC,OAAO,QACPC,SAAS,SACTC,SAAS,OACTC,WAAW,uBACXC,YAAY,eACd,yBAASP,cAAc,iBACrBC,MAAM,QAAQC,IAAI,OAClBC,OAAO,OACPC,SAAS,SACTC,SAAS,OACTC,WAAW,sBACXC,YAAY,wBAM1B,EC5CeC,EAFOC,wBAAsB,M,gCCGrC,SAASC,EAAiBC,GAC/B,OAAOhC,OACJD,KAAKiC,GACL9C,KAAI,SAAA+C,GAAG,OAAID,EAAWC,EAAI,GAC/B,EHQC,SAJW9B,KAAY,oBAAZA,EAAY,kBAAZA,EAAY,YAIvB,CAJWA,MAAY,KIfkD,ICH9D+B,ECyBAC,EAUAC,EAeAC,EAkCAC,ECpDAC,EAQAC,ECRAC,EAWAC,EAiBAC,EAUAC,E,UJ/DSC,EAAe,WAKlC,WAAYC,GAAiB,yBAJbA,YAAM,OACdC,kBAAY,OACbC,WAAK,EAGVC,KAAKH,OAASA,EACdG,KAAKD,MAAQjB,EAAc5B,GAC3B8C,KAAKF,aAAe,IAAIG,IAAW,CACjCC,QAAS,OACTC,OAAQ,CAAC,OAAQ,QAAS,OAAQ,eAClCC,YAAa,CAAC,SAElB,CAmDC,OAnDA,yCAED,WACEJ,KAAKF,aAAaO,YAClBL,KAAKF,aAAaQ,OAAON,KAAKO,KAAKC,qBACrC,GAEA,gBACA,WACE,OAAOR,KAAKH,OAAOU,IACrB,GAAC,qBAED,WACE,OAAIP,KAAKH,OAAOY,OACPT,KAAKO,KAAKG,UAGZ,EACT,GAAC,iBAED,SAAWC,GAAiD,IAAD,EACrDD,EAA0B,QAAjB,EAAGV,KAAKU,iBAAS,QAAI,GAIlC,OAHAA,EAAYV,KAAKY,eAAeF,EAAWC,IAC3CD,EAAYV,KAAKa,aAAaH,EAAWC,IAC/BG,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,KAAOD,EAAEC,IAAI,IACjCP,CACT,GAAC,4BAED,SAAuBA,EAAgCC,GACrD,GAAIA,EAAQO,OAAQ,CAClB,IAAMC,EAAiBnB,KAAKF,aAAaoB,OAAOP,EAAQO,OAAQ,CAC9DE,QAAQ,EACRC,YAAa,QACZpF,KAAI,SAAAkC,GAAC,OAAIA,EAAE8C,IAAI,IAElB,OAAOP,EAAUY,QAAO,SAAAC,GAAK,OAAIJ,EAAeK,SAASD,EAAMN,KAAK,GACtE,CAEA,OAAOP,CACT,GAAC,uBAED,WACE,OAAOxD,EAAauE,QACtB,GAAC,0BAED,SAAqBf,EAAgCC,GACnD,OAAIA,EAAQe,KACHhB,EAAUY,QAAO,YAAO,SAAJI,OAAoBf,EAAQe,IAAI,IAGtDhB,CACT,KAAC,EAhEiC,G,QCDnC,SANWzB,KAAc,UAAdA,EAAc,kBAAdA,EAAc,sBAAdA,EAAc,gBAAdA,EAAc,kBAMzB,CANWA,MAAc,KCiCzB,SARWC,KAAU,oBAAVA,EAAU,sBAAVA,EAAU,YAAVA,EAAU,gBAAVA,EAAU,sBAAVA,EAAU,+BAAVA,EAAU,oBAQrB,CARWA,MAAU,KAuBrB,SAbWC,KAAY,gBAAZA,EAAY,cAAZA,EAAY,cAAZA,EAAY,gBAAZA,EAAY,kBAAZA,EAAY,YAAZA,EAAY,gBAAZA,EAAY,sBAAZA,EAAY,0BAAZA,EAAY,UAAZA,EAAY,YAAZA,EAAY,cAavB,CAbWA,MAAY,KA+CvB,SAhCWC,KAAQ,YAARA,EAAQ,cAARA,EAAQ,UAARA,EAAQ,cAARA,EAAQ,cAARA,EAAQ,cAARA,EAAQ,cAARA,EAAQ,sBAARA,EAAQ,YAARA,EAAQ,gBAARA,EAAQ,YAARA,EAAQ,cAARA,EAAQ,sBAARA,EAAQ,gBAARA,EAAQ,UAARA,EAAQ,YAARA,EAAQ,gBAARA,EAAQ,uBAARA,EAAQ,2BAARA,EAAQ,UAARA,EAAQ,gBAARA,EAAQ,gBAARA,EAAQ,sBAARA,EAAQ,qCAARA,EAAQ,2BAARA,EAAQ,UAARA,EAAQ,mBAARA,EAAQ,uBAARA,EAAQ,mBAARA,EAAQ,cAARA,EAAQ,YAgCnB,CAhCWA,MAAQ,KAiFnB,SA/CWC,KAAO,wBAAPA,EAAO,gBAAPA,EAAO,YAAPA,EAAO,qBAAPA,EAAO,qBAAPA,EAAO,cAAPA,EAAO,oBAAPA,EAAO,eAAPA,EAAO,mBAAPA,EAAO,yBAAPA,EAAO,6BAAPA,EAAO,wBAAPA,EAAO,oBAAPA,EAAO,sBAAPA,EAAO,gCAAPA,EAAO,+BAAPA,EAAO,gBAAPA,EAAO,gBAAPA,EAAO,wBAAPA,EAAO,gBAAPA,EAAO,sBAAPA,EAAO,sBAAPA,EAAO,kBAAPA,EAAO,2BAAPA,EAAO,mBAAPA,EAAO,wBAAPA,EAAO,2BAAPA,EAAO,sBAAPA,EAAO,0BAAPA,EAAO,wBAAPA,EAAO,0BAAPA,EAAO,6BAAPA,EAAO,sBAAPA,EAAO,2BAAPA,EAAO,yBAAPA,EAAO,uBAAPA,EAAO,wBAAPA,EAAO,wBAAPA,EAAO,4BAAPA,EAAO,wBAAPA,EAAO,0BAAPA,EAAO,wBAAPA,EAAO,qBAAPA,EAAO,sBAAPA,EAAO,iBAAPA,EAAO,iBA+ClB,CA/CWA,MAAO,KC9ClB,SANWC,KAAW,cAAXA,EAAW,cAAXA,EAAW,YAAXA,EAAW,sBAAXA,EAAW,UAMtB,CANWA,MAAW,KAatB,SALWC,KAAe,cAAfA,EAAe,kBAAfA,EAAe,UAAfA,EAAe,YAK1B,CALWA,MAAe,KCC1B,SATWC,KAAa,oBAAbA,EAAa,YAAbA,EAAa,cAAbA,EAAa,YAAbA,EAAa,sBAAbA,EAAa,oBAAbA,EAAa,gBAAbA,EAAa,gBASxB,CATWA,MAAa,KA0BxB,SAfWC,KAAW,kBAAXA,EAAW,YAAXA,EAAW,cAAXA,EAAW,cAAXA,EAAW,gBAAXA,EAAW,cAAXA,EAAW,gBAAXA,EAAW,gBAAXA,EAAW,cAAXA,EAAW,kBAAXA,EAAW,cAAXA,EAAW,cAAXA,EAAW,kBAetB,CAfWA,MAAW,KAyBtB,SARWC,KAAS,sBAATA,EAAS,wBAATA,EAAS,kBAATA,EAAS,4BAATA,EAAS,0BAATA,EAAS,sBAATA,EAAS,0BAQpB,CARWA,MAAS,KA4BpB,SAlBWC,KAAS,kBAATA,EAAS,wBAATA,EAAS,sBAATA,EAAS,4BAATA,EAAS,sBAATA,EAAS,cAATA,EAAS,sBAATA,EAAS,oBAATA,EAAS,YAATA,EAAS,gBAATA,EAAS,wBAATA,EAAS,mBAATA,EAAS,2BAATA,EAAS,sBAATA,EAAS,yBAATA,EAAS,6BAATA,EAAS,cAkBpB,CAlBWA,MAAS,KCjEd,IAAMgC,EAA4C,CAACxC,EAAayC,KAAMzC,EAAa0C,QAC7EC,EAAwC,CACnD3C,EAAayC,KACbzC,EAAa0C,OACb1C,EAAa4C,UACb5C,EAAa6C,MACb7C,EAAa8C,MACb9C,EAAa+C,OACb/C,EAAagD,QACbhD,EAAaiD,QAGFC,GAA8D,mBACxEnD,EAAWoD,SAAW,IAAE,cACxBpD,EAAWqD,UAAY,CACtB,CACEC,MAAO,EACPzC,MAAO,CAACT,EAAYmD,MAAOnD,EAAYoD,OACvCC,sBAAuBb,KAE1B,cACA5C,EAAW0D,KAAO,CACjB,CACEJ,MAAO,EACPzC,MAAO,CAACT,EAAYmD,OACpBE,sBAAuBb,GAEzB,CACEU,MAAO,EACPzC,MAAO,CAACT,EAAYoD,OACpBC,sBAAuBb,GAEzB,CACEU,MAAO,EACPzC,MAAO,CAACT,EAAYuD,MACpBF,sBAAuBhB,KAE1B,cACAzC,EAAW4D,OAAS,CACnB,CACEN,MAAO,EACPzC,MAAO,CAACT,EAAYmD,OACpBE,sBAAuBb,GAEzB,CACEU,MAAO,EACPzC,MAAO,CAACT,EAAYoD,OACpBC,sBAAuBb,GAEzB,CACEU,MAAO,EACPzC,MAAO,CAACT,EAAYuD,MACpBF,sBAAuBhB,KAE1B,cACAzC,EAAW6D,UAAY,CACtB,CACEP,MAAO,EACPzC,MAAO,CAACT,EAAYmD,OACpBE,sBAAuBb,GAEzB,CACEU,MAAO,EACPzC,MAAO,CAACT,EAAYoD,OACpBC,sBAAuBb,GAEzB,CACEU,MAAO,EACPzC,MAAO,CAACT,EAAYuD,MACpBF,sBAAuBhB,KAE1B,cACAzC,EAAW8D,cAAgB,CAC1B,CACER,MAAO,EACPzC,MAAO,CAACT,EAAYmD,OACpBE,sBAAuBb,GAEzB,CACEU,MAAO,EACPzC,MAAO,CAACT,EAAYoD,OACpBC,sBAAuBb,GAEzB,CACEU,MAAO,EACPzC,MAAO,CAACT,EAAYuD,MACpBF,sBAAuBhB,KAE1B,cACAzC,EAAW+D,SAAW,IAAE,GAGdC,GAA0D,mBACpE/D,EAAa+C,OAAS,CAAC9C,EAAS+D,OAAK,cACrChE,EAAa6C,MAAQ,CAAC5C,EAAS4C,QAAM,cACrC7C,EAAa8C,MAAQ,CAAC7C,EAAS6C,QAAM,cACrC9C,EAAaiD,OAAS,CACrBhD,EAASgE,IACThE,EAASiE,MACTjE,EAASkE,MACTlE,EAASmE,QACV,cACApE,EAAagD,QAAU,CACtB/C,EAASoE,UACTpE,EAASqE,OACTrE,EAASsE,KACTtE,EAASuE,KACTvE,EAASwE,QACV,cACAzE,EAAayC,KAAO,CAACxC,EAASwC,OAAK,cACnCzC,EAAa0C,OAAS,CAACzC,EAASyC,SAAO,cACvC1C,EAAa4C,UAAY,CAAC3C,EAAS2C,YAAU,cAC7C5C,EAAa0E,IAAM,CAClBzE,EAAS0E,QACT1E,EAAS2E,QACT3E,EAAS4E,YACV,cACA7E,EAAa8E,YAAc,CAC1B7E,EAAS8E,OACT9E,EAAS+E,OACT/E,EAASgF,OACThF,EAASiF,QACV,cACAlF,EAAamF,KAAO,CACnBlF,EAASmF,IACTnF,EAASoF,UACTpF,EAASqF,YACTrF,EAASsF,IACTtF,EAASuF,UACTvF,EAASwF,YACTxF,EAASyF,MACV,cACA1F,EAAa2F,MAAQ,CACpB1F,EAAS2F,iBACT3F,EAAS4F,OACV,GA6GUC,GA1GgD,mBAC1DhG,EAAeiG,IAAM,CACpB7F,EAAQ8F,MACR9F,EAAQ+F,gBACR/F,EAAQgG,OACRhG,EAAQiG,WACRjG,EAAQkG,MACRlG,EAAQmG,KACRnG,EAAQoG,SACRpG,EAAQqG,SACRrG,EAAQsG,WACRtG,EAAQuG,mBACRvG,EAAQwG,UACRxG,EAAQyG,YACT,cACA7G,EAAe8G,QAAU,CACxB1G,EAAQ2G,UACR3G,EAAQ4G,SACR5G,EAAQ6G,eACR7G,EAAQ8G,eACR9G,EAAQ+G,OACR/G,EAAQgH,OACRhH,EAAQiH,OACRjH,EAAQkH,aACT,cACAtH,EAAeuH,UAAY,CAC1BnH,EAAQoH,UACRpH,EAAQqH,UACRrH,EAAQsH,cACRtH,EAAQuH,QACRvH,EAAQwH,WACRxH,EAAQyH,SACRzH,EAAQ0H,YACR1H,EAAQ2H,YACT,cACA/H,EAAegI,OAAS,CACvB5H,EAAQ6H,WACR7H,EAAQ8H,WACR9H,EAAQ+H,WACR/H,EAAQgI,aACRhI,EAAQiI,YACRjI,EAAQkI,WACRlI,EAAQmI,WACRnI,EAAQoI,YACT,cACAxI,EAAeyI,QAAU,CACxBrI,EAAQsI,YACRtI,EAAQuI,WACRvI,EAAQwI,YACRxI,EAAQyI,aACRzI,EAAQ0I,UACR1I,EAAQ2I,aACR3I,EAAQ4I,WACR5I,EAAQ6I,YAI2C,mBACpD7I,EAAQsG,WAAa,CAAC,IAAK,MAAI,cAC/BtG,EAAQgG,OAAS,CAAC,IAAK,IAAK,MAAI,cAChChG,EAAQmG,KAAO,CAAC,IAAK,MAAI,cACzBnG,EAAQwG,UAAY,CAAC,IAAK,MAAI,cAC9BxG,EAAQyG,UAAY,CAAC,IAAK,MAAI,cAC9BzG,EAAQ8F,MAAS,CAAC,IAAK,IAAK,MAAI,cAChC9F,EAAQqG,SAAW,CAAC,IAAK,IAAK,IAAK,MAAI,cACvCrG,EAAQkG,MAAQ,CAAC,IAAK,MAAI,cAC1BlG,EAAQoG,SAAY,CAAC,IAAK,MAAI,cAC9BpG,EAAQ+F,gBAAkB,CAAC,IAAK,IAAK,MAAI,cACzC/F,EAAQuG,mBAAqB,CAAC,IAAK,IAAK,IAAK,MAAI,cACjDvG,EAAQiG,WAAa,CAAC,IAAK,IAAK,MAAI,cACpCjG,EAAQ4G,SAAW,CAAC,IAAK,IAAK,IAAK,MAAI,cACvC5G,EAAQ2G,UAAY,CAAC,IAAK,IAAK,IAAK,MAAI,cACxC3G,EAAQ8G,eAAiB,CAAC,IAAK,IAAK,IAAK,MAAI,cAC7C9G,EAAQ6G,eAAiB,CAAC,IAAK,IAAK,IAAK,MAAI,cAC7C7G,EAAQ+G,OAAS,CAAC,IAAK,IAAK,IAAK,MAAI,cACrC/G,EAAQgH,OAAS,CAAC,IAAK,IAAK,IAAK,MAAI,cACrChH,EAAQkH,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzClH,EAAQiH,OAAS,CAAC,IAAK,IAAK,IAAK,MAAI,cACrCjH,EAAQoH,UAAY,CAAC,GAAI,IAAK,IAAK,MAAI,cACvCpH,EAAQqH,UAAY,CAAC,IAAK,IAAK,IAAK,MAAI,cACxCrH,EAAQuH,QAAU,CAAC,IAAK,IAAK,IAAK,MAAI,cACtCvH,EAAQsH,cAAgB,CAAC,IAAK,IAAK,IAAK,MAAI,cAC5CtH,EAAQyH,SAAW,CAAC,IAAK,IAAK,IAAK,MAAI,cACvCzH,EAAQwH,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzCxH,EAAQ0H,YAAc,CAAC,IAAK,IAAK,IAAK,MAAI,cAC1C1H,EAAQ2H,UAAY,CAAC,IAAK,IAAK,IAAK,MAAI,cACxC3H,EAAQsI,YAAc,CAAC,IAAK,IAAK,IAAK,MAAI,cAC1CtI,EAAQuI,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzCvI,EAAQwI,YAAc,CAAC,IAAK,IAAK,IAAK,MAAI,cAC1CxI,EAAQyI,aAAe,CAAC,IAAK,IAAK,IAAK,MAAI,cAC3CzI,EAAQ0I,UAAY,CAAC,IAAK,IAAK,IAAK,MAAI,cACxC1I,EAAQ2I,aAAe,CAAC,IAAK,IAAK,IAAK,MAAI,cAC3C3I,EAAQ4I,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzC5I,EAAQ6I,UAAY,CAAC,IAAK,IAAK,IAAK,MAAI,cACxC7I,EAAQ6H,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzC7H,EAAQ8H,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzC9H,EAAQgI,aAAe,CAAC,IAAK,IAAK,IAAK,MAAI,cAC3ChI,EAAQ+H,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzC/H,EAAQiI,YAAc,CAAC,GAAI,IAAK,IAAK,MAAI,cACzCjI,EAAQkI,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzClI,EAAQmI,WAAa,CAAC,IAAK,IAAK,IAAK,MAAI,cACzCnI,EAAQoI,UAAY,CAAC,IAAK,IAAK,IAAK,MAAI,cACxCpI,EAAQ8I,UAAY,CAAC,IAAK,IAAK,IAAK,IAAK,MAAI,cAC7C9I,EAAQ+I,OAAS,CAAC,IAAK,MAGsD,mBAC7EnJ,EAAe8G,QAAU,CACxBpG,EAAU0I,UACV1I,EAAU2I,MACV3I,EAAU4I,WACV5I,EAAU6I,WACV7I,EAAU8I,UACX,cACAxJ,EAAeuH,UAAY,CAC1B7G,EAAU+I,SACV/I,EAAUgJ,QACVhJ,EAAUiJ,UACVjJ,EAAUkJ,UACVlJ,EAAU8I,UACX,cACAxJ,EAAegI,OAAS,CACvBtH,EAAUmJ,WACVnJ,EAAUoJ,MACVpJ,EAAUqJ,YACVrJ,EAAUsJ,aACVtJ,EAAU8I,UACX,cACAxJ,EAAeyI,QAAU,CACxB/H,EAAUuJ,UACVvJ,EAAUwJ,KACVxJ,EAAUyJ,aACVzJ,EAAU0J,OACV1J,EAAU8I,UACX,GCrQ2D,IChBlDa,EAuEAC,EDhDSC,EAAc,WAQjC,WAAY3J,GAAiB,yBAPbA,YAAM,OACf4J,gBAAU,OACV1J,WAAK,OACJ2J,wBAAkB,OAClBC,kBAAY,OACZ7J,kBAAY,EAGlBE,KAAKH,OAASA,EACdG,KAAKyJ,WAAa3K,EAAcS,GAChCS,KAAKD,MAAQjB,EAAcQ,GAC3BU,KAAKF,aAAe,IAAIG,IAAW,CACjCC,QAAS,OACTC,OAAQ,CACN,OACA,WACA,cACA,YACA,kBAEFC,YAAa,CAAC,SAElB,CA0NC,OA1NA,yCAED,WACEJ,KAAK2J,aAAe3J,KAAK4J,sBACzB5J,KAAKF,aAAaO,YAClBL,KAAKF,aAAaQ,OAAON,KAAKO,KAAKsJ,oBACrC,GAEA,iBACA,SAAWlJ,GACT,IAAImJ,EAAW9J,KAAK8J,SAKpB,OAHAA,EAAW9J,KAAKY,eAAekJ,EAAUnJ,GACzCmJ,EAAW9J,KAAK+J,wBAAwBD,EAAUnJ,EAGpD,GAAC,iCACD,SAA2Be,GACzB,OAAO1B,KAAK2J,aAAajI,IAAS,IACpC,GAAC,kCAED,WACE,OAAO1B,KAAK8J,SAASxI,QACnB,SAAC0I,GAAO,OAAKA,EAAQC,WAAa1K,EAAgByF,IAAI,GAE1D,GAAC,kCAED,SAA4BkF,GAC1B,GAAIlK,KAAKH,OAAOY,SAAW,CAACvB,EAAW+D,UAAUzB,SAAS0I,EAAKC,QAAS,CACtE,IAAMC,EAAe/H,EAAwB6H,EAAKC,QAC5CE,EAAgBrK,KAAKsK,sBACzBJ,EAAKC,OACLD,EAAKG,eAEDE,EAAevK,KAAKsK,sBACxBJ,EAAKC,OACLD,EAAKK,cAGP,OACEC,kBAAQJ,IACRI,kBAAQH,IACRG,kBAAQD,GAED,KAEA,CACLH,eACAC,gBACAE,eAGN,CAEA,OAAO,IACT,GAEA,gBACA,WACE,OAAOvK,KAAKH,OAAOU,IACrB,GAAC,oBAED,WACE,OAAIP,KAAKH,OAAOY,OACPT,KAAKO,KAAKuJ,SAGZ,EACT,GAAC,uBAED,WACE,OAAO/M,OAAOD,KAAKkD,KAAKyK,mBAAmB,EAC7C,GAAC,2BAED,WACE,OAAOzK,KAAKyK,kBAAkBzK,KAAK0K,aAAa,EAClD,GAEA,6BACA,WACE,IAAK1K,KAAK0J,mBAAoB,CAC5B,IAAMI,EAAW9J,KAAK8J,SAASa,QAC7B,SAACC,EAAgCZ,GAC/B,MACoB,QAAlBA,EAAQtI,MACRsI,EAAQC,WAAa1K,EAAgBsE,MAKnC+G,EAAKZ,EAAQtI,OACfkJ,EAAKZ,EAAQtI,MAAMmJ,KAAKb,EAAQC,UAChCW,EAAKZ,EAAQtI,MAAQoJ,eAAKF,EAAKZ,EAAQtI,QAEvCkJ,EAAKZ,EAAQtI,MAAQ,IAPdkJ,CAWX,GACA,CAAC,GAIH5K,KAAK0J,oBErJmDqB,EFqJnBjB,EErJ2BkB,EFqJjB,SAACjK,EAAGC,GACjD,OAAID,IAAMzB,EAAYmD,OAASzB,IAAM1B,EAAYuE,IACxC,GAGD,CACV,EE1JG9G,OAAOD,KAAKiO,GAAKjK,KAAKkK,GAAcL,QAAO,SAACM,EAAiCjM,GAElF,OADAiM,EAAOjM,GAAO+L,EAAI/L,GACXiM,CACT,GAAG,CAAC,GFwJF,CE5JG,IAAuDF,EAAQC,EF8JlE,OAAOhL,KAAK0J,kBACd,GAEA,4BACA,SAAuBI,EAAqBnJ,GAC1C,GAAIA,EAAQO,OAAQ,CAClB,IAAMC,EAAiBnB,KAAKF,aACzBoB,OAAOP,EAAQO,OAAQ,CACtBE,QAAQ,EACRC,YAAa,QAEdpF,KAAI,SAACkC,GAAC,OAAKA,EAAE8C,IAAI,IAEpB,OAAO6I,EAASxI,QAAO,SAAC0I,GAAO,OAC7B7I,EAAeK,SAASwI,EAAQ/I,KAAK,GAEzC,CAEA,OAAO6I,CACT,GAAC,qCAED,SACEA,EACAnJ,GAEA,GAAyB,QAArBA,EAAQsJ,UAAuC,QAAjBtJ,EAAQe,KACxC,OAAOoI,EAEP,IAAMG,EAAYtJ,EAAQsJ,UACxBjK,KAAKkL,gBACDxJ,EACJuI,IAAa1K,EAAgBsE,IACzB,MACAlD,EAAQe,MAAQ1B,KAAK0K,YAG3B,OAAOZ,EAASxI,QACd,SAAC0I,GAAO,OAAKA,EAAQtI,OAASA,GAAQsI,EAAQC,WAAaA,CAAQ,GAGzE,GAEA,mCACA,SACEE,EACAgB,GACkB,IAAD,OACTC,EAAWpL,KAAKO,KAAhB6K,OAER,OAAOC,kBACLF,EAAYlP,KAAI,SAACqP,GAAS,OACxB,EAAKxB,SAASyB,MAAK,SAAC9O,GAAC,OAAKA,EAAEwE,OAASqK,CAAS,GAAC,KAEjDrP,KAAI,SAAC+N,GAAa,IAAD,EACXwB,EAASxB,EAAQwB,OAAOrB,GAE9B,MAAO,CACLlJ,KAAM+I,EAAQ/I,KACdwK,KAAMzB,EAAQyB,KACdC,YAAa1B,EAAQ0B,YACrBC,IAAKH,EAAOI,QACZC,IAAKL,EAAOM,IACZV,OAAsB,QAAhB,EAAEpB,EAAQoB,cAAM,aAAd,EAAgBT,QACtB,SAACC,EAA8BmB,GAC7B,IAAMxK,EAAQ6J,EAAOG,MAAK,SAACS,GAAC,OAAKA,EAAE/K,OAAS8K,CAAO,IAEnD,OADAnB,EAAKmB,IAAgB,OAALxK,QAAK,IAALA,OAAK,EAALA,EAAOkK,OAAQ,gBACxBb,CACT,GACA,CAAC,GAGP,GACF,GAAC,iCAED,WAAqD,IAAD,OAC5CjB,EAAe3J,KAAKO,KAAKoJ,aAG/B,OAAOgB,iBACLhB,GACA,SACEsC,EACAC,EACAC,GACI,IAAD,EAkBH,OAjBAF,EAAaE,IAAS,mBACnB7M,EAAYuD,KAAOwI,kBAClBa,EAAkB5M,EAAYuD,MAAM5G,KAAI,SAACgF,GAAI,OAC3C,EAAK6I,SAASyB,MAAK,SAAC9O,GAAC,OAAKA,EAAEwE,OAASA,CAAI,GAAC,MAE7C,cACA3B,EAAYoD,MAAQ2I,kBACnBa,EAAkB5M,EAAYoD,OAAOzG,KAAI,SAACgF,GAAI,OAC5C,EAAK6I,SAASyB,MAAK,SAAC9O,GAAC,OAAKA,EAAEwE,OAASA,CAAI,GAAC,MAE7C,cACA3B,EAAYmD,MAAQ4I,kBACnBa,EAAkB5M,EAAYmD,OAAOxG,KAAI,SAACgF,GAAI,OAC5C,EAAK6I,SAASyB,MAAK,SAAC9O,GAAC,OAAKA,EAAEwE,OAASA,CAAI,GAAC,MAE7C,GAEIgL,CACT,GACA,CAAC,EAEL,KAAC,EAjPgC,IClBlC,SALW3C,KAAS,kBAATA,EAAS,oBAATA,EAAS,oBAATA,EAAS,sBAKpB,CALWA,MAAS,KA6EpB,SANWC,KAAW,kBAAXA,EAAW,cAAXA,EAAW,oBAAXA,EAAW,gBAAXA,EAAW,sBAMtB,CANWA,MAAW,KEvDhB,IAAM6C,EAA2B,CACtClN,EAAW4D,OACX5D,EAAW6D,UACX7D,EAAW8D,eAGPqJ,EAA+B,CACnC,MACAlN,EAAa8E,YACb9E,EAAa2F,MACb3F,EAAa0E,IACb1E,EAAamF,MAGFgI,EAA0C,CACrDlN,EAAS4C,MACT5C,EAAS6C,MACT7C,EAASgE,IACThE,EAASiE,MACTjE,EAASmE,MACTnE,EAASkE,MACTlE,EAAS2C,WAGUwK,GAAW,WAQ9B,WAAY1M,GAAiB,yBAPbA,YAAM,OACf4J,gBAAU,OACV1J,WAAK,OACLyM,uBAAiB,OACjBC,sBAAgB,OACf3M,kBAAY,EAGlBE,KAAKH,OAASA,EACdG,KAAKD,MAAQjB,EAAcM,GAC3BY,KAAKyJ,WAAa3K,EAAcK,GAChCa,KAAKwM,kBAAoBtJ,EACzBlD,KAAKyM,iBAAmBzM,KAAK0M,oBAC7B1M,KAAKF,aAAe,IAAIG,IAAW,CACjCC,QAAS,OACTC,OAAQ,CAAC,OAAQ,mBAAoB,WAAY,UAAW,cAC5DC,YAAa,CAAC,SAElB,CAyKC,OAzKA,yCAED,WACEJ,KAAKF,aAAaO,YAClBL,KAAKF,aAAaQ,OAAON,KAAKO,KAAKoM,iBACrC,GAEA,iBACA,SAAWhM,GACT,IAAIiM,EAAQ5M,KAAK4M,MASjB,OAPAA,EAAQ5M,KAAKY,eAAegM,EAAOjM,GACnCiM,EAAQ5M,KAAK+J,wBAAwB6C,EAAOjM,GAC5CiM,EAAQ5M,KAAK6M,cAAcD,EAAOjM,GAClCiM,EAAQ5M,KAAK8M,iBAAiBF,EAAOjM,GACrCiM,EAAQ5M,KAAK+M,cAAcH,EAAOjM,GAClCiM,EAAQ5M,KAAKgN,OAAOJ,EAAOjM,EAG7B,GAAC,kBAED,SAAYM,GACV,OAAOjB,KAAK4M,MAAMrB,MAAK,SAAArB,GAAI,OAAIA,EAAKjJ,OAASA,CAAI,KAAK,IACxD,GAAC,wBAED,SAAkBiJ,GAAiC,IAAD,OAChD,GAAIA,EAAK+C,IAAK,CACZ,IAAMA,EAAMjN,KAAKO,KAAK2M,KAAK3B,MAAK,SAAA0B,GAAG,OAAIA,EAAIhM,OAASiJ,EAAK+C,GAAG,IAE5D,GAAIA,EAAK,CACP,IAAME,EAAW9B,kBAAQ4B,EAAIG,QAAQnR,KAAI,SAAAoR,GAAM,OAAI,EAAKT,MAAMrB,MAAK,SAAArB,GAAI,OAAIA,EAAKjJ,OAASoM,CAAM,GAAC,KAChG,OAAO,2BACFJ,GAAG,IACNL,MAAOO,EACPpN,MAAOoN,EAASlR,KAAI,SAAAiO,GAAI,OAAIA,EAAKxI,IAAI,KAEzC,CACF,CAEA,OAAO,IACT,GAEA,gBACA,WACE,OAAO1B,KAAKH,OAAOU,IACrB,GAAC,iBAED,WACE,OAAIP,KAAKH,OAAOY,OACPT,KAAKO,KAAKqM,MAGZ,EACT,GAAC,2BAED,WACE,OAAO5M,KAAKyJ,WAAW,EACzB,GAAC,uBAED,WACE,OAAOzJ,KAAKwM,kBAAkBxM,KAAKkL,iBAAiB,EACtD,GAEA,4BACA,SAAuB0B,EAAejM,GACpC,GAAIA,EAAQO,OAAQ,CAClB,IAAMC,EAAiBnB,KAAKF,aAAaoB,OAAOP,EAAQO,OAAQ,CAC9DE,QAAQ,EACRC,YAAa,QACZpF,KAAI,SAAAkC,GAAC,OAAIA,EAAE8C,IAAI,IAElB,OAAO2L,EAAMtL,QAAO,SAAA4I,GAAI,OAAI/I,EAAeK,SAAS0I,EAAKjJ,KAAK,GAChE,CAEA,OAAO2L,CACT,GAAC,qCAED,SAAgCA,EAAejM,GAC7C,GAAyB,QAArBA,EAAQsJ,UAAuC,QAAjBtJ,EAAQe,KACxC,OAAOkL,EAEP,IAAM3C,EAAYtJ,EAAQsJ,UAAYjK,KAAKkL,gBACrCxJ,EAAQf,EAAQe,MAAQ1B,KAAK0K,YAEnC,OAAOkC,EAAMtL,QAAO,SAAA4I,GAAI,OAAIA,EAAKxI,OAASA,GAAQwI,EAAKD,WAAaA,CAAQ,GAEhF,GAAC,2BAED,SAAsB2C,EAAejM,GAEnC,OAAIA,EAAQsJ,UAAYoC,EAA6B7K,SAASb,EAAQsJ,UAC7D2C,EAILjM,EAAQ2M,gBAAkB3M,EAAQ2M,iBAAmBrO,EAAeiG,IAC/D0H,EAAMtL,QAAO,SAAA4I,GAAI,OAAIvJ,EAAQ2M,iBAAmBpD,EAAKqD,gBAAgB,IAGvEX,CACT,GAAC,8BAED,SAAyBA,EAAejM,GAEgD,IAAD,EAArF,OAAI0L,EAA6B7K,SAASb,EAAQsJ,UAAYjK,KAAKkL,iBAE5C,QAAjB,EAACvK,EAAQ6M,gBAAQ,OAAhB,EAAkBhM,SAAStC,EAAW+D,UAGlC2J,EAFAA,EAAMtL,QAAO,SAAA4I,GAAI,OAAIA,EAAKC,SAAWjL,EAAW+D,QAAQ,IAO/DtC,EAAQ6M,SACHZ,EAAMtL,QAAO,SAAA4I,GAAI,aAAoB,QAApB,EAAIvJ,EAAQ6M,gBAAQ,aAAhB,EAAkBhM,SAAS0I,EAAKC,OAAO,IAE5DyC,EAAMtL,QAAO,SAAA4I,GAAI,OAAIkC,EAAyB5K,SAAS0I,EAAKC,OAAO,GAE9E,GAAC,2BAED,SAAsByC,EAAejM,GAEnC,OAAI0L,EAA6B7K,SAASb,EAAQsJ,UAAYjK,KAAKkL,iBAC1D0B,EAGLjM,EAAQ8M,QACHb,EAAMtL,QAAO,SAAA4I,GAAI,QAAMA,EAAK+C,GAAG,IAGjCL,CACT,GAAC,oBAED,SAAeA,EAAejM,GAC5B,IAAKA,EAAQ+M,QAEX,OAAOd,EAAM9L,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAE4M,SAAW3M,EAAE2M,QAAQ,IAGrD,OAAQhN,EAAQ+M,SACd,KAAKpE,EAAUsE,QACb,OAAOhB,EAAM9L,MAAK,SAACC,EAAGC,GACpB,MAAuB,CAACD,EAAE0K,KAAKoC,cAAe7M,EAAEyK,KAAKoC,eACrD,OADY,KAAO,MACK,EAAI,CAC9B,IACF,KAAKvE,EAAUwE,SACb,OAAOlB,EAAM9L,MAAK,SAACC,EAAGC,GACpB,MAAuB,CAACD,EAAE0K,KAAKoC,cAAe7M,EAAEyK,KAAKoC,eACrD,OADY,KAAO,KACI,GAAK,CAC9B,IACF,KAAKvE,EAAUyE,SACb,OAAOnB,EAAM9L,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAE4M,SAAW3M,EAAE2M,QAAQ,IACrD,KAAKrE,EAAU0E,UACb,OAAOpB,EAAM9L,MAAK,SAACC,EAAGC,GAAC,QAAOD,EAAE4M,SAAW3M,EAAE2M,SAAS,IACxD,QACE,OAAOf,EAEb,GAAC,+BAED,WAA6D,IAAD,OAE1D,OAAO5M,KAAKD,MAAM4K,QAAO,SAACC,EAAsClJ,GAK9D,OAJAkJ,EAAKlJ,GAAQuM,kBAAQ,EAAKzB,mBAAmB,SAAAzM,GAAK,OAChDA,EAAMyB,SAASE,EAAK,IAGfkJ,CACT,GAAG,CAAC,EACN,KAAC,EA5L6B,GC1BXpB,GAAc,WAOjC,WAAY3J,GAAiB,yBANbA,YAAM,OACdC,kBAAY,OACboO,aAAO,OACPC,WAAK,OACLC,oBAAc,EAGnBpO,KAAKH,OAASA,EACdG,KAAKkO,QAAU,CAACjP,EAAe8G,QAAS9G,EAAeuH,UAAWvH,EAAegI,OAAQhI,EAAeyI,SACxG1H,KAAKmO,MAAQrP,EAAca,GAC3BK,KAAKoO,eAAiBnJ,EACtBjF,KAAKF,aAAe,IAAIG,IAAW,CACjCC,QAAS,OACTC,OAAQ,CAAC,OAAQ,QAAS,OAAQ,OAAQ,UAAW,SAAU,eAC/DC,YAAa,CAAC,SAElB,CAkGC,OAlGA,yCAED,WACEJ,KAAKF,aAAaO,YAClBL,KAAKF,aAAaQ,OAAON,KAAKO,KAAK8N,kBACrC,GAEA,iBACA,SAAW1N,GACT,IAAIyK,EAASpL,KAAKoL,OAQlB,OANAA,EAASpL,KAAKY,eAAewK,EAAQzK,GACrCyK,EAASpL,KAAKsO,qBAAqBlD,EAAQzK,GAC3CyK,EAASpL,KAAKuO,eAAenD,EAAQzK,GACrCyK,EAASpL,KAAKwO,cAAcpD,EAAQzK,EAItC,GAAC,kBAED,SAAYM,EAAcwN,GACxB,OAAIA,EACKzO,KAAKoL,OAAOG,MAAK,SAAAhK,GAAK,OAAIA,EAAMN,OAASA,GAAQM,EAAMmN,QAAUD,EAAOC,KAAK,KAAK,KAElF1O,KAAKoL,OAAOG,MAAK,SAAAhK,GAAK,OAAIA,EAAMN,OAASA,CAAI,KAAK,IAE7D,GAAC,wBAED,SAAkBwK,GAChB,OAAOzL,KAAKO,KAAK6K,OAAOG,MAAK,SAAAhK,GAAK,OAAIA,EAAMkK,KAAKkD,gBAAkBlD,EAAKkD,aAAa,KAAK,IAC5F,GAAC,iCAED,SAA2BrB,GACzB,IAAMsB,EAAa5O,KAAKoO,eAAed,GACvC,OAAOsB,EAAaA,EAAW,GAAKjP,EAAU8I,OAChD,GAEA,gBACA,WACE,OAAOzI,KAAKH,OAAOU,IACrB,GAAC,wBAED,WACE,OAAOP,KAAKkO,QAAQ,EACtB,GAAC,uBAED,WACE,OAAOlO,KAAK6O,oBAAoB7O,KAAK8O,aACvC,GAEA,kBACA,WACE,OAAI9O,KAAKH,OAAOY,OACPT,KAAKO,KAAK6K,OAGZ,EACT,GAAC,4BAED,SAAuBA,EAAiBzK,GACtC,GAAIA,EAAQO,OAAQ,CAClB,IAAMC,EAAiBnB,KAAKF,aAAaoB,OAAOP,EAAQO,OAAQ,CAC9DE,QAAQ,EACRC,YAAa,QACZpF,KAAI,SAAAkC,GAAC,OAAIA,EAAE8C,IAAI,IAElB,OAAOmK,EAAO9J,QAAO,SAAAC,GAAK,OAAIJ,EAAeK,SAASD,EAAMN,KAAK,GACnE,CAEA,OAAOmK,CACT,GAAC,kCAED,SAA6BA,EAAiBzK,GAC5C,GAA+B,QAA3BA,EAAQ2M,gBAA6C,QAAjB3M,EAAQoO,KAC9C,OAAO3D,EAEP,IAAMkC,EAAkB3M,EAAQ2M,gBAAkBtN,KAAK8O,aACjDC,EAAQpO,EAAQoO,MAAQ/O,KAAKgP,YAEnC,OAAO5D,EAAO9J,QAAO,SAAAC,GAAK,OAAIA,EAAMmN,QAAUpB,GAAkB/L,EAAMwN,OAASA,CAAI,GAEvF,GAAC,4BAGD,SAAuB3D,EAAiBzK,GACtC,OAAIA,EAAQsO,QAA6B,QAAnBtO,EAAQsO,OACrB7D,EAAO9J,QAAO,SAAAC,GAAK,OAAIZ,EAAQsO,SAAW1N,EAAM0N,MAAM,IAGxD7D,CACT,GAAC,2BAED,SAAsBA,EAAiBzK,GACrC,OAAIA,EAAQZ,MACHqL,EAAO9J,QAAO,SAAAC,GAAK,aAAIA,EAAMG,OAAqB,QAAjB,EAAIf,EAAQZ,aAAK,aAAb,EAAeyB,SAASD,EAAMG,MAAO,IAG5E0J,CACT,KAAC,EAnHgC,GCgBd8D,GAAM,WASzB,WAAYC,GAAmB,yBARxBA,aAAO,OACP5O,UAAI,OAEK6O,WAAK,OACLC,cAAQ,OACRC,YAAM,OACNC,eAAS,EAGvBvP,KAAKmP,QAAUA,EACfnP,KAAKoP,MAAQ,IAAI7C,GAAYvM,MAC7BA,KAAKqP,SAAW,IAAI7F,EAAexJ,MACnCA,KAAKsP,OAAS,IAAIE,GAAaxP,MAC/BA,KAAKuP,UAAY,IAAI3P,EAAgBI,KACvC,CA0BC,OA1BA,iCAED,WACE,QAASA,KAAKO,IAChB,GAAC,0EAED,WAAyB4O,GAAgB,8EACnCA,IAAYnP,KAAKmP,QAAO,gBAEH,OADvBnP,KAAKO,UAAOkP,EACZzP,KAAKmP,QAAUA,EAAQ,SACjBnP,KAAK0P,WAAW,KAAD,2CAExB,mDARA,IAQA,uEAED,wGACqB,MAAO,YAAU1P,KAAKmP,QAAO,cAAY,OAA5DnP,KAAKO,KAAI,OAAqDoP,QAC9D3P,KAAKoP,MAAMQ,eACX5P,KAAKqP,SAASO,eACd5P,KAAKsP,OAAOM,eACRC,YAAQ7P,KAAKmP,QAAS,SAAU,OAClCnP,KAAKuP,UAAUK,eAKjB,gDACD,kDAdA,MAcA,EAzCwB,G,kBCjBZE,GAV8B,WAC3C,IAAQC,EAAaC,eAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,EACrB,GAAG,CAACJ,IAEG,IACT,ECNe,SAASK,KAGtB,OAFeC,qBAAWzR,EAG5B,CCEO,SAAS0R,KAES,IADvB,IACIC,EADEC,EAAwBH,qBAAWI,KAClB,mBAFwCC,EAAU,yBAAVA,EAAU,gBAkBzE,OAdIA,GAAcA,EAAWC,QAC3BJ,EAAS,CAAC,EACVG,EAAWE,SAAQ,SAACC,GAClB,IAAMC,EAAQN,EAAUK,GACxB,IAAKC,EACH,MAAM,IAAIpU,MAAM,gDAAD,OAAiDqU,OAAOF,KAGzEN,EAAOM,GAAaC,CACtB,KAEAP,EAASC,EAGJD,CACT,C,UC5BYS,GCiCGC,GA/BmB,WAChC,OACE,yBAAQC,UAAU,WAAU,UAC1B,sBAAMA,UAAU,0BAAyB,2CAGzC,sBAAMA,UAAU,sBAAqB,eACrC,uBAAMA,UAAU,uBAAsB,wBACzB,4CAAuB,4BAClC,mBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,wCAAuC,sBAKhD,sBAAMH,UAAU,sBAAqB,eACrC,sBAAMA,UAAU,4BAA2B,SACzC,mBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,sDAAqD,6BAOpE,E,kBDjBC,SAdWL,KAAQ,gCAARA,EAAQ,oCAARA,EAAQ,oCAARA,EAAQ,kCAARA,EAAQ,kCAARA,EAAQ,sCAARA,EAAQ,sCAARA,EAAQ,oCAARA,EAAQ,4BAARA,EAAQ,YAARA,EAAQ,YAARA,EAAQ,gBAARA,EAAQ,YAcnB,CAdWA,QAAQ,KAgBpB,IA4BeM,GAlBwB,SAAH,OAClCzU,EAAE,EAAFA,GACAqU,EAAS,EAATA,UACAzF,EAAI,EAAJA,KACArO,EAAK,EAALA,MACAC,EAAM,EAANA,OAAM,OAEN,qBACE,aAAYoO,EACZ8F,IAAG,WAnBU,sBAmBI,YAAI9F,EAAI,QACzBrO,MAAOA,EACPC,OAAQA,EACRmU,IAAK/F,EACL5O,GAAIA,EACJqU,UAAWA,GACX,E,aE3CQO,GAUAC,GC0EGC,GA/DoC,SAAH,GAOzC,IAAD,ECzBJC,EACAC,EDkBAhV,EAAE,EAAFA,GACAqU,EAAS,EAATA,UACAY,EAAK,EAALA,MACAC,EAAY,EAAZA,aACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SAEA,EAAwCC,oBAAS,GAAM,mBAAhDC,EAAY,KAAEC,EAAe,KACpC,EAAwCF,mBAASH,GAAgBC,EAAQ,GAAGK,OAAM,mBAA3EC,EAAY,KAAEC,EAAe,KAC9BC,GAAmE,QAA/C,EAAAR,EAAQzG,MAAK,SAAAkH,GAAG,OAAIA,EAAIJ,QAAUC,CAAY,WAAC,aAA/C,EAAiDR,QAASC,EAC9EW,EAAcC,sBAIpB,OCjCAf,ED+BkBc,EC9BlBb,EDyEA,WACMM,GACFC,GAAgB,EAEpB,EC3EAnC,qBAAU,WACR,SAAS2C,EAAmBC,GACtBjB,EAAQkB,UAAYlB,EAAQkB,QAAQC,SAASF,EAAM1B,SACrDU,EAASgB,EAEb,CAIA,OADAG,SAASC,iBAAiB,YAAaL,GAChC,WAELI,SAASE,oBAAoB,YAAaN,EAC5C,CACF,GAAG,CAAChB,EAASC,IDkBX,qBACEhV,GAAIA,EACJqU,UAAS,qBAAgBA,GAAwB,IACjDiC,IAAKT,EAAY,SAEjB,sBAAKxB,UAAU,wBAAuB,UACpC,sBACEA,UAAU,sBACVkC,QA4BR,WACEhB,GAAiBD,EACnB,EA9BgC,UAExB,sBAAMjB,UAAU,4BAA2B,SAAEY,IAC7C,sBAAMZ,UAAU,4BAA2B,SAAEsB,IAC7C,qBAAKtB,UAAU,mBAAkB,SAAC,cAAC,GAAI,CAACzF,KAAMuF,GAASqC,cAAejW,MAAO,GAAIC,OAAQ,SAE3F,qBAAK6T,UAAS,8BAAyBiB,EAAe,OAAS,IAAK,SACjEH,EAAQ/V,KAAI,WAAmBqX,GAAK,IAArBjB,EAAK,EAALA,MAAOP,EAAK,EAALA,MAAK,OAC1B,sBAEEZ,UAAS,6BAAwBmB,IAAUC,EAAe,WAAa,IACvE,aAAYD,EACZe,QAAS,kBAUrB,SAAkBf,GAChBE,EAAgBF,GAChBD,GAAgB,GAChBH,EAASI,EACX,CAd2BkB,CAASlB,EAAM,EAAC,SAE9BP,GAAK,mBALWO,EAAK,YAAIiB,GAMrB,UAsBnB,E,UD1EC,SARW7B,KAAO,cAAPA,EAAO,YAAPA,EAAO,oBAAPA,EAAO,gBAAPA,EAAO,cAAPA,EAAO,sBAAPA,EAAO,wBAQlB,CARWA,QAAO,KAkBlB,SARWC,KAAS,eAATA,EAAS,mBAATA,EAAS,qBAATA,EAAS,iBAATA,EAAS,qBAATA,EAAS,uBAATA,EAAS,yBAQpB,CARWA,QAAS,KAcd,IGtBK8B,G,GHsBCC,IAAgC,qBAC1C/B,GAAUtC,MAAQqC,GAAQrC,OAAK,eAC/BsC,GAAUgC,KAAOjC,GAAQiC,MAAI,eAC7BhC,GAAUrC,SAAWoC,GAAQpC,UAAQ,eACrCqC,GAAUpC,OAASmC,GAAQnC,QAAM,eACjCoC,GAAUiC,MAAQlC,GAAQkC,OAAK,eAC/BjC,GAAUnC,UAAYkC,GAAQlC,WAAS,eACvCmC,GAAUkC,WAAanC,GAAQmC,YAAU,KG3B3C,SAFWJ,KAAS,uBAEpB,CAFWA,QAAS,KCwBrB,IAAMK,IAA8D,qBACjEnC,GAAUtC,MAAQ,CAAC7F,EAAYuK,QAASvK,EAAY6F,QAAM,eAC1DsC,GAAUgC,KAAO,IAAE,eACnBhC,GAAUrC,SAAW,CAAC9F,EAAYuK,QAASvK,EAAY8F,WAAS,eAChEqC,GAAUpC,OAAS,CAAC/F,EAAYuK,QAASvK,EAAY+F,SAAO,eAC5DoC,GAAUiC,MAAQ,IAAE,eACpBjC,GAAUnC,UAAY,CAAChG,EAAYuK,QAASvK,EAAYgG,YAAU,eAClEmC,GAAUkC,WAAa,CAACrK,EAAYuK,UAAQ,IAGhC,SAASC,GACyEC,GAE/F,IAAMC,EAASnV,EAAc4S,IACrBwC,EAAiB5D,GAAkBkD,GAAUW,SAA7CD,aACFE,EAAUC,eACVC,EAAWtE,eAoBjB,OAjBAC,qBAAU,WACR,IAAMsE,EACJN,EAAO1I,MAAK,SAAAiJ,GAAK,OAAIC,aAAUH,EAASvE,SAAU,CAAEwE,KAAMC,GAAQ,KAC/DF,EAASvE,SAGd2E,aAAQ,WACN,IAAMC,EAAiBd,GAA6BU,IAElC,OAAdI,QAAc,IAAdA,OAAc,EAAdA,EAAgBhE,QAAS,GAC3ByD,EAAQQ,QAAQ,CACd1T,OAAQgT,EAAaW,cAAcF,GAAkB,KAG3D,GACF,GAAG,CAACL,EAASvE,WAEN,CAACmE,EAAavT,QAAQqT,GAG7B,SAAoBrT,GAElBuT,EAAa,MAAD,OAAOY,qBAAWd,GAAY,YAAWrT,EACvD,EACF,C,ICnEYoU,G,UAKX,SALWA,OAAU,qBAAVA,IAAU,qBAAVA,IAAU,sBAAVA,IAAU,wBAKrB,CALWA,QAAU,KAOtB,I,GCPYC,GDaGC,GANO,WACpB,MAAO,CACLC,aAAcC,yBAAc,CAAEC,MAAM,eAAD,OAAiBL,GAAWM,OAAM,SAEzE,EEQMC,I,MAA8B,CAClC,CAAEf,KAAM7C,GAAUtC,OAClB,CAAEmF,KAAM7C,GAAUrC,UAClB,CAAEkF,KAAM7C,GAAUpC,QAClB,CAAEiF,KAAM7C,GAAUnC,aAmHLgG,gBAhHmB,WAChC,IAAQL,EAAiBD,KAAjBC,aACAnF,EAAaC,eAAbD,SACR,EAA8BgE,GAA2BxK,EAAYuK,SAAQ,mBAAtEnT,EAAO,KAAE6U,EAAU,KAC1B,EAAgDtD,oBAAS,GAAM,mBAAxDuD,EAAgB,KAAEC,EAAmB,KAE5C,OAAIR,EAmDA,wBAAQhE,UAAU,WAAU,SAC1B,sBAAKA,UAAU,sBAAqB,UAClC,qBAAKA,UAAU,iBAAgB,SAC7B,oBAAIA,UAAU,iBAAgB,2BAEhC,qBAAKA,UAAU,kBAAkBkC,QAAS,kBAAMsC,GAAoB,EAAK,EAAC,SACxE,cAAC,GAAI,CAACjK,KAAMuF,GAAS2E,KAAMvY,MAAO,OAEpC,cAAC,KAAM,CACL8T,UAAU,uBACV0E,KAAMH,EACNI,QAAS,kBAAMH,GAAoB,EAAM,EACzCI,SAAS,EACT1Y,MAAM,OACN2Y,UAAW,QAAQ,SAEnB,qBAAI7E,UAAU,6BAA4B,UACvCoE,GAAgBrZ,KAAI,SAAC+Z,GACpB,IAAMC,EAAuBxC,GAAkBuC,EAASzB,MAChDA,EAASyB,EAATzB,KACF2B,EAAYnG,IAAawE,EAE/B,OACE,oBACErD,UAAS,oCAA+BgF,EAAY,UAAY,IAAK,SAGrE,cAAC,KAAI,CAACC,GAAI5B,EAAMnB,QAAS,kBAAMsC,GAAoB,EAAM,EAAC,SAAEO,KAFvDA,EAKX,IACA,oBAAI/E,UAAS,oCAA+BnB,IAAa2B,GAAUkC,WAAa,UAAY,IAAK,SAC/F,cAAC,KAAI,CAACuC,GAAIzE,GAAUkC,WAAYR,QAAS,kBAAMsC,GAAoB,EAAM,EAAC,SAAEjE,GAAQmC,eAEtF,oBAAI1C,UAAU,kCAAiC,SAC7C,cAAC,GAAQ,CACPY,MAAM,SACNC,aAAcpR,EAAQyV,MACtBpE,QAASqE,GAAQpa,KAAI,SAAAma,GAAK,MAAK,CAAEtE,MAAOsE,EAAO/D,MAAO+D,EAAO,IAC7DnE,SAAUqE,gBAlFtB,wBAAQpF,UAAU,WAAU,SAC1B,sBAAKA,UAAU,sBAAqB,UAClC,sBAAKA,UAAU,iBAAgB,UAC7B,oBAAIA,UAAU,iBAAgB,SAAC,cAAC,KAAI,CAACiF,GAAG,SAAQ,2BAChD,oBAAIjF,UAAU,sBAAqB,SAChCoE,GAAgBrZ,KAAI,SAAC+Z,GACpB,IAAMC,EAAuBxC,GAAkBuC,EAASzB,MAChDA,EAASyB,EAATzB,KACF2B,EAAYnG,IAAawE,EAE/B,OACE,oBACErD,UAAS,mCAA8BgF,EAAY,UAAY,IAAK,SAGpE,cAAC,KAAI,CAACC,GAAI5B,EAAK,SAAE0B,KAFZA,EAKX,SAGJ,qBAAI/E,UAAU,qBAAoB,UAChC,oBAAIA,UAAU,0BAAyB,SACrC,qBAAKA,UAAU,6BAA4B,SACzC,cAAC,GAAQ,CACPY,MAAM,SACNC,aAAcpR,EAAQyV,MACtBpE,QAASqE,GAAQpa,KAAI,SAAAma,GAAK,MAAK,CAAEtE,MAAOsE,EAAO/D,MAAO+D,EAAO,IAC7DnE,SAAUqE,QAIhB,oBAAIpF,UAAS,kCAA6BnB,IAAa2B,GAAUkC,WAAa,UAAY,IAAK,SAC7F,cAAC,KAAI,CAACuC,GAAIzE,GAAUkC,WAAW,SAAEnC,GAAQmC,uBA2DrD,SAAS0C,EAAcF,GACrBZ,EAAW,CAAEY,UACbV,GAAoB,EACtB,CACF,IC/Gea,I,MAfiC,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAEjD,OACE,sBAAKtF,UAAU,WAAU,UACvB,cAAC,GAAM,IACP,qBAAKA,UAAU,YAAW,SACxB,qBAAKA,UAAU,YAAW,SACvBsF,MAGL,cAAC,GAAM,MAGb,GCAeC,GAjBA,SAAH,GAGE,IAFZC,EAAK,EAALA,MACAhL,EAAW,EAAXA,YAYA,OATkC,WAChC,OACE,eAAC,IAAM,WACL,mDAAsBgL,KACtB,sBAAMjL,KAAK,cAAckL,QAASjL,MAGxC,CAGF,E,OHTC,SAZWsJ,KAAY,4BAAZA,EAAY,YAAZA,EAAY,0BAAZA,EAAY,kBAAZA,EAAY,wBAAZA,EAAY,4BAAZA,EAAY,sBAAZA,EAAY,4BAAZA,EAAY,0BAAZA,EAAY,0BAAZA,EAAY,oBAYvB,CAZWA,QAAY,KAcxB,IAAM4B,GAAY,qBAEZC,IAAwC,qBAC3C7B,GAAa7V,aAAY,UAAMyX,GAAS,sCACxC5B,GAAatB,KAAI,UAAMkD,GAAS,+BAChC5B,GAAa1V,YAAW,UAAMsX,GAAS,oCACvC5B,GAAa8B,QAAO,UAAMF,GAAS,8BACnC5B,GAAa+B,WAAU,UAAMH,GAAS,mCACtC5B,GAAagC,aAAY,UAAMJ,GAAS,sCACxC5B,GAAarV,UAAS,UAAMiX,GAAS,kCACrC5B,GAAaiC,aAAY,UAAML,GAAS,sCACxC5B,GAAakC,YAAW,UAAMN,GAAS,qCACvC5B,GAAamC,YAAW,UAAMP,GAAS,qCACvC5B,GAAaoC,SAAQ,UAAMR,GAAS,oBA+BxBS,GAnB4B,SAAH,OACtCxa,EAAE,EAAFA,GACAqU,EAAS,EAATA,UACAxP,EAAI,EAAJA,KACA+J,EAAI,EAAJA,KACArO,EAAK,EAALA,MACAC,EAAM,EAANA,OAAM,OAEN,qBACE,aAAYoO,EACZ8F,IAAG,WAAMsF,GAAWnV,GAAK,YAAI+J,EAAKkD,cAAa,QAC/CvR,MAAOA,EACPC,OAAQA,EACRmU,IAAK/F,EACL5O,GAAIA,EACJqU,UAAWA,GACX,EItCEzH,GAAa3K,EAAc5B,GAyDlBoa,GAxDuB,WAAO,IAAD,EAClCpC,EAAiBD,KAAjBC,aACFhG,EAASkB,KACf,EAA8B2D,GAA6BxK,EAAYgG,WAAU,mBAA1E5O,EAAO,KAAE6U,EAAU,KAEL9K,EAAkBwE,EAA/BK,UAAa7E,YACf6M,EAAwB,QAAhB,EAAI5W,EAAQe,YAAI,QAAIgJ,EAClC,EAAwCwH,mBAAuBqF,GAAS,mBAAjEC,EAAY,KAAEC,EAAe,KACpC,EAAgDvF,oBAAS,GAAM,mBAAxDuD,EAAgB,KAAEC,EAAmB,KAE5C,OAAIR,EAEA,cAAC,KAAM,CACLU,KAAMH,EACNiC,cAAe,kBAAMhC,GAAqBD,EAAiB,EAC3DI,QAAS,kBAAMH,GAAoB,EAAM,EACzCxE,UAAS,wCAAmCsG,EAAa7I,eACzDvR,MAAM,OACN2Y,UAAW,OAAO,SAEjB4B,MAIEA,IAGT,SAASA,IACP,OAAO,oBAAIzG,UAAW,oBAAoB,SACvCzH,GAAWxN,KAAI,SAACyF,EAAM4R,GACrB,IAAMsE,EAAaJ,IAAiB9V,EACpC,OAAO,oBAAiCwP,UAAS,mCAA8B0G,GAAc,YAAa,SACxG,uBACE1G,UAAS,+BACTkC,QAAS,kBAgBjBqE,EADsBI,EAfgBnW,QAiBtC8T,EAAW,2BAAK7U,GAAO,IAAEe,KAAMmW,KAFjC,IAAwBA,CAfqB,EAAC,UAEnCnW,EACD,cAAC,GAAQ,CACPwP,UAAU,oCACVxP,KAAMsT,GAAaoC,SACnB3L,KAAM/J,EAAKiN,cACXvR,MAAO,SAEJ,sBAZsBkW,GAcjC,KAEJ,CAOF,ECtBewE,I,MArCgC,SAAH,GAKrC,IAJL5G,EAAS,EAATA,UACA6G,EAAW,EAAXA,YACA1F,EAAK,EAALA,MACAJ,EAAQ,EAARA,SAEA,EAAoCC,mBAASG,GAAM,mBAA5C2F,EAAU,KAAEC,EAAa,KAE1BC,EAAoBC,sBAAYC,oBAAS,SAACC,GAC9CpG,EAASzH,kBAAQ6N,QAAO5I,EAAY4I,EACtC,GAAG,KAAM,IAET,OACE,sBAAKnH,UAAS,mBAAcA,GAAwB,IAAK,UACvD,uBACEA,UAAU,kBACV6G,YAAaA,EACbrW,KAAK,OACL2Q,MAAO2F,EACP/F,SAYN,SAAuBxV,GACrBwb,EAAcxb,EAAE0U,OAAOkB,OACvB6F,EAAkBzb,EAAE0U,OAAOkB,MAC7B,IAbI,qBAAKnB,UAAU,0BAAyB,SACtC,cAAC,GAAI,CACHA,UAAU,iBACVzF,KAAMuF,GAAS8G,OACf1a,MAAO,SAUjB,GCvBe+W,I,MAnBoB,WACjC,MAA8BJ,GAA6BxK,EAAYgG,WAAU,mBAA1E5O,EAAO,KAAE6U,EAAU,KAE1B,OACE,qBAAKtE,UAAU,qBAAoB,SACjC,cAAC,GAAM,CACLA,UAAU,6BACV6G,YAAY,kDACZ1F,MAAO1R,EAAQO,QAAU,GACzB+Q,SAKN,SAAwB/Q,GACtBsU,EAAW,CAAEtU,UACf,KACF,GCHeoX,I,MAjBmB,WAEhC,OACE,qBAAKpH,UAAU,WAAU,SACvB,sBAAKA,UAAU,mBAAkB,UAC/B,oBAAIA,UAAU,kBAAiB,sBAG/B,oBAAKA,UAAU,2BAA0B,sBAOjD,G,kBCfe,SAASqH,GAAqBhY,GAA0B,IAAfiY,EAAO,uDAAG,GAChE,EAAoCtG,mBAAgBuG,gBAAMlY,EAAMiY,IAAS,mBAAlEE,EAAU,KAAEC,EAAa,KAChC,EAA0CzG,mBAAcwG,EAAW,IAAG,mBAA/DE,EAAa,KAAEC,EAAgB,KAQtC,OANA5I,qBAAU,WACR,IAAM6I,EAASL,gBAAMlY,EAAMiY,GAC3BG,EAAcG,GACdD,EAAiBC,EAAO,IAAM,GAChC,GAAG,CAACvY,EAAMiY,IAEH,CACLI,gBACAG,eAAgBC,KAGlB,SAASA,IAaP,OAZ4C,SAAH,GAAsB,IAAhBxC,EAAQ,EAARA,SAC7C,OACE,cAAC,KAAc,CACbyC,WAAYL,EAAcjI,OAC1BuI,KAAMC,EACNC,QAASR,EAAcjI,OAASpQ,EAAKoQ,OACrC0I,OAAQ,4CAAoB,SAE3B7C,GAGP,CAEF,CAEA,SAAS2C,IACP,IAAMG,EAAeC,KAAKC,KAAKZ,EAAcjI,OAAS6H,GAAW,EACjEK,EAAiB,GAAD,oBAAKD,GAAa,aAAKF,EAAWY,EAAe,KACnE,CACF,C,uCCpBeG,I,cAX+B,SAAH,GAGpC,IAFL3H,EAAK,EAALA,MACAxU,EAAK,EAALA,MAEA,OACE,oBAAI4T,UAAU,UAAU3T,MAAO,CAAEmc,gBAAiBpc,GAAQ,SACvDwU,GAGP,GCgGesF,GA/F4B,SAAH,GAEjC,IADLuC,EAAQ,EAARA,SAEQzE,EAAiBD,KAAjBC,aACR,OACE,sBAAKhE,UAAU,aAAY,UACzB,sBAAKA,UAAU,qBAAoB,UACjC,sBAAKA,UAAU,6BAA4B,UACzC,sBAAMA,UAAU,mBAAkB,SAChC,cAAC,GAAQ,CAACxP,KAAMsT,GAAaoC,SAAU3L,KAAMkO,EAASjY,MAAQ,GAAItE,MAAO,OAE3E,qBAAK8T,UAAU,2BAA0B,SACvC,oBAAIA,UAAU,0BAAyB,SACpCyI,EAASlO,YAIhB,qBAAKyF,UAAU,0BAAyB,SACtC,sBAAMA,UAAU,mCAAkC,SAChD,sBAAMA,UAAU,gCAA+B,SAwBzD,SAAsB3D,GAEpB,GAAI2H,EACF,OACE,cAAC,GAAK,CACJpD,MAAOvE,EACPjQ,MAAK,4BAAuBsc,oBAAUrM,GAAiB,OAK7D,MAAyB,cAArBA,EAEA,cAAC,WAAO,CACNmJ,MAAOnJ,EACP/P,SAAS,SACTqc,OAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,KAAK,QAAO,SAEX,CAAC/a,EAAe8G,QAAS9G,EAAeuH,UAAWvH,EAAeyI,QAASzI,EAAegI,QAAQhL,KAAI,SAAAge,GAAS,OAC9G,cAAC,GAAQ,CAEPvY,KAAMsT,GAAaiC,aACnBxL,KAAMwO,EAAUtL,cAChBtR,OAAQ,IAAG,eAHEsc,EAAS1Y,KAAI,sBAAcgZ,EAAUtL,eAIlD,MAMN,cAAC,WAAO,CACN+H,MAAOnJ,EACP/P,SAAS,SACTqc,OAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,KAAK,QAAO,SAEZ,cAAC,GAAQ,CACPtY,KAAMsT,GAAaiC,aACnBxL,KAAM8B,EAAiBoB,cACvBtR,OAAQ,MAKlB,CAxEa6c,CAAaP,EAASjL,gBAK/B,qBAAKwC,UAAU,sBAAqB,SAClC,qBAAKA,UAAU,2BAA0B,SACvC,qBAAKA,UAAU,0BAAyB,SAQhD,WACE,IAAIiJ,EAAqB,EACzB,OAAOC,KAAeT,EAASjO,YAAa,YAAY,SAAC2O,EAAOC,EAAGP,GAEjE,OADAI,IACO,sBAA0D5c,MAAO,CAAED,MAAO,oCAAqC,SAAEqc,EAAStH,OAAK,iBAA1GiI,EAAC,YAAIP,EAAM,YAAII,GAC7C,GACF,CAbWI,WAiEb,ECxEeC,GA3BwB,SAAH,GAAuB,IAAjB9Z,EAAS,EAATA,UACxC,EAA2C6X,GAAqC7X,EAAW,IAAnFkY,EAAa,EAAbA,cAAeG,EAAc,EAAdA,eAEvB,OACE,qBAAK7H,UAAU,kBAAiB,SAC7BxQ,EAAUiQ,OAAS,EAClB,qCACE,cAAC,GAAM,IACP,qBAAKO,UAAU,6BAA4B,SACzC,qBAAKA,UAAU,6BAA4B,SACzC,cAAC6H,EAAc,UACZH,EAAc3c,KAAI,SAAA0d,GAAQ,OACzB,cAAC,GAAQ,CAAqDA,SAAUA,GAAS,mBAAtDA,EAAS1Y,KAAI,YAAI0Y,EAASjL,OAA8B,aAO7F,qBAAKwC,UAAU,8BAA6B,6DAMpD,ECKeqE,I,OAAAA,aA1B8B,WAC3C,IAAQrB,EAAiB5D,GAAkBkD,GAAUW,SAA7CD,aAGFxT,EAFS0P,KAiBCb,UAAUkL,IAAI,CAC1BvZ,OAAQgT,EAAaxT,UAAUQ,OAC/BQ,KAAMwS,EAAaxT,UAAUgB,OAfjC,OACE,qCACE,cAAC,GAAO,IACR,sBAAKwP,UAAU,uBAAsB,UACnC,cAAC,GAAU,IACX,qBAAKA,UAAU,oBAAmB,SAChC,cAAC,GAAI,CAACxQ,UAAWA,WAY3B,KCrBega,GAdyB,WACtC,IAAMC,EAAMlE,GAAO,CACjBC,MAAO,qBACPhL,YAAa,kDAGf,OACE,qCACE,cAACiP,EAAG,IACJ,cAAC,GAAiB,MAGxB,ECyWeC,I,OAnX+B,WAC5C,MAAkB7G,GAA2BxK,EAAYuK,SAAlDnT,EAA0D,iBAAnD,GAERga,EAAMlE,GAAO,CACjBC,MAAO,aACPhL,YACE,wEAGJ,OACE,qCACE,cAACiP,EAAG,IACJ,sBAAKzJ,UAAU,eAAc,UAC3B,sBAAKA,UAAU,sBAAqB,UAClC,yDACA,gFACkD,IAChD,mDAA0B,UAAO,yDAAiC,wDACT,IACzD,iEAA4C,4BAE5C,uBAAM,2HAIR,qCACM,sDAAsC,+CAClB,uDAA6B,IAAC,uBAAM,kFAIhE,sBAAKA,UAAU,sBAAqB,UAClC,mEACA,oBAAGA,UAAU,qBAAoB,UAC/B,4CAAuB,qBACvB,uBAAM,SACC,IACP,mBAAGG,KAAK,2EAA0E,gCAE9E,KACF,iCAAO1Q,EAAQyV,MAAK,gBAAkB,uEAExC,uBAAM,MACF,IACJ,mBAAG/E,KAAK,0EAAyE,mBAE5E,IAAG,6DACmD,IAC3D,8CAAuB,wBAA0B,wCAAkB,IAAG,UAC/D,uDAAgC,SACvC,uBAAM,oEAC4D,IAClE,mDAA4B,0BAE9B,mDACoB,iDAA4B,mEACC,IAC/C,mBAAGA,KAAK,sDAAqD,+BAEzD,IACH,uBAAM,+GAGP,uBACA,uBAAM,sCAC8B,IACpC,sDAAiC,gDACxB,4CAAuB,gBAChC,0BAEF,oCACK,sDAAiC,gCACpC,uBAAM,0IAGF,IACJ,mBAAGA,KAAK,2EAA0E,oBAE9E,gCAC0B,IAC9B,mBAAGA,KAAK,2EAA0E,gCAE9E,OAGN,mFAEE,oCACG,uBAAM,sBACH,6CACJ,uBAAM,gCAEN,uBAAM,sBACF,6CACJ,uBAAM,gCAEN,uBAAM,sBACF,6CACJ,uBAAM,6BAAM,+CACZ,uBAAM,iDAEN,uBAAM,qDAEN,uBAAM,4DAEN,uBAAM,4CAEN,uBAAM,8CAEN,uBAAM,yDAEN,uBAAM,6CAEN,uBAAM,+CAEN,uBAAM,sDAEN,uBAAM,0DAEN,uBAAM,6BAAM,8CACZ,uBAAM,4CAEN,uBAAM,6CAEN,uBAAM,yCAEN,uBAAM,kDAEN,uBAAM,6BAAM,6CACZ,uBAAM,gCAEN,uBAAM,sBACF,+CACJ,uBAAM,+CAEN,uBAAM,qCAEN,uBAAM,8BAEN,uBAAM,kCAEN,0BACI,6BAGR,gCACE,0CAAiB,0DACuC,IACxD,0CAAoB,2CACpB,uBAAM,mDAC2C,IACjD,wDAAiC,0DAEjC,uBAAM,6EAEK,oEAAqD,6BAEhE,uBAAM,oFAEgB,IACtB,mBAAGA,KAAK,iGAAgG,gCAEpG,IACH,uBACD,uBAAM,6CAEN,oCACG,uBAAM,sBACH,6CACJ,uBAAM,6BAAM,+CACZ,uBAAM,6BAAM,8CACZ,uBAAM,sBACF,6CACJ,uBAAM,6BAAM,+CACZ,uBAAM,6BAAM,8CACZ,uBAAM,yBAEN,uBAAM,YAER,qEAEE,+BACE,+BACE,+BACE,gDACK,oHAIT,+BACE,+BACE,iDACK,4IAIP,uBAAM,4FAE2B,IACjC,qDAA8B,uHAG9B,uBAAM,2EAEM,IACZ,mBAAGA,KAAK,0EAAyE,mBAE7E,kBACW,8CAAuB,wBAC5B,wCAAiB,UAAQ,IACnC,uDAAgC,YAElC,uDACuB,mDAA4B,iCAC7B,IACpB,mBACEA,KAAK,mEACLD,IAAI,WAAU,wBAGZ,yFAOZ,gCACE,0CAAiB,kKAGjB,oCACG,uBAAM,sBACH,+CACJ,uBAAM,+CAEN,uBAAM,qCAEN,uBAAM,kCAEN,0BAEF,+BACE,+BACE,+BACE,iDACK,wJAGgB,iDAA0B,kCAGnD,+BACE,mDAA4B,6IAI9B,+BACE,gDAAyB,6FAGxB,uDACgD,IACrD,mBAAGC,KAAK,0EAAyE,mBAE5E,IAAG,gCAGV,gCACE,wCACA,mBAAGA,KAAK,2EAA0E,kBAE7E,IAAG,uEAER,uBACA,qCACI,uBAAM,+BAER,uBAAM,uCAEN,uBAAM,oCAEN,uBAAM,qCAEN,uBAAM,gCAEN,uBAAM,sBACF,2CACJ,uBAAM,sBACF,8CACJ,uBAAM,sBACF,4CACJ,0BAEF,+BACE,+BACE,+BACE,6CACK,6EAIT,wCACS,IACP,+BACE,gDACM,IAAG,iHAE0C,IACrD,0DAAoC,qBAEtC,+BACE,6CAAuB,KAAC,kDAA4B,IAAC,IACrD,qDAA+B,KAAC,mDAA6B,iHAMnE,gCACE,4CAAmB,wGAGnB,wQAKM,4OAIgC,IACtC,uDAAgC,qCAAmC,IACnE,mBAAGA,KAAK,gHAA+G,oBAElH,IAAG,MACJ,IACJ,mBAAGA,KAAK,iIAAgI,sBAEpI,OAGN,gCACE,wCAAe,mGAGf,uBAAM,8EAKR,+KAIE,uBACA,mBAAGA,KAAK,8BAA6B,2CAEhC,IAAG,iBAER,uBACA,uBAAM,mEAOlB,GC/WewJ,GANkC,WAC/C,OACE,cAAC,GAAkB,GAEvB,EC6GevD,I,OArGuB,WAAO,IAAD,IAClCpC,EAAiBD,KAAjBC,aACFhG,EAASkB,KACf,EAA8B2D,GAA4BxK,EAAY8F,UAAS,mBAAxE1O,EAAO,KAAE6U,EAAU,KAE1B,EAA0EtG,EAAlEG,SAAY5E,EAAiB,EAAjBA,kBAAmBS,EAAe,EAAfA,gBAAiBR,EAAW,EAAXA,YAClDoQ,EAAgC,QAApB,EAAIna,EAAQsJ,gBAAQ,QAAIiB,EACpCqM,EAAwB,QAAhB,EAAI5W,EAAQe,YAAI,QAAIgJ,EAElC,EAAgDwH,mBAA0B4I,GAAa,mBAAhFC,EAAgB,KAAEC,EAAmB,KAC5C,EAAwC9I,mBAAsBqF,GAAS,mBAAhEC,EAAY,KAAEC,EAAe,KACpC,EAAgDvF,oBAAS,GAAM,mBAAxDuD,EAAgB,KAAEC,EAAmB,KAE5C,OAAIR,EAEA,cAAC,KAAM,CACLU,KAAMH,EACNiC,cAAe,kBAAMhC,GAAqBD,EAAiB,EAC3DI,QAAS,kBAAMH,GAAoB,EAAM,EACzCxE,UAAS,0CAAqCsG,EAAa7I,eAC3DvR,MAAM,OACN2Y,UAAW,OAAO,SAEjBkF,MAIEA,IAGT,SAASC,EAAiBxZ,EAAmByZ,GAC3C,OACE,oBAAIjK,UAAU,oCAAmC,SAC9CiK,EAAkBlf,KAAI,SAAAmf,GAAe,OACpC,oBAEElK,UAAS,0CAAqC6J,IAAqBK,EAAkB,WAAa,IAAK,SAEvG,sBACElK,UAAU,sCACVkC,QAAS,kBAsDgCiI,EAtDQ3Z,EAuD3DsZ,EADwB/Q,EAtDkBmR,GAwD1C5F,EAAW,CAAEvL,WAAUvI,KAAM2Z,SAC7B3F,GAAoB,GAHtB,IAA0BzL,EAA2BoR,CAtDa,EAAC,SAEtDD,IAAoB7b,EAAgBuX,QAAU,OAASsE,KACnD,uBARcA,GASlB,KAIb,CAEA,SAASH,IACP,OACE,oBAAI/J,UAAU,iBAAgB,SAC3BjV,cAAIwO,GAAoB,SAAC6Q,EAAc5Z,GACtC,IAAMkW,EAAaJ,IAAiB9V,EACpC,OACE,qBAEEwP,UAAS,+BAA0B0G,EAAa,WAAa,IAAK,UAElE,uBACE1G,UAAU,2BACVkC,QAAS,kBAwBvB,SAAsB1R,GACpB,IAAM6Z,EAAyB9Q,EAAkB/I,GAAM,GAEvD+V,EAAgB/V,GAChBsZ,EAAoBO,GACpB/F,EAAW,CAAE9T,OAAMuI,SAAUsR,GAC/B,CA9B6BC,CAAa9Z,EAAK,EAAC,UAElC,cAAC,GAAI,CACHwP,UAAU,iCACV9T,MAAOwa,EAAa,GAAK,EACzBva,OAAQua,EAAa,EAAI,GACzBnM,KAAMmM,EAAa5G,GAASqC,cAAgBrC,GAASyK,iBAEtD/Z,EACD,cAAC,GAAQ,CACPwP,UAAU,gCACVxP,KAAMsT,GAAa1V,YACnBmM,KAAM/J,EAAKF,SAAS,KAAO,MAAQE,EACnCtE,MAAOsE,EAAKF,SAAS,KAAO,GAAK,QAGpC0Z,EAAiBxZ,EAAM4Z,KAAa,uBArBhB5Z,GAwB3B,KAGN,CAeF,GCxFeyS,I,OAnBoB,WACjC,MAA8BJ,GAA4BxK,EAAY8F,UAAS,mBAAxE1O,EAAO,KAAE6U,EAAU,KAE1B,OACE,qBAAKtE,UAAU,mBAAkB,SAC/B,cAAC,GAAM,CACLA,UAAU,2BACV6G,YAAY,gDACZ1F,MAAO1R,EAAQO,QAAU,GACzB+Q,SAKN,SAAwB/Q,GACtBsU,EAAW,CAAEtU,UACf,KACF,GCsLe4V,I,OA5L2B,SAAH,GAEhC,IADL9M,EAAO,EAAPA,QAEMkF,EAASkB,KACTsL,EAAQ1R,EAAQC,WAAa1K,EAAgBsE,IAE7CnC,EAAOga,EAAQpc,EAAYoD,MAAQsH,EAAQtI,KAEjD,OACE,sBAAKwP,UAAU,YAAW,UACxB,sBAAKA,UAAU,oBAAmB,UAChC,sBAAKA,UAAU,4BAA2B,UACxC,sBAAMA,UAAU,kBAAiB,SAC/B,cAAC,GAAQ,CAACxP,KAAMsT,GAAa1V,YAAamM,KAAM/J,EAAMtE,MAAO,OAE/D,sBAAK8T,UAAU,0BAAyB,UACtC,oBAAIA,UAAU,yBAAwB,SACnClH,EAAQyB,OAEX,qBACEyF,UAAU,6BACV3T,MAAO,CAAED,MAAM,uBAAD,OAAyBsc,oBAAUlY,GAAK,MAAM,UAE3Dga,EAAQpc,EAAYoD,MAAQhB,EAAI,OAEhCsI,EAAQC,WAAa1K,EAAgBuX,QAAU,OAAS9M,EAAQC,SAAQ,oBAI/E,qBAAKiH,UAAU,4BAA2B,SACvClH,EAAQ2R,SAAW7Q,eAAKd,EAAQ2R,SAAS1f,KAAI,SAAA2f,GAAK,OACjD,sBAEE1K,UAAU,0BAAyB,SAEnC,cAAC,GAAK,CACJY,MAAO8J,EACPte,MAAK,kCAA6Bsc,oBAAUlY,GAAK,QACjD,kBANcsI,EAAQ/I,KAAI,kBAAU2a,GAOjC,SAIb,sBAAK1K,UAAU,qBAAoB,UACjC,sBAAKA,UAAU,0BAAyB,UACtC,qBAAKA,UAAU,yBAAwB,SA4F/C,WACE,IAAI2K,EAAa,KAEXC,EAAiB1B,KAAepQ,EAAQ0B,YAAa,YAAY,SAACqQ,EAAGzB,GACzE,OACE,sBAEEpJ,UAAU,wCAAuC,4BADrClH,EAAQ/I,KAAI,oBAAY+I,EAAQyB,KAAI,YAAI6O,GAM1D,IAEA,GAAItQ,EAAQoB,OAAQ,CAClB,IAAM4Q,EAAiB5B,KAAe0B,EAAgB,kBAAkB,SAACzB,EAAOC,EAAGP,GAAY,IAAD,EACtFhO,EAAUkQ,SAAS5B,GACnB6B,EAAuC,QAA9B,EAAGhN,EAAOI,OAAO/D,KAAKQ,UAAQ,aAA3B,EAA6BN,KAE/C,OAAIyQ,EAEA,cAAC,KAAI,CAEH/F,GAAIzE,GAAUiC,MAAMiB,QAAQ,QAAS7I,EAAQoQ,YAC7CjL,UAAU,uCAAsC,SAE/CgL,GAAS,cAJElS,EAAQ/I,KAAI,kBAAU8K,EAAO,YAAIuO,EAAC,YAAIP,IASpD,cAAC,KAAI,CAEH5D,GAAIzE,GAAUiC,MAAMiB,QAAQ,QAAS7I,EAAQoQ,YAC7CjL,UAAU,+CAA8C,wCAF5ClH,EAAQ/I,KAAI,kBAAU8K,EAAO,YAAIuO,EAAC,YAAIP,GAQ1D,IAEA8B,EAAaG,CACf,MACEH,EAAaC,EAGf,OAAOD,CACT,CA3IWtB,KAEH,qBAAKrJ,UAAU,oBAAmB,SA4B1C,WACE,GAAIwK,EACF,OACE,sBAAKxK,UAAU,gCAA+B,UAC3CkL,EAAYld,EAAW0D,MACvBwZ,EAAYld,EAAWqD,WACvB6Z,EAAYld,EAAWoD,aAK9B,OACE,qCACE,sBAAK4O,UAAU,2BAA0B,UACtCkL,EAAYld,EAAW8D,eACvBoZ,EAAYld,EAAW6D,WACvBqZ,EAAYld,EAAW4D,WAE1B,sBAAKoO,UAAU,2BAA0B,UACtCkL,EAAYld,EAAW0D,MACvBwZ,EAAYld,EAAWqD,WACvB6Z,EAAYld,EAAWoD,eAIhC,CApDW+Z,QAGL,sBAAKnL,UAAU,yBAAwB,UACrC,oBAAIA,UAAU,6BAA4B,gCAG1C,6BACGlH,EAAQsS,UAAUrgB,KAAI,SAAAkQ,GAAQ,OAC7B,oBAEE+E,UAAU,sBAAqB,SAE/B,cAAC,KAAI,CAACiF,GAAI,CACRpG,SAAU,SACV7O,OAAO,cAAD,OAAgBiL,EAAQ,0BAAkB+C,EAAOE,MAAM3C,iBAAiBN,KAC9E,SACCA,IAAa/M,EAAS4F,KAAO,OAASmH,KAClC,kBARSnC,EAAQ/I,KAAI,qBAAakL,GAStC,eAmCjB,SAASiQ,EAAYjS,GACnB,IAAMoS,EAAQvS,EAAQwB,OAAOrB,GAE7B,OACE,sBAAmC+G,UAAU,mBAAkB,UAC7D,wBACEA,UAAU,0BACV3T,MAAO,CAAED,MAAM,oBAAD,OAAsBsc,oBAAUzP,GAAO,MAAM,SAE1DA,IAEH,+BACE,qBAAI+G,UAAU,kBAAiB,UAC7B,sBAAMA,UAAU,yBAAwB,wBAGxC,qBAAIA,UAAU,uBAAsB,UACjCqL,EAAM3Q,QAAO,MAAK2Q,EAAMC,cAG7B,qBAAItL,UAAU,kBAAiB,UAC7B,sBAAMA,UAAU,yBAAwB,0BAGxC,qBAAIA,UAAU,uBAAsB,UACjCqL,EAAMzQ,IAAG,MAAKyQ,EAAME,sBAGtB,sBAxBkBtS,GA2B7B,CAoDF,GC1JeqQ,I,OAtCwB,SAAH,GAE7B,IADL1Q,EAAQ,EAARA,SAEA,EAA2CyO,GAAoCzO,EAAU,IAAjF8O,EAAa,EAAbA,cAAeG,EAAc,EAAdA,eAEvB,OACE,qBAAK7H,UAAU,iBAAgB,SAC5BpH,EAAS6G,OAAS,EACjB,qCACE,qBAAKO,UAAU,yBAAwB,SACrC,sBAAKA,UAAU,gCAA+B,UAC5C,oBAAIA,UAAU,gCAA+B,qBAG7C,oBAAIA,UAAU,gCAA+B,0BAKjD,qBAAKA,UAAU,4BAA2B,SACxC,qBAAKA,UAAU,2BAA0B,SACvC,cAAC6H,EAAc,UACZH,EAAc3c,KAAI,SAAA+N,GAAO,OACxB,cAAC,GAAO,CAAiCA,QAASA,GAAQ,kBAAjCA,EAAQ/I,MAA4B,aAOvE,qBAAKiQ,UAAU,4BAA2B,4DAMlD,GCLeqE,I,OAAAA,aA1B6B,WAC1C,IAAQrB,EAAiB5D,GAAkBkD,GAAUW,SAA7CD,aAEFpK,EADSsG,KAgBCf,SAASoL,IAAI,CACzBvZ,OAAQgT,EAAapK,SAAS5I,OAC9BQ,KAAMwS,EAAapK,SAASpI,KAC5BuI,SAAUiK,EAAapK,SAASG,WAhBpC,OACE,qCACE,cAAC,GAAO,IACR,sBAAKiH,UAAU,sBAAqB,UAClC,cAAC,GAAU,IACX,qBAAKA,UAAU,mBAAkB,SAC/B,cAAC,GAAI,CAACpH,SAAUA,WAa1B,KCvBe4Q,GAdyB,WACtC,IAAMC,EAAMlE,GAAO,CACjBC,MAAO,oBACPhL,YAAa,8DAGf,OACE,qCACE,cAACiP,EAAG,IACJ,cAAC,GAAgB,MAGvB,EC8Ce+B,I,OA7CgC,SAAH,GAKrC,IAAD,EAJJxL,EAAS,EAATA,UACAyL,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACApG,EAAQ,EAARA,SAEA,EAAoCtE,mBAAS0K,GAAe,GAAE,mBAAvDC,EAAU,KAAEC,EAAa,KAMhC,OAJAC,IAAM9M,WAAU,WACd6M,EAAcF,GAAe,EAC/B,GAAG,CAACA,IAGF,sBAAK1L,UAAS,iBAAYA,GAAwB,IAAK,UACrD,oBAAIA,UAAU,qBAAoB,SAC/ByL,EAAS1gB,KAAI,SAAC+gB,EAAsB1J,GAAK,OACxC,oBAEEpC,UAAS,iCAA4B2L,IAAevJ,EAAQ,WAAa,IACzE/V,MAAO,CACL,qBAAsByf,EAAQC,YAAcD,EAAQ1f,MACpDA,MAAO0f,EAAQ1f,MACf4f,YAAaF,EAAQE,aAAeF,EAAQ1f,OAE9C8V,QAAS,kBAenB,SAAoBE,GAClBwJ,EAAcxJ,EAChB,CAjByB6J,CAAW7J,EAAM,EAAC,SAEhC0J,EAAQlL,OAAK,cATFkL,EAAQlL,MAAK,YAAIwB,GAU1B,MAQP,QANG,EAEJyJ,IAAMK,SAASnhB,IAAIua,GAAU,SAAA6G,GAAI,OAChC,8BACGA,GAAI,mBADeR,GAEhB,WACN,aAJD,EAIGvb,QAAO,SAACya,EAAGzB,GAAC,OAAKA,IAAMuC,CAAU,MAQ3C,GCsFeS,I,OAnIqC,SAAH,GAE1C,IADL5b,EAAI,EAAJA,KAGMiI,EADSyG,KACaf,SAASkO,oBAAoB7b,GACnD8b,EAAyB7T,EAC7B5M,OAAOD,KAAK2gB,iBAAO9T,GAAc,SAAA+T,GAAI,OAAIA,EAAK/M,OAAS,CAAC,KACtD,GAEJ,EAA4CuB,mBAAyB,MAAK,mBAAnEyL,EAAc,KAAEC,EAAiB,KAExC,OACE,qBAAK1M,UAAU,iBAAgB,SAC5BvH,EACC,qBAAKuH,UAAU,0BAAyB,SACtC,cAAC,GAAI,CACHyL,SAAUa,EAAsBvhB,KAAI,SAAAof,GAAW,MAAK,CAClDvJ,MAAOuJ,EACP/d,MAAM,uBAAD,OAAyB+d,EAAY1M,cAAa,KACvDuO,YAAa7B,IAAgB/b,EAAYmD,MACvC,iCAAgC,8BACT4Y,EAAY1M,cAAa,KAClDsO,WAAW,2BAAD,OAA6B5B,EAAY1M,cAAa,KACjE,IAAG,SAEH6O,EAAsBvhB,KAAI,SAACof,GAC1B,OACE,8BACGwC,EAAkBxC,IAAY,eADfA,GAItB,QAKJ,sBAAKnK,UAAU,uBAAsB,UAClCxP,EAAI,6BAMb,SAASmc,EAAkBnc,GACzB,OAAKiI,EAIEA,EAAajI,GAAMzF,KAAI,SAAC+N,GAC7B,IAAM4N,GAA2B,OAAd+F,QAAc,IAAdA,OAAc,EAAdA,EAAgB1c,QAAS+I,EAAQ/I,KAEpD,OACE,sBAEEiQ,UAAS,wCAAmCxP,EAAKiN,cAAa,YAAIiJ,EAAa,WAAa,IAAK,UAEjG,sBACE1G,UAAU,+BACVkC,QAAS,kBAAMwK,EAAkBhG,EAAa,KAAO5N,EAAQ,EAAC,SAE7DA,EAAQyB,OAEVmM,GACC,sBAAK1G,UAAU,gCAA+B,UAC5C,wBAAQA,UAAU,4CAA2C,SAC1DqJ,EAAkBvQ,KAEpB/N,cAAI+N,EAAQwB,QAAQ,SAAC+Q,EAAOpS,GAC3B,OAAIA,IAAWjL,EAAW+D,SACjB,KAIP,sBAAmCiO,UAAU,iCAAgC,UAC3E,wBACEA,UAAU,wCACV3T,MAAO,CAAED,MAAM,oBAAD,OAAsBsc,oBAAUzP,GAAO,MAAM,SAE1DA,IAEH,+BACE,qBAAI+G,UAAU,gCAA+B,UAC3C,sBAAMA,UAAU,uCAAsC,wBAGtD,qBAAIA,UAAU,qCAAoC,UAC/CqL,EAAM3Q,QAAO,MAAK2Q,EAAMC,cAG7B,qBAAItL,UAAU,gCAA+B,UAC3C,sBAAMA,UAAU,uCAAsC,0BAGtD,qBAAIA,UAAU,qCAAoC,UAC/CqL,EAAMzQ,IAAG,MAAKyQ,EAAME,sBAGtB,sBAxBkBtS,GA2B7B,IAAG2T,eAGN,gBAlDapc,EAAI,YAAIsI,EAAQ/I,MAqDpC,IA7DS,IA8DX,CAGA,SAASsZ,EAAkBvQ,GACzB,IAAM8R,EAAiB1B,KAAepQ,EAAQ0B,YAAa,YAAY,SAACqQ,EAAGzB,GACzE,OACE,sBAEEpJ,UAAU,mDAAkD,4BADhDlH,EAAQ/I,KAAI,oBAAY+I,EAAQyB,KAAI,YAAI6O,GAM1D,IAOA,OAJIwB,GAAkBiC,mBAASjC,EAAe,MAAQA,EAAe,GAAGzB,MAAM,SAC5EyB,EAAe,GAAE,YAAQA,EAAe,KAGnCA,CACT,CACF,GCMeY,I,OAzIyB,WACtC,IAAMxN,EAASkB,KACTzG,EAAeuF,EAAOG,SAAS2O,uBAC/BR,EAAwB,CAACle,EAAYyD,WAC3C,EAA4CmP,mBAAyB,MAAK,mBAAnEyL,EAAc,KAAEC,EAAiB,KAExC,OACE,qBAAK1M,UAAU,sBAAqB,SAClC,qBAAKA,UAAU,+BAA8B,SAC3C,cAAC,GAAI,CACHyL,SAAUa,EAAsBvhB,KAAI,SAAAof,GAAW,MAAK,CAClDvJ,MAAOuJ,EACP/d,MAAM,uBAAD,OAAyB+d,EAAY1M,cAAa,KACvDuO,YAAa7B,IAAgB/b,EAAYmD,MACvC,iCAAgC,8BACT4Y,EAAY1M,cAAa,KAClDsO,WAAW,2BAAD,OAA6B5B,EAAY1M,cAAa,KACjE,IAAG,SAEH6O,EAAsBvhB,KAAI,SAACof,GAC1B,OACE,8BAWH1R,EAAa1N,KAAI,SAAC+N,GACvB,IAAM4N,GAA2B,OAAd+F,QAAc,IAAdA,OAAc,EAAdA,EAAgB1c,QAAS+I,EAAQ/I,KAC9Csb,EAAQvS,EAAQwB,OAAOtM,EAAW8D,eAExC,OACE,sBAEEkO,UAAS,uDAAkD0G,EAAa,WAAa,IAAK,UAE1F,sBACE1G,UAAU,oCACVkC,QAAS,kBAAMwK,EAAkBhG,EAAa,KAAO5N,EAAQ,EAAC,SAE7DA,EAAQyB,OAEVmM,GACC,sBAAK1G,UAAU,qCAAoC,UACjD,wBAAQA,UAAU,iDAAgD,SAC/DqJ,EAAkBvQ,KAGrB,qBAAuCkH,UAAU,sCAAqC,SACpF,+BACE,qBAAIA,UAAU,qCAAoC,UAChD,sBAAMA,UAAU,4CAA2C,wBAG3D,qBAAIA,UAAU,0CAAyC,UACpDqL,EAAM3Q,QAAO,MAAK2Q,EAAMC,cAG7B,qBAAItL,UAAU,qCAAoC,UAChD,sBAAMA,UAAU,4CAA2C,0BAG3D,qBAAIA,UAAU,0CAAyC,UACpDqL,EAAMzQ,IAAG,MAAKyQ,EAAME,qBAGtB,kCAGV,0BApCuBzS,EAAQ/I,MAuCtC,KAvDyB,eADGoa,GAItB,UAwDR,SAASd,EAAkBvQ,GACzB,IAAI6R,EAAa,KAEXC,EAAiB1B,KAAepQ,EAAQ0B,YAAa,YAAY,SAACqQ,EAAGzB,GACzE,OACE,sBAEEpJ,UAAU,wDAAuD,4BADrDlH,EAAQ/I,KAAI,oBAAY+I,EAAQyB,KAAI,YAAI6O,GAM1D,IAEItQ,EAAQoB,OA4BVyQ,EA3BuBzB,KAAe0B,EAAgB,kBAAkB,SAACzB,EAAOC,EAAGP,GAAY,IAAD,EACtFhO,EAAUkQ,SAAS5B,GACnB6B,EAAuC,QAA9B,EAAGhN,EAAOI,OAAO/D,KAAKQ,UAAQ,aAA3B,EAA6BN,KAE/C,OAAIyQ,EAEA,cAAC,KAAI,CAEH/F,GAAIzE,GAAUiC,MAAMiB,QAAQ,QAAS7I,EAAQoQ,YAC7CjL,UAAU,uDAAsD,SAE/DgL,GAAS,cAJElS,EAAQ/I,KAAI,kBAAU8K,EAAO,YAAIuO,EAAC,YAAIP,IASpD,cAAC,KAAI,CAEH5D,GAAIzE,GAAUiC,MAAMiB,QAAQ,QAAS7I,EAAQoQ,YAC7CjL,UAAU,+DAA8D,wCAF5DlH,EAAQ/I,KAAI,kBAAU8K,EAAO,YAAIuO,EAAC,YAAIP,GAQ1D,IAIA8B,EAAaC,EAQf,OAJID,GAAckC,mBAASlC,EAAW,MAAQA,EAAW,GAAGxB,MAAM,SAChEwB,EAAW,GAAE,YAAQA,EAAW,KAG3BA,CACT,CACF,GCjGea,I,OArCgC,SAAH,GAErC,IADLvQ,EAAQ,EAARA,SAIA,OAFyB8I,KAAjBC,aAIJ,cAAC,KAAM,CACLhE,UAAS,qCACT9T,MAAM,OACN2Y,UAAW,OAAO,SAElB,sBAAK7E,UAAU,mCAAkC,UAC/C,qBAAKA,UAAU,wBAAuB,+BAGrC/E,IAAa/M,EAAS4F,KACrB,cAAC,GAAiB,IAElB,cAAC,GAAiB,CAACtD,KAAMyK,SAQjC,qBAAK+E,UAAU,mCAAkC,SAC9C/E,IAAa/M,EAAS4F,KACrB,cAAC,GAAiB,IAElB,cAAC,GAAiB,CAACtD,KAAMyK,KAIjC,GC+Ce8R,I,OAhFkC,SAAH,GAGvC,IAFL/T,EAAI,EAAJA,KACAF,EAAO,EAAPA,QAEA,OACE,oBAAIkH,UAAU,mBAAkB,SAMlC,WACE,IAAI2K,EAAa,KAEXC,EAAiB1B,KAAepQ,EAAQ0B,YAAa,YAAY,SAACqQ,EAAGzB,GACzE,OACE,sBAEEpJ,UAAU,0BAAyB,SAElCkL,KAAa,cAHFlS,EAAKjJ,KAAI,oBAAY+I,EAAQyB,KAAI,YAAI6O,GAMvD,IAEA,GAAItQ,EAAQoB,OAAQ,CAClB,IAAM4Q,EAAiB5B,KAAe0B,EAAgB,kBAAkB,SAACzB,EAAOC,EAAGP,GACjF,IAAMhO,EAAUkQ,SAAS5B,GACnB6B,EAAYlS,EAAQoB,OAASpB,EAAQoB,OAAOW,GAAW,KAC7D,OAAImQ,EAEA,cAAC,KAAI,CAEH/F,GAAIzE,GAAUiC,MAAMiB,QAAQ,QAAS7I,EAAQoQ,YAC7CjL,UAAU,0BAAyB,SAElCgL,GAAS,cAJEhS,EAAKjJ,KAAI,kBAAU8K,EAAO,YAAIuO,EAAC,YAAIP,IASjD,cAAC,KAAI,CAEH5D,GAAIzE,GAAUiC,MAAMiB,QAAQ,QAAS7I,EAAQoQ,YAC7CjL,UAAU,iCAAgC,wCAF9BhH,EAAKjJ,KAAI,kBAAU8K,EAAO,YAAIuO,EAAC,YAAIP,GAQvD,IAEA8B,EAAaG,CACf,MACEH,EAAaC,EAIXD,GAAckC,mBAASlC,EAAW,MAAQA,EAAW,GAAGxB,MAAM,SAChEwB,EAAW,GAAE,YAAQA,EAAW,KAGlC,OAAOA,CACT,CAzDKqC,KA2DL,SAAS9B,IACP,OAAIpS,EAAQ2B,MAAQ3B,EAAQ6B,IAExB,oBAAIqF,UAAU,wBAAuB,SAAElH,EAAQ6B,MAI/C,yCACG,oBAAIqF,UAAU,wBAAuB,SAAElH,EAAQ2B,MAAS,IAAC,oBAAIuF,UAAU,wBAAuB,SAAElH,EAAQ6B,MAAS,MAI1H,CACF,GCrDesS,I,OA9B+B,SAAH,GAGpC,IAFLjU,EAAI,EAAJA,KACAkU,EAAW,EAAXA,YAEA,OACE,qBAAIlN,UAAU,gBAAe,cAC1B,oBAAIA,UAAU,uBAAsB,SAAEkN,EAAY5b,QAAW,OAiBzD4b,EACJre,MACA9D,KAZoB,SAACyF,GAAiB,OACvC,oBAEEwP,UAAU,sBACV3T,MAAO,CAAED,MAAM,uBAAD,OAAyBoE,EAAKiN,cAAa,MAAM,SAE9DjN,GAAI,UAJGwI,EAAKjJ,KAAI,iBAASS,GAKvB,IAMJiJ,QAAO,SAAC0T,EAAMC,GAAI,MAAK,CAACD,EAAM,OAAQC,EAAK,IAnB3B,OAChBF,EAAY5b,MAAQ,EAAI,WAAa,YAoB5C,GCsCe+b,I,OA7D2B,SAAH,GAGhC,IAFLtR,EAAG,EAAHA,IAAI,EAAD,EACHuR,oBAAY,OAAO,EAEnB,EAAsCtM,mBAASsM,GAAa,mBAArDC,EAAW,KAAEC,EAAc,KAElC,OACE,sBAAKxN,UAAU,YAAW,UACxB,sBACEA,UAAU,2BACVkC,QAAS,kBAAMsL,GAAgBD,EAAY,EAAC,kBAEvC,sBAAMvN,UAAU,kBAAiB,SAAEjE,EAAIxB,OAC5C,sBAAMyF,UAAS,kCAA6BuN,EAAc,GAAK,YAAa,SACzEA,EACC,cAAC,GAAI,CAAChT,KAAMuF,GAAS2N,iBAAkBvhB,MAAO,EAAGC,OAAQ,KAEzD,cAAC,GAAI,CAACoO,KAAMuF,GAAS4N,gBAAiBxhB,MAAO,GAAIC,OAAQ,SAI/D,qBAAK6T,UAAS,sCAAiCuN,EAAc,GAAK,YAAa,SAC7E,sBAAKvN,UAAU,qBAAoB,UACjC,sBAAKA,UAAU,qBAAoB,UACjC,wBAAQA,UAAU,+BAA8B,SAC7CjE,EAAIlN,MAAM8e,KAAK,QAElB,oBAAI3N,UAAU,6BAA4B,SACvCjV,cAAIgR,EAAI6R,SAAS,SAACC,EAAOC,GAAW,OACnC,qBAEE9N,UAAU,2BAA0B,UAEpC,qBAAIA,UAAU,iCAAgC,UAAE8N,EAAW,OAC1DD,IAAK,oBAJY9R,EAAIhM,KAAI,YAAI+d,GAK3B,SAIX,oBAAI9N,UAAU,uBAAsB,SACjCjE,EAAIL,MAAM3Q,KAAI,SAAAiO,GAAI,OACjB,6BAGE,eAAC,KAAI,CAACiM,GAAIzE,GAAUgC,KAAKkB,QAAQ,QAAS1K,EAAKjJ,KAAKkb,YAAajL,UAAU,4BAA2B,UACnGhH,EAAK+U,MACJ,cAAC,GAAQ,CAACvd,KAAMsT,GAAatB,KAAMjI,KAAMvB,EAAK+U,KAAM7hB,MAAO,KAE7D,oBAAI8T,UAAU,iCAAgC,SAC3ChH,EAAKuB,WAEH,oBATWwB,EAAIhM,KAAI,YAAIiJ,EAAKjJ,MAUhC,aAOnB,G,+CCwFeyS,GAnJwB,SAAH,GAE7B,IADLxJ,EAAI,EAAJA,KAEMgF,EAASkB,KACT8O,EAAeC,mBAAQ,kBAAMjQ,EAAOG,SAAS+P,qBAAqBlV,EAAK,GAAE,CAACA,IAC1EmV,EAAcF,mBAAQ,kBAAMjQ,EAAOE,MAAMkQ,WAAWpV,EAAK,GAAE,CAACA,IAC5DqD,EAAmBrD,EAAKqD,kBAAoB,YAElD,OACE,qBAAK2D,UAAU,gCAA+B,SAC5C,sBAAKA,UAAU,qBAAoB,UACjC,sBAAKA,UAAU,6BAA4B,UACzC,sBAAKA,UAAU,qCAAoC,UACjD,sBAAMA,UAAU,2BAA0B,SACvChH,EAAK+U,MACJ,cAAC,GAAQ,CAACvd,KAAMsT,GAAatB,KAAMjI,KAAMvB,EAAK+U,KAAM7hB,MAAO,OAG/D,sBAAK8T,UAAU,mCAAkC,UAC/C,oBACEA,UAAU,2BACV3T,MAAO,CAAED,MAAM,oBAAD,OAAsBsc,oBAAU1P,EAAKC,QAAO,MAAM,SAE/DD,EAAKuB,OAER,qBACEyF,UAAU,6BAA4B,UAGrChH,EAAKC,OAAM,IAAGD,EAAKxI,cAI1B,sBAAKwP,UAAU,iCAAgC,UAC7C,2CACUhH,EAAKyD,YAEdJ,EAAgB,cAGrB,sBAAK2D,UAAU,8BAA6B,UACzChH,EAAKwB,aACJ,qBAAKwF,UAAU,kCAAiC,SAC7ChH,EAAKwB,cAGTwT,GACC,qBAAKhO,UAAU,+BAA8B,SA2CvD,WAA+B,IAAD,IAC5B,OAAOgO,IAAyC,QAAzB,EAAAA,EAAa3U,oBAAY,aAAzB,EAA2BoG,QAAS,GACzD,oBAAIO,UAAU,qCAAoC,SACtB,QADsB,EAC/CgO,EAAa3U,oBAAY,aAAzB,EAA2BtO,KAAI,SAAC+N,EAASsJ,GAAK,OAC7C,cAAC,GAAc,CAEbpJ,KAAMA,EACNF,QAASA,GAAQ,UAFTE,EAAKjJ,KAAI,kBAAUqS,GAG3B,KAIV,CAtDaiM,KAGJF,GACC,sBAAKnO,UAAU,0BAAyB,UACtC,uBAAMA,UAAU,+BAA8B,kBAAOmO,EAAY5T,QACjE,sBAAKyF,UAAU,8BAA6B,UAC1C,wBAAQA,UAAU,wCAAuC,SACtDmO,EAAYtf,MAAM8e,KAAK,QAE1B,oBAAI3N,UAAU,sCAAqC,SAChDjV,cAAIojB,EAAYP,SAAS,SAACC,EAAOC,GAAW,OAC3C,qBAEE9N,UAAU,oCAAmC,UAE7C,qBAAIA,UAAU,0CAAyC,UAAE8N,EAAW,OACnED,IAAK,oBAJYM,EAAYpe,KAAI,YAAI+d,GAKnC,YAMdE,GACC,qBAAKhO,UAAU,+BAA8B,SAC3C,sBAAKA,UAAU,+CAA8C,UA8BzE,WAAgC,IAAD,EACvBwK,EAAQxR,EAAKD,WAAa9K,EAAa0E,IAEvC2b,EAAiB,CAAC,iBAAkB,mBAAoB,yBAE9D,OAAON,GACL,oBAAIhO,UAAU,sCAAqC,SACtB,QADsB,EAChDgO,EAAa7U,qBAAa,aAA1B,EAA4BpO,KAAI,SAAC+N,EAASsJ,GAAK,OAC9C,eAAC,WAAQ,WACNoI,GAAS,sBAAMxK,UAAU,4CAA2C,SAAEsO,EAAelM,KACtF,cAAC,GAAc,CACbpJ,KAAMA,EAENF,QAASA,GAAQ,UADTE,EAAKjJ,KAAI,kBAAUqS,MAE3B,aANiBpJ,EAAKjJ,KAAI,kBAAUqS,GAO7B,KAInB,CAhDemM,GAkDf,WAAgC,IAAD,EAC7B,OAAOP,GACL,qBAAIhO,UAAU,sCAAqC,UACvB,QADuB,EAChDgO,EAAa9U,oBAAY,aAAzB,EAA2BnO,KAAI,SAACyjB,EAAMpM,GACrC,QAASoM,EAAK/c,uBAAyB+c,EAAK/c,sBAAsBnB,SAAS0I,EAAKD,YAC9E,cAAC,GAAW,CAEVC,KAAMA,EACNkU,YAAasB,GAAK,UAFVxV,EAAKjJ,KAAI,kBAAUqS,GAKjC,IACC,CAAClU,EAAS+D,KAAM/D,EAAS4C,MAAO5C,EAAS6C,OAAOT,SAAS0I,EAAKxI,OAC7D,qBAAIwP,UAAU,8CAA6C,UACzD,oBAAIA,UAAU,qDAAoD,iBAAS,wBAAqB,oBAAI3T,MAAO,CAAED,MAAO,8BAA+B,mBAAW,WAAQ,oBAAIC,MAAO,CAAED,MAAO,6BAA8B,uBAKlO,CApEeqiB,QAINzV,EAAK0V,QACJ,qBAAK1O,UAAU,6BAA4B,SACxChH,EAAK0V,gBA+DpB,EC5FeC,I,OA5D2C,SAAH,GAEhD,IADL3V,EAAI,EAAJA,KAEM4V,EAAanN,sBACnB,EAAoCT,oBAAS,GAAM,mBAA5C6N,EAAU,KAAEC,EAAa,KAC1BC,ECVO,SAAgC5C,EAA8B9f,GAC3E,MAAwB2U,qBAAgB,mBAAjCgO,EAAI,KAAEC,EAAO,KAiBpB,OAfAlQ,qBAAU,WAERmQ,YAAW,WACL/C,EAAKvK,SAEPuN,aAAOhD,EAAKvK,QAAS,CAAEwN,WAAY,EAAG/iB,UACnCf,MAAK,SAAC0jB,GACDA,GACFC,EAAQD,EAEZ,GAEN,GAAG,IACL,GAAG,CAAC7C,EAAM9f,IAEH,SAACkO,EAAcoG,GAChBqO,IACFK,kBAAOL,EAAK,GAAD,OAAKzU,EAAI,SACpBoG,GAAYA,IAEhB,CACF,CDdmB2O,CAAuBV,EAAY,CAAEziB,OAAQ,OAAQojB,QAAS,IAAKrjB,MAAO,SAa3F,OAXA6S,qBAAU,WACJ8P,IACFE,EAAS/V,EAAKuB,MAAM,WAClBuU,GAAc,EAChB,IAGAI,YAAW,kBAAMJ,GAAc,EAAM,GAAE,KAE3C,IAGE,uBAAM9O,UAAU,mBAAmBwF,MAAM,uBAAsB,UAC5DqJ,EACC,sBAAM7O,UAAU,yBAAwB,SACtC,qBAAK3T,MAAO,CAAEmjB,QAAS,SAAW9iB,MAAM,6BAA6BR,MAAM,KAAKC,OAAO,KAAKM,QAAQ,aAAaE,OAAO,UAAS,SAC/H,mBAAGC,KAAK,OAAOC,SAAS,UAAS,SAC/B,oBAAG4iB,UAAU,iBAAiB3iB,YAAY,IAAG,UAC3C,wBAAQ4iB,cAAc,KAAK3iB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC7C,sBAAM0iB,EAAE,8BAA6B,SACnC,kCAAkBziB,cAAc,YAAYsD,KAAK,SAASof,KAAK,UAAU3K,GAAG,YAAY7X,IAAI,KAAKK,YAAY,0BAOvH,sBAAMuS,UAAU,yBAAyBkC,QAAS,kBAAM4M,GAAc,EAAK,EAAC,SAC1E,cAAC,WAAO,CACNtJ,MAAM,4BACNlZ,SAAS,QACTqc,OAAO,EACPC,SAAU,EACVC,QAAS,GACTC,KAAK,QAAO,SAEZ,qBAAKzc,MAAO,CAAEmjB,QAAS,SAAW9iB,MAAM,6BAA6BuR,QAAQ,MAAMxR,QAAQ,cAAcojB,iBAAiB,kBAAkB3jB,MAAM,KAAKC,OAAO,KAAI,SAChK,4BACE,sBAAMS,KAAK,UAAU+iB,EAAE,8TAMhCd,GACC,qBAAK7O,UAAU,yBAAyBiC,IAAK2M,EAAYviB,MAAO,CAAEF,OAAQ,IAAKojB,QAAS,IAAKrjB,MAAO,KAAM,SACxG,cAAC,GAAgB,CAAC8M,KAAMA,QAKlC,GE6IewJ,I,OAvLwB,SAAH,GAG7B,IAFLxJ,EAAI,EAAJA,KACAsU,EAAY,EAAZA,aAEQtJ,EAAiBD,KAAjBC,aACFhG,EAASkB,KACT8O,EAAeC,mBAAQ,kBAAMjQ,EAAOG,SAAS+P,qBAAqBlV,EAAK,GAAE,CAACA,IAC1EmV,EAAcF,mBAAQ,kBAAMjQ,EAAOE,MAAMkQ,WAAWpV,EAAK,GAAE,CAACA,IAC5DqD,EAAmBrD,EAAKqD,kBAAoB,YAElD,OACE,qBAAK2D,UAAU,oBAAmB,SAChC,sBAAKA,UAAU,SAAQ,UACrB,sBAAKA,UAAU,iBAAgB,UAC7B,sBAAKA,UAAU,yBAAwB,UACrC,sBAAMA,UAAU,eAAc,SAC3BhH,EAAK+U,MACJ,cAAC,GAAQ,CAACvd,KAAMsT,GAAatB,KAAMjI,KAAMvB,EAAK+U,KAAM7hB,MAAO,OAG/D,sBAAK8T,UAAU,uBAAsB,UACnC,qBAAIA,UAAU,eAAc,UAC1B,cAAC,KAAI,CAACiF,GAAIzE,GAAUgC,KAAKkB,QAAQ,QAAS1K,EAAKjJ,KAAKkb,YAAajL,UAAU,4BAA2B,SACnGhH,EAAKuB,OAER,cAAC,GAAc,CAACvB,KAAMA,OAExB,qBACEgH,UAAU,iBACV3T,MAAO,CAAED,MAAM,oBAAD,OAAsBsc,oBAAU1P,EAAKC,QAAO,MAAM,UAE/DD,EAAKC,OAAM,IAAGD,EAAKxI,cAI1B,sBAAKwP,UAAU,qBAAoB,UACjC,sBAAMA,UAAU,2BAA0B,SAsCpD,SAAsB3D,GAEpB,GAAI2H,EACF,OACE,cAAC,GAAK,CACJpD,MAAOvE,EACPjQ,MAAK,4BAAuBsc,oBAAUrM,GAAiB,OAK7D,MAAyB,cAArBA,EAEA,cAAC,WAAO,CACNmJ,MAAOnJ,EACP/P,SAAS,SACTqc,OAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,KAAK,QAAO,SAEX,CAAC/a,EAAe8G,QAAS9G,EAAeuH,UAAWvH,EAAeyI,QAASzI,EAAegI,QAAQhL,KAAI,SAAAge,GAAS,OAC9G,cAAC,GAAQ,CAEPvY,KAAMsT,GAAaiC,aACnBxL,KAAMwO,EAAUtL,cAChBtR,OAAQ,IAAG,eAHE6M,EAAKjJ,KAAI,sBAAcgZ,EAAUtL,eAI9C,MAMN,cAAC,WAAO,CACN+H,MAAOnJ,EACP/P,SAAS,SACTqc,OAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,KAAK,QAAO,SAEZ,cAAC,GAAQ,CACPtY,KAAMsT,GAAaiC,aACnBxL,KAAM8B,EAAiBoB,cACvBtR,OAAQ,MAKlB,CAtFa6c,CAAa3M,KAEhB,yCACQrD,EAAKyD,kBAIjB,sBAAKuD,UAAU,kBAAiB,UAC7BhH,EAAKwB,aACJ,qBAAKwF,UAAU,sBAAqB,SACjChH,EAAKwB,cAGTwT,GACC,sBAAKhO,UAAU,mBAAkB,UA0E3C,WAA+B,IAAD,IAC5B,OAAOgO,IAAyC,QAAzB,EAAAA,EAAa3U,oBAAY,aAAzB,EAA2BoG,QAAS,GACzD,oBAAIO,UAAU,yBAAwB,SACV,QADU,EACnCgO,EAAa3U,oBAAY,aAAzB,EAA2BtO,KAAI,SAAC+N,EAASsJ,GAAK,OAC7C,cAAC,GAAc,CAEbpJ,KAAMA,EACNF,QAASA,GAAQ,UAFTE,EAAKjJ,KAAI,kBAAUqS,GAG3B,KAIV,CArFaiM,GACD,sBAAKrO,UAAU,mCAAkC,UAsF7D,WAAgC,IAAD,EACvBwK,EAAQxR,EAAKD,WAAa9K,EAAa0E,IAEvC2b,EAAiB,CAAC,iBAAkB,mBAAoB,yBAE9D,OAAON,GACL,oBAAIhO,UAAU,0BAAyB,SACV,QADU,EACpCgO,EAAa7U,qBAAa,aAA1B,EAA4BpO,KAAI,SAAC+N,EAASsJ,GAAK,OAC9C,eAAC,WAAQ,WACNoI,GAAS,sBAAMxK,UAAU,gCAA+B,SAAEsO,EAAelM,KAC1E,cAAC,GAAc,CACbpJ,KAAMA,EAENF,QAASA,GAAQ,UADTE,EAAKjJ,KAAI,kBAAUqS,MAE3B,aANiBpJ,EAAKjJ,KAAI,kBAAUqS,GAO7B,KAInB,CAxGemM,GA0Gf,WAAgC,IAAD,EAC7B,OAAOP,GACL,qBAAIhO,UAAU,0BAAyB,UACX,QADW,EACpCgO,EAAa9U,oBAAY,aAAzB,EAA2BnO,KAAI,SAACyjB,EAAMpM,GACrC,QAASoM,EAAK/c,uBAAyB+c,EAAK/c,sBAAsBnB,SAAS0I,EAAKD,YAC9E,cAAC,GAAW,CAEVC,KAAMA,EACNkU,YAAasB,GAAK,UAFVxV,EAAKjJ,KAAI,kBAAUqS,GAKjC,IACChH,EAAwC9K,SAAS0I,EAAKxI,OACtDwI,EAAKC,SAAWjL,EAAWoD,UAC1B,qBAAI4O,UAAU,kCAAiC,UAC7C,oBAAIA,UAAU,yCAAwC,iBAAS,wBAAqB,oBAAI3T,MAAO,CAAED,MAAO,8BAA+B,mBAAW,WAAQ,oBAAIC,MAAO,CAAED,MAAO,6BAA8B,uBAKtN,CA7HeqiB,SAINzV,EAAK0V,QACJ,qBAAK1O,UAAU,iBAAgB,SAC5BhH,EAAK0V,YAIXP,GACC,qBAAKnO,UAAU,cAAa,SAC1B,cAAC,GAAO,CAACjE,IAAKoS,EAAab,aAAcA,UAkHrD,GC1JewC,I,OAxCyB,WACtC,IAAQ/f,EAASggB,eAAThgB,KAEFiJ,EADSkG,KACKhB,MAAM7D,KAAK0Q,SAAShb,IAClC0Z,EAAMlE,GAAO,CACjBC,MAAOxM,EAAOA,EAAKuB,KAAO,iBAC1BC,YAAaxB,EAAI,yCAAqCA,EAAKuB,MAAS,mBAGtE,OACE,qCACE,cAACkP,EAAG,IACJ,qBAAKzJ,UAAU,SAAQ,SACpBhH,EACC,qCACE,qBAAKgH,UAAU,iBAAgB,SAC7B,eAAC,KAAI,CAACiF,GAAIzE,GAAUtC,MAAM,UACxB,cAAC,GAAI,CACH8B,UAAU,sBACV9T,MAAO,EACPC,OAAQ,GACRoO,KAAMuF,GAASkQ,kBACf,sBAGN,sBAAKhQ,UAAU,oBAAmB,UAChC,cAAC,GAAI,CAAChH,KAAMA,EAAMsU,cAAc,IAChC,cAAC,GAAY,CAACrS,SAAUjC,EAAKxI,aAIjC,qBAAKwP,UAAU,mBAAkB,gCAO3C,GCzCeiQ,GAN4B,WACzC,OACE,cAAC,GAAY,GAEjB,EC6Ge7J,I,OArGuB,WAAO,IAAD,IAClCpC,EAAiBD,KAAjBC,aACFhG,EAASkB,KACf,EAA8B2D,GAAyBxK,EAAY6F,OAAM,mBAAlEzO,EAAO,KAAE6U,EAAU,KAE1B,EAAuEtG,EAA/DE,MAAS5C,EAAiB,EAAjBA,kBAAmBtB,EAAe,EAAfA,gBAAiBR,EAAW,EAAXA,YAC/CoQ,EAAgC,QAApB,EAAIna,EAAQsJ,gBAAQ,QAAIiB,EACpCqM,EAAwB,QAAhB,EAAI5W,EAAQe,YAAI,QAAIgJ,EAElC,EAAgDwH,mBAAuB4I,GAAa,mBAA7EC,EAAgB,KAAEC,EAAmB,KAC5C,EAAwC9I,mBAAmBqF,GAAS,mBAA7DC,EAAY,KAAEC,EAAe,KACpC,EAAgDvF,oBAAS,GAAM,mBAAxDuD,EAAgB,KAAEC,EAAmB,KAE5C,OAAIR,EAEA,cAAC,KAAM,CACLU,KAAMH,EACNiC,cAAe,kBAAMhC,GAAqBD,EAAiB,EAC3DI,QAAS,kBAAMH,GAAoB,EAAM,EACzCxE,UAAS,gDAA2C6J,EAAiBpM,eACrEvR,MAAM,OACN2Y,UAAW,OAAO,SAEjB4B,MAIEA,IAGT,SAASyJ,EAAgBnX,EAAwBqS,GAC/C,OACE,oBAAIpL,UAAU,8BAA6B,SACxCoL,EAAUrgB,KAAI,SAAAkQ,GAAQ,OACrB,oBAEE+E,UAAS,qCAAgCsG,IAAiBrL,EAAW,WAAa,IAAK,SAEvF,sBACE+E,UAAU,iCACVkC,QAAS,kBAsDrB,SAA0BnJ,EAAwBkC,GAChDsL,EAAgBtL,GAChBqJ,EAAW,CAAEvL,WAAUvI,KAAMyK,IAC7BuJ,GAAoB,EACtB,CA1D2B2L,CAAiBpX,EAAUkC,EAAS,EAAC,SAEnDA,IAAa/M,EAAS4F,KAAO,OAASmH,KAClC,oBARWA,GASf,KAIb,CAEA,SAASwL,IACP,OACE,oBAAIzG,UAAU,mBAAkB,SAC7BjV,cAAIuQ,GAAoB,SAAC8P,EAAWrS,GACnC,IAAM2N,EAAamD,IAAqB9Q,EACxC,OACE,qBAEEiH,UAAS,qCAAgC0G,EAAa,WAAa,IAAK,UAExE,uBACE1G,UAAU,iCACVkC,QAAS,kBAwBvB,SAA0BnJ,GACxB,IAAMqX,EAAkB9U,EAAkBvC,GAAU,GAEpD+Q,EAAoB/Q,GACpBwN,EAAgB6J,GAChB9L,EAAW,CAAEvL,WAAUvI,KAAM4f,GAC/B,CA9B6BC,CAAiBtX,EAAS,EAAC,UAE1C,cAAC,GAAI,CACHiH,UAAU,uCACV9T,MAAOwa,EAAa,GAAK,EACzBva,OAAQua,EAAa,EAAI,GACzBnM,KAAMmM,EAAa5G,GAASqC,cAAgBrC,GAASyK,iBAEtDxR,EACD,cAAC,GAAQ,CACPiH,UAAU,sCACVxP,KAAMsT,GAAa7V,aACnBsM,KAAMxB,EACN7M,MAAO,QAGVgkB,EAAgBnX,EAAUqS,KAAU,wBArBfrS,GAwB5B,KAGN,CAeF,GChEeuX,I,OAtCgD,SAAH,GAOrD,IANLtQ,EAAS,EAATA,UACAuQ,EAAQ,EAARA,SACA3P,EAAK,EAALA,MACAO,EAAK,EAALA,MACA/U,EAAK,EAALA,MACA2U,EAAQ,EAARA,SAEA,EAAoCC,mBAASuP,GAAS,mBAA/C7J,EAAU,KAAE8J,EAAa,KAC1BC,EAAe/J,EAAa,CAChCta,MAAOA,EACPskB,WAAW,iBAAD,OAAmBtkB,IAC3B,CAAC,EACCukB,EAAejK,EAAa,CAChC8B,gBAAiBpc,EACjBwkB,UAAU,YAAD,OAAcxkB,EAAK,uBAAeA,IACzC,CAAC,EAEL,OACE,qBAAK4T,UAAS,2BAAsBA,GAAwB,IAAK,SAC/D,sBAEEA,UAAS,kCAA6B0G,EAAa,WAAa,IAChExE,QASN,WACEsO,GAAe9J,GACf3F,GAAU2F,EACZ,EAXMra,MAAOokB,EAAa,UAEnB7P,EACD,sBAAMZ,UAAU,gCAAgC3T,MAAOskB,MAAqB,+BAN/CxP,KAerC,GCae0P,I,OA3C0C,SAAH,GAK/C,IAJL7Q,EAAS,EAATA,UACA8Q,EAAa,EAAbA,cACAhQ,EAAO,EAAPA,QACAC,EAAQ,EAARA,SAEA,EAA8CC,mBAAmB8P,GAAc,mBAAxEC,EAAe,KAAEC,EAAkB,KAE1C,OACE,qBAAKhR,UAAS,wBAAmBA,GAAwB,IAAK,SAC3Dc,EAAQ/V,KAAI,SAACkmB,GACZ,IAAMvK,EAAaqK,EAAgBzgB,SAAS2gB,EAAO9P,OAC7CsP,EAAe/J,EAAa,CAChCta,MAAO6kB,EAAO7kB,MACdskB,WAAW,iBAAD,OAAmBO,EAAO7kB,QAClC,CAAC,EACCukB,EAAejK,EAAa,CAChC8B,gBAAiByI,EAAO7kB,MACxBwkB,UAAU,YAAD,OAAcK,EAAO7kB,MAAK,uBAAe6kB,EAAO7kB,QACvD,CAAC,EAEL,OACE,sBAEE4T,UAAS,gCAA2B0G,EAAa,WAAa,IAC9DxE,QAAS,kBAWnB,SAAuB+O,GACrB,IAAMC,EAAqBC,cAAIJ,EAAiB,CAACE,EAAO9P,QACxD6P,EAAmBE,GACnBnQ,EAASmQ,EACX,CAfyBE,CAAcH,EAAO,EACpC5kB,MAAOokB,EAAa,UAEnBQ,EAAOrQ,MACR,sBAAMZ,UAAU,qCAAqC3T,MAAOskB,MAAqB,6BANtDM,EAAO9P,OASxC,KASN,GCoBe8B,I,OA/DoB,WACjC,MAA8BJ,GAAyBxK,EAAY6F,OAAM,mBAAlEzO,EAAO,KAAE6U,EAAU,KAEpB+M,EAAuCzjB,EAAcI,GAAYjD,KAAI,SAAAkO,GAAM,MAAK,CACpF2H,MAAO3H,EACPkI,MAAOlI,EACP7M,MAAM,oBAAD,OAAsBsc,oBAAUzP,GAAO,KAC7C,IAEKqY,EAAe1jB,EAAcG,GAAgBhD,KAAI,SAAAge,GAAS,MAAK,CACnEnI,MAAOmI,IAAchb,EAAeiG,IAAM,cAAgB+U,EAC1D5H,MAAO4H,EACR,IAED,OACE,sBAAK/I,UAAU,gBAAe,UAC5B,cAAC,GAAM,CACLA,UAAU,wBACV6G,YAAY,8CACZ1F,MAAO1R,EAAQO,QAAU,GACzB+Q,SAsCN,SAAwB/Q,GACtBsU,EAAW,CAAEtU,UACf,IAtCI,cAAC,GAAW,CACVgQ,UAAU,8BACV8Q,cAAerhB,EAAQ6M,SAAW7M,EAAQ6M,SAAWpB,EACrD4F,QAASuQ,EACTtQ,SAoBN,SAA0BzE,GACxBgI,EAAW,CAAEhI,YACf,IApBI,cAAC,GAAc,CACb0D,UAAU,6BACVuQ,SAAU9gB,EAAQ8M,UAAW,EAC7BqE,MAAM,YACNO,MAAM,MACN/U,MAAK,wBACL2U,SAgBN,SAAqB2F,GACnBpC,EAAW,CAAE/H,QAASmK,GACxB,IAhBI,cAAC,GAAQ,CACP1G,UAAU,+BACVY,MAAM,GACNC,aAAcpR,EAAQ2M,gBAAkBrO,EAAeiG,IACvD8M,QAASwQ,EACTvQ,SAaN,SAAuB3E,GACrBkI,EAAW,CAAElI,kBACf,MAKF,GCpDemV,I,OAhB8B,SAAH,GAInC,IAHLC,EAAY,EAAZA,aACA5Q,EAAK,EAALA,MACAG,EAAQ,EAARA,SAEA,OACE,uBAAMf,UAAU,eAAekC,QAASnB,EAAS,UAC9CH,EACD,uBAAMZ,UAAU,qBAAoB,UAClC,sBAAMA,UAAS,gCAA4C,QAAjBwR,EAAyB,WAAa,MAChF,sBAAMxR,UAAS,kCAA8C,SAAjBwR,EAA0B,WAAa,WAI3F,GC4BenN,I,OAAAA,aA1CmB,WAChC,MAA8BxB,GAAyBxK,EAAY6F,OAAM,mBAAlEzO,EAAO,KAAE6U,EAAU,KACtBmN,EAAuC,KACvCC,EAAwC,KAU5C,OARIjiB,EAAQ+M,SAAW,CAACpE,EAAUsE,QAAStE,EAAUwE,UAAUtM,SAASb,EAAQ+M,WAC9EiV,EAAgBhiB,EAAQ+M,UAAYpE,EAAUsE,QAAU,MAAQ,QAG9DjN,EAAQ+M,SAAW,CAACpE,EAAUyE,SAAUzE,EAAU0E,WAAWxM,SAASb,EAAQ+M,WAChFkV,EAAiBjiB,EAAQ+M,UAAYpE,EAAUyE,SAAW,MAAQ,QAIlE,sBAAKmD,UAAU,WAAU,UACvB,sBAAKA,UAAU,kBAAiB,UAC9B,oBAAIA,UAAU,kBAAiB,SAC7B,cAAC,GAAU,CACTY,MAAM,OACN4Q,aAAcC,EACd1Q,SAAU,kBAAMvE,EAAQ/M,EAAQ+M,UAAYpE,EAAUsE,QAAUtE,EAAUwE,SAAWxE,EAAUsE,QAAQ,MAG3G,oBAAKsD,UAAU,sBAAqB,SAClC,cAAC,GAAU,CACTY,MAAM,OACN4Q,aAAcE,EACd3Q,SAAU,kBAAMvE,EAAQ/M,EAAQ+M,UAAYpE,EAAUyE,SAAWzE,EAAU0E,UAAY1E,EAAUyE,SAAS,SAIhH,qBAAKmD,UAAU,qBAAoB,SACjC,oBAAIA,UAAU,kBAAiB,oCAKrC,SAASxD,EAAQA,GACf8H,EAAW,CAAE9H,WACf,CACF,KCPe8M,I,OA7BwB,SAAH,GAAmB,IAAD,EAAZ5N,EAAK,EAALA,MAClCiW,EAAsB,QAAX,EAAGjW,EAAM,UAAE,aAAR,EAAUlL,KAC9B,EAA2C6W,GAAiC3L,EAAO,IAA3EgM,EAAa,EAAbA,cAAeG,EAAc,EAAdA,eAEvB,OACE,qBAAK7H,UAAU,cAAa,SACzBtE,EAAM+D,OAAS,EACd,qCACE,cAAC,GAAM,IACP,sBAAKO,UAAU,yBAAwB,UACrC,qBAAKA,UAAU,qBAAoB,SACjC,cAAC6H,EAAc,UACZH,EAAc3c,KAAI,SAAAiO,GAAI,OACrB,cAAC,GAAI,CAA2BA,KAAMA,GAAK,eAAxBA,EAAKjJ,MAAsB,QAIpD,cAAC,GAAY,CAACkL,SAAU0W,UAI5B,qBAAK3R,UAAU,sBAAqB,yDAM5C,GCQeqE,I,OAAAA,aA/B0B,WACvC,IAAQrB,EAAiB5D,GAAkBkD,GAAUW,SAA7CD,aAGFtH,EAFSwD,KAiBChB,MAAMqL,IAAI,CACtBvZ,OAAQgT,EAAatH,MAAM1L,OAC3B+I,SAAUiK,EAAatH,MAAM3C,SAC7BvI,KAAMwS,EAAatH,MAAMlL,KACzB4L,eAAgB4G,EAAatH,MAAMU,eACnCE,SAAU0G,EAAatH,MAAMY,SAC7BE,QAASwG,EAAatH,MAAMc,QAC5BD,QAASyG,EAAatH,MAAMa,UApBhC,OACE,qCACE,cAAC,GAAO,IACR,sBAAKyD,UAAU,mBAAkB,UAC/B,cAAC,GAAU,IACX,qBAAKA,UAAU,gBAAe,SAC5B,cAAC,GAAI,CAACtE,MAAOA,WAiBvB,KC5BekW,GAd6B,WAC1C,IAAMnI,EAAMlE,GAAO,CACjBC,MAAO,iBACPhL,YAAa,2DAGf,OACE,qCACE,cAACiP,EAAG,IACJ,cAAC,GAAa,MAGpB,E,oBCDMoI,I,OAAwB,6BACxBC,GAA8B,gCAC9BC,GAAwB,2DACxBC,GAAwB,qCACxBC,GAAuB,WAMvBC,GAAiBtkB,EAAcW,GAsZtBkU,GAxYyB,SAAH,GAE9B,IADLpS,EAAK,EAALA,MAGM8hB,EAAQ,UAAM9hB,EAAMN,KAAI,YAAIM,EAAMmN,MAAMC,eACxCO,EAASkB,KAEf,OACE,sBAAKc,UAAU,UAAS,UACtB,sBAAKA,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,0BAAyB,UACtC,sBAAMA,UAAU,gBAAe,SAC5B3P,EAAM0d,MACL,cAAC,GAAQ,CACPvd,KAAMH,EAAMwN,OAASpP,EAAU8I,QAAUuM,GAAagC,aAAehC,GAAa+B,WAClFtL,KAAMlK,EAAM0d,KACZ7hB,MAAO,OAIb,sBAAK8T,UAAU,wBAAuB,UACpC,oBAAIA,UAAU,uBAAsB,SACjCoS,EAAgB,CACfriB,KAAMM,EAAMN,KACZ0V,QAASpV,EAAMkK,KACfwO,UAAW1Y,EAAMmN,MACjBwC,UAAW,iCAGf,qBAAIA,UAAU,2BAA0B,UACtC,wBAAQ3T,MAAO,CAAED,MAAM,2BAAD,OAA6Bsc,oBAAUrY,EAAMqQ,SAAQ,MAAM,SAC9ErQ,EAAMqQ,UACA,YAET,sBAAMV,UAAU,uBAAsB,SACnC3P,EAAMG,KAAOH,EAAMG,KAAOH,EAAMwN,OAElCxN,EAAM0N,QACL,iDAEE,sBACEiC,UAAU,yBACV3T,MAAO,CAAED,MAAM,2BAAD,OAA6Bsc,oBAAUrY,EAAMqQ,SAAQ,MAAM,SAExErQ,EAAM0N,qBAOnB,qBAAKiC,UAAU,uBAAsB,SACnC,uBAAMA,UAAU,gCAA+B,UAC7C,sBAAMA,UAAU,6BAA4B,SAC1C,cAAC,WAAO,CACNwF,MAAOnV,EAAMmN,MACblR,SAAS,SACTqc,OAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,KAAK,QAAO,SAEZ,cAAC,GAAQ,CACPtY,KAAMsT,GAAaiC,aACnBxL,KAAMlK,EAAMmN,MAAMC,cAClBtR,OAAQ,SAId,sBAAM6T,UAAU,4BAA2B,SACzC,cAAC,WAAO,CACNwF,MAAOnV,EAAMwN,KACbvR,SAAS,SACTqc,OAAO,EACPC,SAAU,GACVC,OAAQ,EACRC,KAAK,QAAO,SAEZ,cAAC,GAAQ,CACPtY,KAAMsT,GAAarV,UACnB8L,KAAMlK,EAAMwN,KAAKJ,cAAciG,QAAQ,MAAO,IAC9CvX,OAAQ,iBAOpB,sBAAK6T,UAAU,mBAAkB,UAC/B,qBAAKA,UAAU,wBAAuB,SACpC,qBAAKA,UAAU,uBAAsB,SAuG7C,WACE,IAAI2K,EAAa,KACb1B,EAAqB,EAmJzB,OAjJA0B,EAAazB,KAAe7Y,EAAMmK,YAAaqX,IAAuB,SAAC1I,EAAOC,EAAGP,GAAY,IAAD,EAC1FI,IACA,IAAM+B,EAAY7B,EAAMzF,QAAQ,MAAO,IACjC7I,EAA6C,QAAtC,EAAGmD,EAAOI,OAAOiU,WAAWrH,UAAU,aAAnC,EAAqCjb,KAErD,OAAI8K,EAEA,cAAC,KAAI,CACHoK,GAAIzE,GAAUiC,MAAMiB,QAAQ,QAAS7I,EAAQoQ,YAE7CjL,UAAU,mCAAkC,SAE3CgL,GAAS,cAHEmH,EAAQ,kBAAUtX,EAAO,YAAIuO,EAAC,YAAIP,IAOzCqJ,GAAe5hB,SAAS0a,GAG/B,aADA,CACC,KAAI,CACH/F,GAAI,CAAEpG,SAAU2B,GAAUpC,OAAQpO,OAAO,iBAAD,OAAmBgb,IAE3DhL,UAAU,0CAAyC,SAElDgL,GAAS,cAHEmH,EAAQ,kBAAUtX,EAAO,YAAIuO,EAAC,YAAIP,IAOzCra,EAAUwc,GAGjB,aADA,CACC,KAAI,CACH/F,GAAI,CAAEpG,SAAU2B,GAAUpC,OAAQpO,OAAO,gBAAD,OAAkBgb,IAE1DhL,UAAU,wCAAuC,SAEhDgL,GAAS,cAHEmH,EAAQ,kBAAUtX,EAAO,YAAIuO,EAAC,YAAIP,IAQhD,oBAEE7I,UAAU,2CAA0C,SAEnDgL,GAAS,cAHEmH,EAAQ,kBAAUtX,EAAO,YAAIuO,EAAC,YAAIP,GAOtD,IAEA8B,EAAazB,KAAeyB,EAAYmH,IAA6B,SAAC3I,EAAOC,EAAGP,GAC9EI,IACA,IAAMqJ,EAAenJ,EAAM1L,cAE3B,OACE,sBAEEpR,MAAO,CAAED,MAAM,2BAAD,OAA6BkmB,EAAY,MACvDtS,UAAU,wCAAuC,SAEhDmJ,GAAK,oBAJYgJ,EAAQ,eAAOG,EAAY,YAAIlJ,EAAC,YAAIP,EAAM,YAAII,GAOtE,IAEA0B,EAAazB,KAAeyB,EAAYoH,IAAuB,SAAC5I,EAAOC,EAAGP,GACxEI,IACA,IAAMsJ,EAAYpJ,EAAM1L,cAClB3P,EAAG,oBAAgBqkB,EAAQ,iBAASI,EAAS,YAAInJ,EAAC,YAAIP,EAAM,YAAII,GAGhE5b,EAAiCgD,EAAMkiB,IAAc,GAU3D,MAPkB,WAAdA,GAA4C,IAAlBllB,EAAOoS,OACnCpS,EAAOsM,KAjSQ,GAkSY,IAAlBtM,EAAOoS,QAEhBpS,EAAOsM,KArSe,IAyStB,sBAEEqG,UAAU,oCAAmC,SAE5C3S,EAAOoS,OAAS,EAAIyL,EAAY7d,GAAUmlB,EAAanlB,EAAQS,IAH3DA,EAMX,IAEA6c,EAAazB,KAAeyB,EAAY,aAAU,SAACxB,EAAOC,EAAGP,GAG3D,OAFAI,IAGE,yBAEEjJ,UAAU,mCAAkC,UAE5C,uBAAK,6BAHamS,EAAQ,gBAAQ/I,EAAC,YAAIP,EAAM,YAAII,GAMvD,IAEA0B,EAAazB,KAAeyB,EAAYqH,IAAuB,SAAC7I,EAAOC,EAAGP,GAGxE,OAFAI,IAGE,wBAEEjJ,UAAU,yCAAwC,SAEjDmJ,GAAK,oBAHYgJ,EAAQ,wBAAgB/I,EAAC,YAAIP,EAAM,YAAII,GAM/D,IAEA0B,EAAazB,KAAeyB,EAAYsH,IAAsB,SAAC9I,EAAOC,EAAGP,GAIvE,OAHAI,IAIE,oBAEEjJ,UAAU,yCAAwC,SAEjDmJ,GAAK,oBAHYgJ,EAAQ,wBAAgB/I,EAAC,YAAIP,EAAM,YAAII,GAM/D,IAEA0B,EAAazB,KAAeyB,EAAY,YAAY,SAACxB,EAAOC,EAAGP,GAG7D,OAFAI,IAGE,wBAEEjJ,UAAU,sCAAqC,8DAD7BmS,EAAQ,qBAAa/I,EAAC,YAAIP,EAAM,YAAII,GAM5D,GAGF,CA5PWI,OAGL,qBAAKrJ,UAAU,uBAAsB,SACnC,qBAAIA,UAAU,wBAAuB,UAClC3P,EAAMoiB,iBAAiBhT,OAAS,GAC/B,+BACE,sBAAMO,UAAU,8BAA6B,0BAG7C,sBAAMA,UAAU,2CAA0C,SAwD/D7F,kBACL9J,EAAMoiB,iBAAiB1nB,KAAqB,SAAC8P,GAC3C,IAAM6X,EAAW1U,EAAOI,OAAO/D,KAAKQ,EAAS,CAAE2C,MAAOnN,EAAMmN,QAC5D,OAAOkV,EACL,sBACE1S,UAAU,uBAAsB,SAGhC,cAAC,WAAO,CACNwF,MAAOkN,EAASnY,KAChBjO,SAAS,SACTqc,OAAO,EACPC,SAAU,GACVC,OAAQ,EACRC,KAAK,QAAO,SAEXsJ,EAAgB,CACfriB,KAAM2iB,EAAS3iB,KACfgZ,UAAW2J,EAASlV,MACpBiI,QACE,cAAC,GAAQ,CACPjV,KAAMkiB,EAAS7U,OAASpP,EAAU8I,QAAUuM,GAAagC,aAAehC,GAAa+B,WACrFtL,KAAMmY,EAAS3E,MAAQ,UACvB7hB,MAAO,UAKL,qBAtBSimB,EAAQ,YAAItX,IAwB/B,IACN,KACApB,QAAO,SAAC0T,EAAMC,GAAI,MAAK,CAACD,EAAM,OAAQC,EAAK,SAnFrC,+BACE,sBAAMpN,UAAU,8BAA6B,sBAG7C,sBAAMA,UAAU,sCAAqC,SAClD3P,EAAMsiB,aAGVtiB,EAAMuiB,UACL,+BACE,sBAAM5S,UAAU,8BAA6B,sBAG7C,sBAAMA,UAAU,uCAAsC,SACnD3P,EAAMuiB,cAIZviB,EAAMwiB,SACL,+BACE,sBAAM7S,UAAU,8BAA6B,uBAG7C,sBAAMA,UAAU,mCAAkC,SAC/C3P,EAAMwiB,wBAWvB,SAAST,EAAgB,GAA+D,IAA7DriB,EAAI,EAAJA,KAAM0V,EAAO,EAAPA,QAASsD,EAAS,EAATA,UAAW/I,EAAS,EAATA,UAAWlS,EAAG,EAAHA,IAC9D,OACE,cAAC,KAAI,CACHmX,GAAI,CACFpG,SAAU2B,GAAUiC,MAAMiB,QAAQ,QAAS3T,EAAKkb,YAChDjb,OAAQ+Y,EAAS,+BAA2BA,GAAc,IAE5D/I,UAAWA,EAAU,SAGpByF,GAFI3X,EAKX,CA+LA,SAAS0kB,EAAanlB,EAAgCS,GACpD,IAAMglB,EAAazlB,EAAOtC,KAAqB,SAACoW,EAAOiB,GACrD,IAAM+E,EAAM0F,mBAAS1L,GAAS4J,SAAS5J,GAASA,EAChD,OACE,oBAAqCnB,UAAU,mCAAkC,SAC9EmH,GAAG,UADMrZ,EAAG,YAAIqT,EAAK,YAAIiB,GAIhC,IAEA,OAA0B,IAAtB0Q,EAAWrT,OACNqT,EAGL,yCAEGA,EAAWrZ,QAAO,SAAC0T,EAAMC,GAAI,MAAK,CAACD,EAAM,MAAOC,EAAK,IAAC,MAM/D,CAEA,SAASlC,EAAY7d,GACnB,IAAMoN,EAAMoS,mBAASxf,EAAO,IAAM0d,SAAS1d,EAAO,IAAMA,EAAO,GAC3DsN,EAAMtN,EAAOA,EAAOoS,OAAS,GAGjC,OAAIhF,KAFJE,EAAMkS,mBAASlS,GAAOoQ,SAASpQ,GAAOA,GAIlC,oBAAIqF,UAAU,4CAA2C,SAAErF,IAI3D,yCAEE,oBAAIqF,UAAU,4CAA2C,SAAEvF,IAAS,IAEpE,oBAAIuF,UAAU,4CAA2C,SAAErF,IAAS,MAK5E,CACF,ECnXeoY,I,OA3C0B,WACvC,IAAQhjB,EAASggB,eAAThgB,KACFqT,EAAWtE,eACXkU,EAAcC,KAAGC,MAAM9P,EAASpT,QAChCmjB,EAAc7Z,kBAAQ0Z,QAA8EzU,EAA/D,CAAEf,MAAOwV,EAAYI,qBAG1D/iB,EADS6O,KACMd,OAAO/D,KAAK0Q,SAAShb,GAAOojB,GAC3C1J,EAAMlE,GAAO,CACjBC,MAAOnV,EAAQA,EAAMkK,KAAO,kBAC5BC,YAAanK,EAAK,yCAAqCA,EAAMkK,MAAS,oBAGxE,OACE,qCACE,cAACkP,EAAG,IACJ,qBAAKzJ,UAAU,UAAS,SACrB3P,EACC,qCACE,qBAAK2P,UAAU,kBAAiB,SAC9B,eAAC,KAAI,CAACiF,GAAIzE,GAAUpC,OAAO,UACzB,cAAC,GAAI,CACH4B,UAAU,uBACV9T,MAAO,EACPC,OAAQ,GACRoO,KAAMuF,GAASkQ,kBACf,uBAGN,qBAAKhQ,UAAU,qBAAoB,SACjC,cAAC,GAAK,CAAC3P,MAAOA,SAIlB,qBAAK2P,UAAU,oBAAmB,iCAO5C,GC/CeqT,GAN6B,WAC1C,OACE,cAAC,GAAa,GAElB,ECiHejN,I,OAxGuB,WAAO,IAAD,IAClCpC,EAAiBD,KAAjBC,aACFhG,EAASkB,KACf,EAA8B2D,GAA0BxK,EAAY+F,QAAO,mBAApE3O,EAAO,KAAE6U,EAAU,KAE1B,EAAkEtG,EAA1DI,OAAUlB,EAAc,EAAdA,eAAgBU,EAAY,EAAZA,aAAcE,EAAW,EAAXA,YAC1CwV,EAAmC,QAA1B,EAAI7jB,EAAQ2M,sBAAc,QAAIwB,EACvC2V,EAAwB,QAAhB,EAAI9jB,EAAQoO,YAAI,QAAIC,EAElC,EAA0CkD,mBAAyBsS,GAAU,mBAAtEE,EAAa,KAAEC,EAAgB,KACtC,EAAwCzS,mBAAoBuS,GAAS,mBAA9DG,EAAY,KAAEC,EAAe,KACpC,EAAgD3S,oBAAS,GAAM,mBAAxDuD,EAAgB,KAAEC,EAAmB,KAE5C,OAAIR,EAEA,cAAC,KAAM,CACLU,KAAMH,EACNiC,cAAe,kBAAMhC,GAAqBD,EAAiB,EAC3DI,QAAS,kBAAMH,GAAoB,EAAM,EACzCxE,UAAS,2CAAsCwT,EAAc/V,eAC7DvR,MAAM,OACN2Y,UAAW,OAAO,SAEjB4B,MAIEA,IAGT,SAASmN,EAAiBxX,EAAgCyX,GACxD,OACE,oBAAI7T,UAAU,6BAA4B,SACvC6T,EAAW9oB,KAAI,SAAA+oB,GAAS,OACvB,oBAEE9T,UAAS,oCAA+B0T,IAAiBI,EAAY,WAAa,IAAK,SAEvF,sBACE9T,UAAU,gCACVkC,QAAS,kBAyDrB,SAA2B9F,EAAgC0X,GACzDH,EAAgBG,GAChBxP,EAAW,CAAElI,iBAAgByB,KAAMiW,IACnCtP,GAAoB,EACtB,CA7D2BuP,CAAkB3X,EAAgB0X,EAAU,EAAC,SAE3DA,KACI,qBARYA,GAShB,KAIb,CAEA,SAASrN,IACP,OACE,oBAAIzG,UAAU,iBAAgB,SAC3BjV,cAAImS,GAAiB,SAAC2W,EAAYzX,GACjC,IAAMsK,EAAa8M,IAAkBpX,EAErC,OAAKyX,EAGH,qBAEE7T,UAAS,gCAA2B0G,EAAa,WAAa,IAAK,UAEnE,uBACE1G,UAAU,4BACVkC,QAAS,kBAwBvB,SAAuB9F,GACrB,IAAM4X,EAAmBhW,EAAOI,OAAOT,oBAAoBvB,GAE3DqX,EAAiBrX,GACjBuX,EAAgBK,GAChB1P,EAAW,CAAElI,iBAAgByB,KAAMmW,GACrC,CA9B6BC,CAAc7X,EAAe,EAAC,UAE7C,cAAC,GAAI,CACH4D,UAAU,kCACV9T,MAAOwa,EAAa,GAAK,EACzBva,OAAQua,EAAa,EAAI,GACzBnM,KAAMmM,EAAa5G,GAASqC,cAAgBrC,GAASyK,iBAEtDnO,EACD,cAAC,GAAQ,CACP4D,UAAU,iCACVxP,KAAMsT,GAAakC,YACnBzL,KAAM6B,EAAeqB,cACrBvR,MAAO,QAGV0nB,EAAiBxX,EAAgByX,KAAW,sBArBzBzX,IAJE,IA4B5B,KAGN,CAeF,GCvDe6G,I,OApDoB,WACjC,MAA8BJ,GAA0BxK,EAAY+F,QAAO,mBAApE3O,EAAO,KAAE6U,EAAU,KACpB4P,EAAatmB,EAAcY,GAE3B2lB,EAAoCD,EAAWnpB,KAAI,SAAAyF,GAAI,MAAK,CAChEoQ,MAAOpQ,EACP2Q,MAAO3Q,EACPpE,MAAM,8BACP,IAEKgoB,EAAoB,CAAC,OAAM,oBAAKxmB,EAAcW,KAAcxD,KAAI,SAAAgT,GAAM,MAAK,CAC/E6C,MAAkB,QAAX7C,EAAmB,aAAeA,EACzCoD,MAAOpD,EACR,IAED,OACE,sBAAKiC,UAAU,iBAAgB,UAC7B,cAAC,GAAM,CACLA,UAAU,yBACV6G,YAAY,8CACZ1F,MAAO1R,EAAQO,QAAU,GACzB+Q,SA0BN,SAAwB/Q,GACtBsU,EAAW,CAAEtU,UACf,IA1BI,cAAC,GAAW,CACVgQ,UAAU,6BACV8Q,cAAerhB,EAAQZ,MAAQY,EAAQZ,MAAQqlB,EAC/CpT,QAASqT,EACTpT,SAYN,SAAuBlS,GACrByV,EAAW,CAAEzV,SACf,IAZI,cAAC,GAAQ,CACPmR,UAAU,iCACVY,MAAM,GACNC,aAAcpR,EAAQsO,QAAU,MAChC+C,QAASsT,EACTrT,SASN,SAAwBhD,GACtBuG,EAAW,CAAEvG,UACf,MAKF,GCxCeqJ,I,OAjBmB,WAEhC,OACE,qBAAKpH,UAAU,WAAU,SACvB,sBAAKA,UAAU,mBAAkB,UAC/B,oBAAIA,UAAU,kBAAiB,mBAG/B,oBAAKA,UAAU,2BAA0B,sBAOjD,GCoBesJ,I,OA3BwB,SAAH,GAAoB,IAAdpP,EAAM,EAANA,OACxC,EAA2CmN,GAAkCnN,EAAQ,IAA7EwN,EAAa,EAAbA,cAAeG,EAAc,EAAdA,eAEvB,OACE,qBAAK7H,UAAU,eAAc,SAC1B9F,EAAOuF,OAAS,EACf,qCACE,cAAC,GAAM,IACP,qBAAKO,UAAU,0BAAyB,SACtC,qBAAKA,UAAU,uBAAsB,SACnC,cAAC6H,EAAc,UACZH,EAAc3c,KAAI,SAAAsF,GAAK,OACtB,cAAC,GAAK,CAA4CA,MAAOA,GAAM,gBAA1CA,EAAMN,KAAI,YAAIM,EAAMmN,OAAyB,aAO5E,qBAAKwC,UAAU,wBAAuB,0DAM9C,GCSeqE,I,OAAAA,aA7B2B,WACxC,IAAQrB,EAAiB5D,GAAkBkD,GAAUW,SAA7CD,aAGF9I,EAFSgF,KAiBCd,OAAOmL,IAAI,CACvBvZ,OAAQgT,EAAa9I,OAAOlK,OAC5B6N,KAAMmF,EAAa9I,OAAO2D,KAC1BhP,MAAOmU,EAAa9I,OAAOrL,MAC3BuN,eAAgB4G,EAAa9I,OAAOkC,eACpC2B,OAAQiF,EAAa9I,OAAO6D,SAlBhC,OACE,qCACE,cAAC,GAAO,IACR,sBAAKiC,UAAU,oBAAmB,UAChC,cAAC,GAAU,IACX,qBAAKA,UAAU,iBAAgB,SAC7B,cAAC,GAAI,CAAC9F,OAAQA,WAexB,KC1BesP,GAdyB,WACtC,IAAMC,EAAMlE,GAAO,CACjBC,MAAO,kBACPhL,YAAa,+CAGf,OACE,qCACE,cAACiP,EAAG,IACJ,cAAC,GAAc,MAGrB,EC8DepF,gBAnDkB,WAC/B,IAAM1V,EAASuQ,KACP8D,EAAiB5D,GAAkBkD,GAAUW,SAA7CD,aACFE,EAAUmR,iBAAOC,gBACvB,EAAwCtT,mBAASrS,EAAOY,QAAO,mBAAxDglB,EAAY,KAAEC,EAAe,KAgBpC,OAdAzV,qBAAU,WAERyE,aAAQ,WACNgR,GAAgB,IACX7lB,EAAOY,QAAUyT,EAAayR,aAEjC9lB,EAAO6P,WAAWlT,MAAK,kBAAMkpB,GAAgB,EAAK,IAGlD7lB,EAAO+lB,YAAY1R,EAAayR,cAAcnpB,MAAK,kBAAM4jB,YAAW,kBAAMsF,GAAgB,EAAK,GAAE,IAAI,GAEzG,GACF,GAAG,IAGD,eAAC,KAAM,CAACtR,QAASA,EAAQtB,QAAQ,UAC/B,cAAC,GAAW,IACZ,cAAC,GAAM,UACL,cAAC,KAAM,UACL,cAAC,KAAK,CAACyB,KAAK,IAAG,SACXkR,EAGA,eAAC,KAAM,WACL,cAAC,KAAK,CAACI,OAAK,EAACtR,KAAM7C,GAAUtC,MAAO0W,UAAWhD,KAC/C,cAAC,KAAK,CAAC+C,OAAK,EAACtR,KAAM7C,GAAUgC,KAAMoS,UAAW3E,KAC9C,cAAC,KAAK,CAAC0E,OAAK,EAACtR,KAAM7C,GAAUrC,SAAUyW,UAAWpL,KAClD,cAAC,KAAK,CAACmL,OAAK,EAACtR,KAAM7C,GAAUpC,OAAQwW,UAAWC,KAChD,cAAC,KAAK,CAACF,OAAK,EAACtR,KAAM7C,GAAUiC,MAAOmS,UAAWvB,KAC/C,cAAC,KAAK,CAACsB,OAAK,EAACtR,KAAM7C,GAAUnC,UAAWuW,UAAWE,KACnD,cAAC,KAAK,CAACH,OAAK,EAACtR,KAAM7C,GAAUkC,WAAYkS,UAAWjL,KAEpD,cAAC,KAAK,UACJ,cAAC,KAAQ,CAAC1E,GAAIzE,GAAUtC,aAZ5B,cAAC,EAAM,CAAChS,MAAO,IAAKC,OAAQ,IAAKC,MAAM,wCAsBrD,I,wDCnEa2oB,IAAY,cAiBvB,aAAe,6MACb,IAAM7Q,EAAQ+O,KAAGC,MACf9P,SAASpT,QAGLglB,EAAc7P,GAAQA,GAAQ1F,OAAS,GAIvCwV,EAAe/Q,EAAMgB,OACvBC,GAAQ7U,SAAS4T,EAAMgB,OACrBhB,EAAMgB,MAER8P,EAEJlmB,KAAKomB,QAAU,CACbhQ,MAAO+P,GAGTnmB,KAAK4M,MAAQ,CACX1L,OAAQkU,EAAMiR,YACdpc,SAAUmL,EAAMkR,cAChB5kB,KAAM0T,EAAMmR,UACZjZ,eAAgB8H,EAAMoR,oBACtBhZ,SAAU4H,EAAMqR,cAChB/Y,QAAS0H,EAAMsR,aACfjZ,QAAS2H,EAAMuR,aAAsC,SAAvBvR,EAAMuR,kBAA0BlX,GAGhEzP,KAAK8J,SAAW,CACd5I,OAAQkU,EAAMwR,eACdllB,KAAM0T,EAAMyR,aACZ5c,SAAUmL,EAAM0R,kBAGlB9mB,KAAKoL,OAAS,CACZlK,OAAQkU,EAAM2R,aACdzZ,eAAgB8H,EAAM4R,qBACtBjY,KAAMqG,EAAM6R,WACZlnB,MAAOqV,EAAM8R,YACbjY,OAAQmG,EAAM+R,cAGhBnnB,KAAKU,UAAY,CACfQ,OAAQkU,EAAMgS,eACd1lB,KAAM0T,EAAMyC,aAEhB,CAgFC,OAhFA,8CAED,SACyBlX,GACvBX,KAAKomB,QAAUiB,gBAAMrnB,KAAKomB,QAASzlB,EACrC,GAAC,6BAED,SACuBA,GACrBX,KAAK4M,MAAQya,gBAAMrnB,KAAK4M,MAAOjM,GAG3BA,EAAQ6M,WACVxN,KAAK4M,MAAMY,SAAW7M,EAAQ6M,UAI5B8Z,cAAI3mB,EAAS,WAAa6J,kBAAQ7J,EAAQO,UAC5ClB,KAAK4M,MAAM1L,YAASuO,EAExB,GAAC,gCAED,SAC0B9O,GACxBX,KAAK8J,SAAWud,gBAAMrnB,KAAK8J,SAAUnJ,GAGjC2mB,cAAI3mB,EAAS,WAAa6J,kBAAQ7J,EAAQO,UAC5ClB,KAAK8J,SAAS5I,YAASuO,EAE3B,GAAC,8BAED,SACwB9O,GACtBX,KAAKoL,OAASic,gBAAMrnB,KAAKoL,OAAQzK,GAG7B2mB,cAAI3mB,EAAS,WAAa6J,kBAAQ7J,EAAQO,UAC5ClB,KAAKoL,OAAOlK,YAASuO,EAEzB,GAAC,iCAED,SAC2B9O,GACzBX,KAAKU,UAAY2mB,gBAAMrnB,KAAKU,UAAWC,GAGnC2mB,cAAI3mB,EAAS,WAAa6J,kBAAQ7J,EAAQO,UAC5ClB,KAAKU,UAAUQ,YAASuO,EAE5B,GAAC,mBAED,WAEE,MAAO,CACL2W,QAASpmB,KAAKomB,QACdxZ,MAAO5M,KAAK4M,MACZ9C,SAAU9J,KAAK8J,SACfsB,OAAQpL,KAAKoL,OACb1K,UAAWV,KAAKU,UAEpB,GAAC,wBAED,WAEE,OAAOV,KAAKomB,QAAQhQ,KACtB,GAAC,2BAED,SAAqBmR,GACnB,IAAMnS,EAAQoS,KACZC,aAAQC,eAAK1nB,KAAKW,QAAS4mB,GAAe,IAS5C,OALIA,EAAa/lB,SAASmmB,EAAyB7T,WACjDsB,EAAMgB,MAAQhB,EAAMwS,oBACbxS,EAAMwS,cAGRzD,KAAG0D,UAAUzS,EACtB,KAAC,EAhJsB,GAgJtB,wCA/IA0S,KAAU,oGAGVA,KAAU,uGAGVA,KAAU,qGAGVA,KAAU,wGAGVA,KAAU,6GAqDVC,KAAM,6HAKNA,KAAM,8HAeNA,KAAM,+HAUNA,KAAM,gIAUNA,KAAM,uHAUNC,KAAQ,gHAWRA,KAAQ,+EC1FT,SAEaC,KAAU,8CAKxB,OALwB,mCAAzB,gIAGKzU,GAAUW,QAAU,IAAI8R,KAAc,4CAE1C,sBAGciC,OA5CgB,WAC7B,MAA+BhW,mBAAwB,MAAK,mBAArD3B,EAAM,KAAE4X,EAAY,KAC3B,EAA4BjW,mBAAwB,MAAK,mBAAlDrS,EAAM,KAAEuoB,EAAS,KAIxB,OAFAC,aAAS,kBAsBT,WAEgC,+BAxBjBC,EAAmB,GAAE,IAE/B/X,GAAW1Q,EAKd,cAAC,IAAc,UACb,cAAC,IAAQ,2BAAK0Q,GAAM,aAClB,cAAC,EAAcgY,SAAQ,CAAClW,MAAOxS,EAAO,SACpC,cAAC,GAAI,WAPJ,cAAC,EAAM,CAACzC,MAAO,IAAKC,OAAQ,IAAKC,MAAM,UAqBhB,aAI/B,OAJ+B,kCAAhC,8GAC6B2qB,KAAa,KAAD,EAAjCO,EAAY,OAClBL,EAAaK,GACbJ,EAAU,IAAIlZ,GAAOsZ,EAAahV,GAAUW,SAASwR,eAAe,4CACrE,sBAEH,ECjCe8C,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBnsB,MAAK,YAAkD,IAA/CosB,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,mCCKAO,YAAU,CAAEC,eAAgB,aAE5BC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,GAAG,MAENrW,SAASsW,eAAe,SAM1Bb,I","file":"static/js/main.234fd8c2.chunk.js","sourcesContent":["var map = {\n\t\"./1.10.2/extracts\": [\n\t\t166,\n\t\t5\n\t],\n\t\"./1.10.4/extracts\": [\n\t\t167,\n\t\t6\n\t],\n\t\"./1.10.6/extracts\": [\n\t\t168,\n\t\t7\n\t],\n\t\"./1.10.7/extracts\": [\n\t\t169,\n\t\t8\n\t],\n\t\"./1.10.8/extracts\": [\n\t\t170,\n\t\t9\n\t],\n\t\"./1.11.3/extracts\": [\n\t\t171,\n\t\t10\n\t],\n\t\"./1.20.2/extracts\": [\n\t\t172,\n\t\t11\n\t],\n\t\"./1.30.0/extracts\": [\n\t\t173,\n\t\t12\n\t],\n\t\"./1.31.1/extracts\": [\n\t\t174,\n\t\t13\n\t],\n\t\"./1.40.1/extracts\": [\n\t\t175,\n\t\t3\n\t],\n\t\"./1.52.0/extracts\": [\n\t\t176,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 73;\nmodule.exports = webpackAsyncContext;","// { \"shape\": \"Star Artifact\",\n//   \"class\": \"Any Class\",\n//   \"val\": \"1\",\n//   \"id\": \"10041\",\n//   \"description\": \"Become immune to all negative effects (debuffs), except cooldown-related effects.\",\n//   \"name\": \"Blessed Health\" }\n\nimport { CharacterClass } from './Character.types';\n\nexport interface ArtifactInterface {\n  uuid: number;\n  name: string;\n  description: string;\n  class: CharacterClass;\n  type: ArtifactType;\n  value: string;\n}\n\nexport enum ArtifactType {\n  Triangle = 'Triangle',\n  Rhombus = 'Rhombus',\n  Star = 'Star'\n}","import React, { FunctionComponent } from 'react';\n\ninterface Props {\n  width: number;\n  height: number;\n  color: string;\n}\n\nconst Loader: FunctionComponent<Props> = ({\n  width,\n  height,\n  color,\n}) => {\n  return (\n    <div style={{ position: 'absolute', top: `calc(45% - ${height / 2}px)`, left: `calc(50% - ${width / 2}px)` }}>\n      <svg width={`${width}`} height={`${height}`} viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\" stroke={color}>\n        <g fill=\"none\" fillRule=\"evenodd\" strokeWidth=\"2\">\n          <circle cx=\"22\" cy=\"22\" r=\"1\">\n            <animate attributeName=\"r\"\n              begin=\"0s\" dur=\"1.8s\"\n              values=\"1; 20\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.165, 0.84, 0.44, 1\"\n              repeatCount=\"indefinite\" />\n            <animate attributeName=\"stroke-opacity\"\n              begin=\"0s\" dur=\"1.8s\"\n              values=\"1; 0\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.3, 0.61, 0.355, 1\"\n              repeatCount=\"indefinite\" />\n          </circle>\n          <circle cx=\"22\" cy=\"22\" r=\"1\">\n            <animate attributeName=\"r\"\n              begin=\"-0.9s\" dur=\"1.8s\"\n              values=\"1; 20\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.165, 0.84, 0.44, 1\"\n              repeatCount=\"indefinite\" />\n            <animate attributeName=\"stroke-opacity\"\n              begin=\"-0.9s\" dur=\"1.8s\"\n              values=\"1; 0\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.3, 0.61, 0.355, 1\"\n              repeatCount=\"indefinite\" />\n          </circle>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default Loader;","import { createContext } from 'react';\n\nimport Engine from 'engine/Engine';\n\n/* Ugly but the engine context will be set for sure in the App and it is not supposed to be null\n * We could create a new Engine() to discard it right afterwards but that'd be worse in term of memory\n */\nconst EngineContext = createContext<Engine>(null as unknown as Engine);\n\nexport default EngineContext;\n","export function enumToObject<T extends Record<string, unknown>, V>(enumObject: T, value: V) {\n  const obj: Partial<Record<keyof T, V>> = {};\n\n  Object.keys(enumObject).forEach((key) => {\n    obj[key as keyof T] = value;\n  });\n\n  return obj as Record<keyof T, V>;\n}\n\nexport function allEnumValues<T>(enumObject: Record<string, T>): T[] {\n  return Object\n    .keys(enumObject)\n    .map(key => enumObject[key]);\n}\n\nexport function allEnumKeys(enumObject: Record<string, string>): string[] {\n  return Object\n    .keys(enumObject);\n}\n\nexport function isInEnum<T>(enumObject: Record<string, T>, value: T): boolean {\n  return Object.values(enumObject).includes(value);\n}\n\nexport type DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};","import Minisearch from 'minisearch';\n\nimport { allEnumValues } from '../helpers/typeUtils';\nimport { ArtifactInterface, ArtifactType } from '../types/Artifact.types';\nimport { ArtifactsFilters } from '../types/Filters.types';\nimport Engine, { DataInterface } from './Engine';\n\nexport default class EngineArtifacts {\n  public readonly engine: Engine;\n  private searchEngine: Minisearch;\n  public types: ArtifactType[];\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.types = allEnumValues(ArtifactType);\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: ['name', 'class', 'type', 'description'],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.artifactsSearchIndex);\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  private get artifacts(): ArtifactInterface[] {\n    if (this.engine.loaded) {\n      return this.data.artifacts;\n    }\n\n    return [];\n  }\n\n  public all(filters: ArtifactsFilters): ArtifactInterface[] {\n    let artifacts = this.artifacts ?? [];\n    artifacts = this.filterBySearch(artifacts, filters);\n    artifacts = this.filterByType(artifacts, filters);\n    artifacts.sort((a, b) => a.uuid - b.uuid);\n    return artifacts;\n  }\n\n  private filterBySearch(artifacts: ArtifactInterface[], filters: ArtifactsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine.search(filters.search, {\n        prefix: true,\n        combineWith: 'AND',\n      }).map(r => r.uuid);\n\n      return artifacts.filter(skill => resultingUuids.includes(skill.uuid));\n    }\n\n    return artifacts;\n  }\n\n  public get defaultType(): ArtifactType {\n    return ArtifactType.Triangle;\n  }\n\n  private filterByType(artifacts: ArtifactInterface[], filters: ArtifactsFilters) {\n    if (filters.type) {\n      return artifacts.filter(({ type }) => type === filters.type);\n    }\n\n    return artifacts;\n  }\n}\n","export enum CharacterClass {\n  All = 'All',\n  Templar = 'Templar',\n  Berserker = 'Berserker',\n  Warden = 'Warden',\n  Warlock = 'Warlock',\n}\n","import { CharacterClass } from 'types/Character.types';\n\nexport interface Item {\n  uuid: number,\n  name: string,\n  icon: string | null,\n  flavor?: string,\n  description?: string,\n  category: ItemCategory,\n  type: ItemType,\n  rarity: ItemRarity,\n  classRestriction: CharacterClass | null;\n  minLevel: number;\n  set: SetUuid | null;\n  baseEnchants: number[];\n  fixedEnchants: number[];\n}\n\nexport interface ItemSet {\n  uuid: SetUuid;\n  name: string;\n  itemIds: number[];\n  bonuses: Record<number, string>;\n}\n\nexport enum ItemRarity {\n  Ordinary = 'Ordinary',\n  Enchanted = 'Enchanted',\n  Rare = 'Rare',\n  Unique = 'Unique',\n  Legendary = 'Legendary',\n  TrueLegendary = 'True Legendary',\n  Mythical = 'Mythical'\n}\n\nexport enum ItemCategory {\n  Helmet = 'Helmet',\n  Armor = 'Armor',\n  Boots = 'Boots',\n  Weapon = 'Weapon',\n  Offhand = 'Offhand',\n  Ring = 'Ring',\n  Amulet = 'Amulet',\n  Accessory = 'Accessory',\n  Consumables = 'Consumables',\n  Gem = 'Gem',\n  Misc = 'Misc',\n  Craft = 'Craft'\n}\n\nexport enum ItemType {\n  Helm = 'Helm',\n  Armor = 'Armor',\n  Bow = 'Bow',\n  Sword = 'Sword',\n  Staff = 'Staff',\n  Fists = 'Fists',\n  Boots = 'Boots',\n  Accessory = 'Accessory',\n  Ring = 'Ring',\n  Amulet = 'Amulet',\n  Claw = 'Claw',\n  Arrow = 'Arrow',\n  Spellbook = 'Spellbook',\n  Shield = 'Shield',\n  Key = 'Key',\n  Tome = 'Tome',\n  Elixir = 'Elixir',\n  QuestItem = 'Quest Item',\n  SpecialItem = 'Special Item',\n  Dye = 'Dye',\n  Scroll = 'Scroll',\n  Potion = 'Potion',\n  Container = 'Container',\n  CraftingMaterial = 'Crafting Material',\n  UnknownItem = 'Unknown Item',\n  Bag = 'Bag',\n  CubeGem = 'Cube Gem',\n  SphereGem = 'Sphere Gem',\n  StarGem = 'Star Gem',\n  Relic = 'Relic',\n  Rune = 'Item'\n}\n\nexport enum SetUuid {\n  SunAndMoon = 'sunandmoon',\n  Seeker = 'seeker',\n  Bond = 'bond',\n  AllForOne = 'element1',\n  OneForAll = 'element2',\n  Scout = 'scout',\n  Summoner = 'summoner',\n  Thief = 'thiefs',\n  Harverst = 'harvest',\n  WrathfulRevenge = 'thorns',\n  FuriousRetaliation = 'thorns2',\n  Challenger = 'challenger',\n  Valkyrie = 'valkyrie',\n  Reckoning = 'reckoning',\n  ThunderingArmy = 'thunderingarmy',\n  ThunderCharged = 'thundercharge',\n  Caines = 'caines',\n  Wargod = 'wargod',\n  Soulpurger = 'soulpurger',\n  Ayeela = 'ayeela',\n  Bloodsoak = 'bloodsoak',\n  Cataclysm = 'cataclysm',\n  Skysoul = 'soulsky',\n  SpiritualGarb = 'spiritgarb',\n  Volcanic = 'volcano',\n  Dragonfire = 'dragonfire',\n  NothernRage = 'northernrage',\n  FrostWyrm = 'frostwyrm',\n  BloodBinder = 'bloodbinder',\n  PlagueMage = 'plaguemage',\n  Coldhearted = 'coldhearted',\n  Deathbringer = 'deathbringers',\n  DemonLord = 'demonlord',\n  BurningHells = 'burninghell',\n  Desecrator = 'desecrators',\n  Masochist = 'masochists',\n  HighRanger = 'highranger',\n  Windcaller = 'windcaller',\n  ShroomTender = 'shroomtender',\n  Everspring = 'everspring',\n  Stormcaller = 'stormcaller',\n  WispMother = 'wispmother',\n  Torrential = 'torrent',\n  Snowstorm = 'snowstorm',\n  Christmas = 'xmas',\n  Master = 'masters',\n}\n","import { ItemRarity, ItemCategory, ItemType } from './Item.types';\n\nexport interface Enchant {\n  uuid: number;\n  name: string;\n  category: EnchantCategory;\n  type: EnchantType;\n  affixes?: string[];\n  description: string;\n  ranges: EnchantRanges;\n  items: number[];\n  itemTypes: ItemType[];\n  skills?: number[];\n}\n\nexport interface EnchantRanges {\n  [ItemRarity.Ordinary]: EnchantRangeBoundary;\n  [ItemRarity.Enchanted]: EnchantRangeBoundary;\n  [ItemRarity.Rare]: EnchantRangeBoundary;\n  [ItemRarity.Unique]: EnchantRangeBoundary;\n  [ItemRarity.Legendary]: EnchantRangeBoundary;\n  [ItemRarity.TrueLegendary]: EnchantRangeBoundary;\n  [ItemRarity.Mythical]: EnchantRangeBoundary;\n}\n\nexport interface EnchantRangeBoundary {\n  minimum: number;\n  maximum: number;\n  cap: number;\n  greaterCap: number;\n}\n\nexport enum EnchantType {\n  Minor = 'Minor',\n  Major = 'Major',\n  Epic = 'Epic',\n  Legendary = 'Legendary',\n  Gem = 'Gem',\n}\n\nexport enum EnchantCategory {\n  Power = 'Power',\n  Enchant = 'Enchant',\n  Gem = 'Gem',\n  Rune = 'Rune',\n}\n\nexport interface SimpleEnchant {\n  uuid: number;\n  name: string;\n  description: string;\n  min: number;\n  max: number;\n  skills?: Record<number, string>;\n}\n\nexport interface ItemEnchantSlot {\n  count: number;\n  types: EnchantType[]; // If multiple element it's an OR\n  categoriesRestriction?: ItemCategory[];\n}\n\nexport interface ItemEnchantSlots {\n  baseEnchants: SimpleEnchant[];\n  fixedEnchants: SimpleEnchant[];\n  enchantSlots?: ItemEnchantSlot[];\n}\n\nexport type CraftableEnchantTypes =\n  | EnchantType.Epic\n  | EnchantType.Major\n  | EnchantType.Minor;\nexport type EnchantPoolType = Record<CraftableEnchantTypes, number[]>;\nexport type EnchantsPool = Record<ItemType, EnchantPoolType>;\n","import { CharacterClass } from './Character.types';\n\n\nexport interface Skill {\n  uuid: number;\n  name: string;\n  icon: string | null,\n  tree: SkillTree;\n  type?:  SkillType;\n  family?: SkillFamily;\n  class: CharacterClass;\n  minLevel: number;\n  maxRank: number;\n  cooldown?: number;\n  skillRequirement: number[];\n  effect: string[];\n  duration: number[];\n  x: number;\n  y: number;\n  damage: string[];\n  range: number[];\n  range2: number[];\n  element: DamageElement;\n  value: number[];\n  proc: number[];\n  description: string;\n  description_next?: string;\n  cost?: number;\n  cost100?: number;\n  tags: string[];\n}\n\nexport enum DamageElement {\n  Ethereal = 'Ethereal',\n  Fire = 'Fire',\n  Frost = 'Frost',\n  Holy = 'Holy',\n  Lightning = 'Lightning',\n  Physical = 'Physical',\n  Poison = 'Poison',\n  Shadow = 'Shadow',\n}\n\nexport enum SkillFamily {\n  Archery = 'Archery',\n  Bane = 'Bane',\n  Brawl = 'Brawl',\n  Curse = 'Curse',\n  Dragon = 'Dragon',\n  Magic = 'Magic',\n  Nature = 'Nature',\n  Shield = 'Shield',\n  Shout = 'Shout',\n  Sorcery = 'Sorcery',\n  Storm = 'Storm',\n  Sword = 'Sword',\n  Utility = 'Utility'\n  // None = 'None',\n}\n\nexport enum SkillType {\n  Active = 'Active Skill',\n  Passive = 'Passive Skill',\n  Aura = 'Aura Skill',\n  Companion = 'Companion Skill',\n  Heritage = 'Heritage Skill',\n  Ritual = 'Ritual Skill',\n  Ultimate = 'Ultimate Skill'\n}\n\nexport enum SkillTree {\n  Mastery = 'Mastery',\n  Conviction = 'Conviction',\n  Corruptor = 'Corruptor',\n  Demonologist = 'Demonologist',\n  Dragonkin = 'Dragonkin',\n  Druid = 'Druid',\n  Frostborn = 'Frostborn',\n  Guardian = 'Guardian',\n  Lich = 'Lich',\n  Reaper = 'Reaper',\n  Redemption = 'Redemption',\n  SkyLord = 'Sky Lord',\n  StormCaller = 'Storm Caller',\n  Vengeance = 'Vengeance',\n  WindRanger = 'Wind Ranger',\n  WinterHerald = 'Winter Herald',\n  Wrath = 'Wrath'\n}\n","import { CharacterClass } from '../../types/Character.types';\nimport { EnchantType, ItemEnchantSlot } from '../../types/Enchant.types';\nimport { ItemCategory, SetUuid, ItemType, ItemRarity } from '../../types/Item.types';\nimport { SkillTree } from '../../types/Skill.types';\n\nexport const EpicEnchantableCategories: ItemCategory[] = [ItemCategory.Ring, ItemCategory.Amulet];\nexport const EnchantableCategories: ItemCategory[] = [\n  ItemCategory.Ring,\n  ItemCategory.Amulet,\n  ItemCategory.Accessory,\n  ItemCategory.Armor,\n  ItemCategory.Boots,\n  ItemCategory.Helmet,\n  ItemCategory.Offhand,\n  ItemCategory.Weapon,\n];\n\nexport const ENCHANT_SLOTS_BY_RARITY: Record<ItemRarity, ItemEnchantSlot[]> = {\n  [ItemRarity.Ordinary]: [],\n  [ItemRarity.Enchanted]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor, EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n  ],\n  [ItemRarity.Rare]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Unique]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Legendary]: [\n    {\n      count: 2,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.TrueLegendary]: [\n    {\n      count: 2,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Mythical]: [],\n};\n\nexport const ITEM_TYPES_BY_CATEGORIES: Record<ItemCategory, ItemType[]> = {\n  [ItemCategory.Helmet]: [ItemType.Helm],\n  [ItemCategory.Armor]: [ItemType.Armor],\n  [ItemCategory.Boots]: [ItemType.Boots],\n  [ItemCategory.Weapon]: [\n    ItemType.Bow,\n    ItemType.Sword,\n    ItemType.Staff,\n    ItemType.Fists,\n  ],\n  [ItemCategory.Offhand]: [\n    ItemType.Spellbook,\n    ItemType.Shield,\n    ItemType.Tome,\n    ItemType.Claw,\n    ItemType.Arrow,\n  ],\n  [ItemCategory.Ring]: [ItemType.Ring],\n  [ItemCategory.Amulet]: [ItemType.Amulet],\n  [ItemCategory.Accessory]: [ItemType.Accessory],\n  [ItemCategory.Gem]: [\n    ItemType.CubeGem,\n    ItemType.StarGem,\n    ItemType.SphereGem,\n  ],\n  [ItemCategory.Consumables]: [\n    ItemType.Elixir,\n    ItemType.Potion,\n    ItemType.Scroll,\n    ItemType.Relic,\n  ],\n  [ItemCategory.Misc]: [\n    ItemType.Key,\n    ItemType.QuestItem,\n    ItemType.SpecialItem,\n    ItemType.Dye,\n    ItemType.Container,\n    ItemType.UnknownItem,\n    ItemType.Bag,\n  ],\n  [ItemCategory.Craft]: [\n    ItemType.CraftingMaterial,\n    ItemType.Rune,\n  ],\n};\n\nexport const SETS_BY_CLASS: Record<CharacterClass, SetUuid[]> = {\n  [CharacterClass.All]: [\n    SetUuid.Scout,\n    SetUuid.WrathfulRevenge,\n    SetUuid.Seeker,\n    SetUuid.Challenger,\n    SetUuid.Thief,\n    SetUuid.Bond,\n    SetUuid.Harverst,\n    SetUuid.Summoner,\n    SetUuid.SunAndMoon,\n    SetUuid.FuriousRetaliation,\n    SetUuid.AllForOne,\n    SetUuid.OneForAll,\n  ],\n  [CharacterClass.Templar]: [\n    SetUuid.Reckoning,\n    SetUuid.Valkyrie,\n    SetUuid.ThunderCharged,\n    SetUuid.ThunderingArmy,\n    SetUuid.Caines,\n    SetUuid.Wargod,\n    SetUuid.Ayeela,\n    SetUuid.Soulpurger,\n  ],\n  [CharacterClass.Berserker]: [\n    SetUuid.Bloodsoak,\n    SetUuid.Cataclysm,\n    SetUuid.SpiritualGarb,\n    SetUuid.Skysoul,\n    SetUuid.Dragonfire,\n    SetUuid.Volcanic,\n    SetUuid.NothernRage,\n    SetUuid.FrostWyrm,\n  ],\n  [CharacterClass.Warden]: [\n    SetUuid.HighRanger,\n    SetUuid.Windcaller,\n    SetUuid.Everspring,\n    SetUuid.ShroomTender,\n    SetUuid.Stormcaller,\n    SetUuid.WispMother,\n    SetUuid.Torrential,\n    SetUuid.Snowstorm,\n  ],\n  [CharacterClass.Warlock]: [\n    SetUuid.BloodBinder,\n    SetUuid.PlagueMage,\n    SetUuid.Coldhearted,\n    SetUuid.Deathbringer,\n    SetUuid.DemonLord,\n    SetUuid.BurningHells,\n    SetUuid.Desecrator,\n    SetUuid.Masochist,\n  ],\n};\n\nexport const ITEM_ID_BY_SETS: Record<SetUuid, number[]> = {\n  [SetUuid.SunAndMoon]: [504, 505],\n  [SetUuid.Seeker]: [331, 332, 333],\n  [SetUuid.Bond]: [496, 497],\n  [SetUuid.AllForOne]: [502, 503],\n  [SetUuid.OneForAll]: [500, 501],\n  [SetUuid.Scout]:  [151, 327, 328],\n  [SetUuid.Summoner]: [510, 511, 512, 513],\n  [SetUuid.Thief]: [494, 495],\n  [SetUuid.Harverst]:  [498, 499],\n  [SetUuid.WrathfulRevenge]: [329, 330, 149],\n  [SetUuid.FuriousRetaliation]: [506, 507, 508, 509],\n  [SetUuid.Challenger]: [334, 335, 336],\n  [SetUuid.Valkyrie]: [547, 548, 549, 550],\n  [SetUuid.Reckoning]: [376, 377, 378, 379],\n  [SetUuid.ThunderingArmy]: [539, 540, 541, 542],\n  [SetUuid.ThunderCharged]: [123, 134, 318, 326],\n  [SetUuid.Caines]: [372, 373, 374, 375],\n  [SetUuid.Wargod]: [543, 544, 545, 546],\n  [SetUuid.Soulpurger]: [535, 536, 537, 538],\n  [SetUuid.Ayeela]: [124, 323, 324, 325],\n  [SetUuid.Bloodsoak]: [91, 100, 337, 556],\n  [SetUuid.Cataclysm]: [552, 553, 554, 555],\n  [SetUuid.Skysoul]: [557, 558, 559, 560],\n  [SetUuid.SpiritualGarb]: [380, 381, 382, 383],\n  [SetUuid.Volcanic]: [562, 563, 564, 565],\n  [SetUuid.Dragonfire]: [102, 339, 340, 561],\n  [SetUuid.NothernRage]: [384, 385, 386, 566],\n  [SetUuid.FrostWyrm]: [567, 568, 569, 570],\n  [SetUuid.BloodBinder]: [368, 369, 370, 594],\n  [SetUuid.PlagueMage]: [598, 599, 600, 601],\n  [SetUuid.Coldhearted]: [113, 321, 322, 596],\n  [SetUuid.Deathbringer]: [606, 607, 608, 609],\n  [SetUuid.DemonLord]: [112, 118, 319, 595],\n  [SetUuid.BurningHells]: [602, 603, 604, 605],\n  [SetUuid.Desecrator]: [364, 365, 366, 597],\n  [SetUuid.Masochist]: [610, 611, 612, 613],\n  [SetUuid.HighRanger]: [142, 341, 342, 343],\n  [SetUuid.Windcaller]: [576, 577, 578, 579],\n  [SetUuid.ShroomTender]: [585, 586, 587, 588],\n  [SetUuid.Everspring]: [388, 389, 390, 391],\n  [SetUuid.Stormcaller]: [74, 139, 140, 580],\n  [SetUuid.WispMother]: [581, 582, 583, 584],\n  [SetUuid.Torrential]: [590, 591, 592, 593],\n  [SetUuid.Snowstorm]: [392, 393, 394, 589],\n  [SetUuid.Christmas]: [716, 717, 718, 719, 720],\n  [SetUuid.Master]: [776, 616],\n};\n\nexport const SKILLTREES_BY_CLASSES: Partial<Record<CharacterClass, SkillTree[]>> = {\n  [CharacterClass.Templar]: [\n    SkillTree.Vengeance,\n    SkillTree.Wrath,\n    SkillTree.Conviction,\n    SkillTree.Redemption,\n    SkillTree.Mastery,\n  ],\n  [CharacterClass.Berserker]: [\n    SkillTree.Guardian,\n    SkillTree.SkyLord,\n    SkillTree.Dragonkin,\n    SkillTree.Frostborn,\n    SkillTree.Mastery,\n  ],\n  [CharacterClass.Warden]: [\n    SkillTree.WindRanger,\n    SkillTree.Druid,\n    SkillTree.StormCaller,\n    SkillTree.WinterHerald,\n    SkillTree.Mastery,\n  ],\n  [CharacterClass.Warlock]: [\n    SkillTree.Corruptor,\n    SkillTree.Lich,\n    SkillTree.Demonologist,\n    SkillTree.Reaper,\n    SkillTree.Mastery,\n  ],\n};\n","import { compact, isEmpty, reduce, uniq } from 'lodash';\nimport Minisearch from 'minisearch';\n\nimport { ENCHANT_SLOTS_BY_RARITY } from 'engine/data/dataMappings';\nimport { sortObject } from 'helpers/objectUtils';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport {\n  ItemEnchantSlots,\n  SimpleEnchant,\n  EnchantType,\n  Enchant,\n  EnchantCategory,\n  CraftableEnchantTypes,\n  EnchantPoolType,\n} from 'types/Enchant.types';\nimport { EnchantsFilters } from 'types/Filters.types';\nimport { ItemRarity, Item, ItemType } from 'types/Item.types';\n\nimport Engine, { DataInterface } from './Engine';\n\ntype HydratedPoolType = Record<CraftableEnchantTypes, Enchant[]>;\ntype HydratedEnchantsPool = Record<ItemType, HydratedPoolType>;\n\nexport default class EngineEnchants {\n  public readonly engine: Engine;\n  public categories: EnchantCategory[];\n  public types: EnchantType[];\n  private _categoriesByTypes?: Record<EnchantType, EnchantCategory[]>;\n  private enchantsPool!: HydratedEnchantsPool;\n  private searchEngine: Minisearch;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.categories = allEnumValues(EnchantCategory);\n    this.types = allEnumValues(EnchantType);\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: [\n        'name',\n        'category',\n        'description',\n        'itemTypes',\n        'itemCategories',\n      ],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.enchantsPool = this.hydrateEnchantsPool();\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.enchantsSearchIndex);\n  }\n\n  /* Methods */\n  public all(filters: EnchantsFilters): Enchant[] {\n    let enchants = this.enchants;\n\n    enchants = this.filterBySearch(enchants, filters);\n    enchants = this.filterByTypeAndCategory(enchants, filters);\n\n    return enchants;\n  }\n  public getTypeEnchantsPool(type: ItemType): HydratedPoolType | null {\n    return this.enchantsPool[type] || null;\n  }\n\n  public getRunesEnchantsPool(): Enchant[] {\n    return this.enchants.filter(\n      (enchant) => enchant.category === EnchantCategory.Rune\n    );\n  }\n\n  public getItemEnchantsSlots(item: Item): ItemEnchantSlots | null {\n    if (this.engine.loaded && ![ItemRarity.Mythical].includes(item.rarity)) {\n      const enchantSlots = ENCHANT_SLOTS_BY_RARITY[item.rarity];\n      const fixedEnchants = this.enchantsToRawEnchants(\n        item.rarity,\n        item.fixedEnchants\n      );\n      const baseEnchants = this.enchantsToRawEnchants(\n        item.rarity,\n        item.baseEnchants\n      );\n\n      if (\n        isEmpty(enchantSlots) &&\n        isEmpty(fixedEnchants) &&\n        isEmpty(baseEnchants)\n      ) {\n        return null;\n      } else {\n        return {\n          enchantSlots,\n          fixedEnchants,\n          baseEnchants,\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  private get enchants(): Enchant[] {\n    if (this.engine.loaded) {\n      return this.data.enchants;\n    }\n\n    return [];\n  }\n\n  public get defaultType(): EnchantType {\n    return Object.keys(this.categoriesByTypes)[0] as EnchantType;\n  }\n\n  public get defaultCategory(): EnchantCategory {\n    return this.categoriesByTypes[this.defaultType][0];\n  }\n\n  // TODO: Move this to a parser ?\n  public get categoriesByTypes(): Record<EnchantType, EnchantCategory[]> {\n    if (!this._categoriesByTypes) {\n      const enchants = this.enchants.reduce(\n        (memo: Record<string, string[]>, enchant: Enchant) => {\n          if (\n            enchant.type !== ('Gem' as EnchantType) &&\n            enchant.category === EnchantCategory.Gem\n          ) {\n            return memo;\n          }\n\n          if (memo[enchant.type]) {\n            memo[enchant.type].push(enchant.category);\n            memo[enchant.type] = uniq(memo[enchant.type]);\n          } else {\n            memo[enchant.type] = [];\n          }\n\n          return memo;\n        },\n        {}\n      );\n\n      // enchants[EnchantType.Major].push(EnchantCategory.Gem);\n      this._categoriesByTypes = sortObject(enchants, (a, b) => {\n        if (a === EnchantType.Minor || b === EnchantType.Gem) {\n          return 1;\n        }\n\n        return -1;\n      }) as Record<EnchantType, EnchantCategory[]>;\n    }\n\n    return this._categoriesByTypes;\n  }\n\n  /* Private */\n  private filterBySearch(enchants: Enchant[], filters: EnchantsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine\n        .search(filters.search, {\n          prefix: true,\n          combineWith: 'AND',\n        })\n        .map((r) => r.uuid);\n\n      return enchants.filter((enchant) =>\n        resultingUuids.includes(enchant.uuid)\n      );\n    }\n\n    return enchants;\n  }\n\n  private filterByTypeAndCategory(\n    enchants: Enchant[],\n    filters: EnchantsFilters\n  ) {\n    if (filters.category === 'Any' || filters.type === 'Any') {\n      return enchants;\n    } else {\n      const category = (filters.category ||\n        this.defaultCategory) as EnchantCategory;\n      const type = (\n        category === EnchantCategory.Gem\n          ? 'Gem'\n          : filters.type || this.defaultType\n      ) as EnchantType;\n\n      return enchants.filter(\n        (enchant) => enchant.type === type && enchant.category === category\n      );\n    }\n  }\n\n  /* Private utils */\n  private enchantsToRawEnchants(\n    rarity: ItemRarity,\n    enchantsIds: number[]\n  ): SimpleEnchant[] {\n    const { skills } = this.data;\n\n    return compact(\n      enchantsIds.map((enchantId) =>\n        this.enchants.find((e) => e.uuid === enchantId)\n      )\n    ).map((enchant) => {\n      const ranges = enchant.ranges[rarity];\n\n      return {\n        uuid: enchant.uuid,\n        name: enchant.name,\n        description: enchant.description,\n        min: ranges.minimum,\n        max: ranges.cap,\n        skills: enchant.skills?.reduce(\n          (memo: Record<number, string>, skillId) => {\n            const skill = skills.find((s) => s.uuid === skillId);\n            memo[skillId] = skill?.name || 'Unknown Skill';\n            return memo;\n          },\n          {}\n        ),\n      };\n    });\n  }\n\n  private hydrateEnchantsPool(): HydratedEnchantsPool {\n    const enchantsPool = this.data.enchantsPool;\n\n    // @ts-ignore\n    return reduce(\n      enchantsPool,\n      (\n        hydratedPool: HydratedEnchantsPool,\n        poolByEnchantType: EnchantPoolType,\n        itemType: ItemType\n      ) => {\n        hydratedPool[itemType] = {\n          [EnchantType.Epic]: compact(\n            poolByEnchantType[EnchantType.Epic].map((uuid) =>\n              this.enchants.find((e) => e.uuid === uuid)\n            )\n          ),\n          [EnchantType.Major]: compact(\n            poolByEnchantType[EnchantType.Major].map((uuid) =>\n              this.enchants.find((e) => e.uuid === uuid)\n            )\n          ),\n          [EnchantType.Minor]: compact(\n            poolByEnchantType[EnchantType.Minor].map((uuid) =>\n              this.enchants.find((e) => e.uuid === uuid)\n            )\n          ),\n        };\n        return hydratedPool;\n      },\n      {}\n    );\n  }\n}\n","export enum SortOrder {\n  NameAsc = 'nameAsc',\n  NameDesc = 'nameDesc',\n  LevelAsc = 'levelAsc',\n  LevelDesc = 'levelDesc',\n}\n\nexport interface GeneralFilters {\n  patch: string;\n}\n\nexport interface ItemsFilters {\n  search?: string;\n  category?: string;\n  type?: string;\n  characterClass?: string;\n  rarities?: string[];\n  onlySet?: boolean;\n  orderBy?: SortOrder;\n}\n\nexport interface EnchantsFilters {\n  search?: string;\n  type?: string;\n  category?: string;\n}\n\nexport interface ArtifactsFilters {\n  search?: string;\n  type?: string;\n  category?: string;\n}\n\nexport interface SkillsFilters {\n  search?: string;\n  characterClass?: string;\n  tree?: string;\n  types?: string[];\n  family?: string;\n}\n\nexport interface Filters {\n  general: GeneralFilters;\n  items: ItemsFilters;\n  enchants: EnchantsFilters;\n  skills: SkillsFilters;\n  artifacts: ArtifactsFilters;\n}\n\n/* Flattened filters */\nexport type QueryFiltersInterface = {\n  patch: string;\n  itemsSearch?: string;\n  itemsCategory?: string;\n  itemsType?: string;\n  itemsCharacterClass?: string;\n  itemsRarities?: string[];\n  itemsOnlySet?: string;\n  itemsOrderBy?: string;\n  enchantsSearch?: string;\n  enchantsType?: string;\n  enchantsCategory?: string;\n  skillsSearch?: string;\n  skillsCharacterClass: string;\n  skillsTree: string;\n  skillsTypes: string[];\n  skillsFamily: string;\n  artifactSearch: string;\n  artifactType: string;\n}\n\nexport enum FiltersType {\n  General = 'general',\n  Items = 'items',\n  Enchants = 'enchants',\n  Skills = 'skills',\n  Artifacts = 'artifacts'\n}\n","export function sortObject<T extends Record<string, unknown>>(obj: T, sortFunction: (a: string, b: string) => number): T {\n  return Object.keys(obj).sort(sortFunction).reduce((result: Record<string, unknown>, key) => {\n    result[key] = obj[key];\n    return result;\n  }, {}) as T;\n}","import { compact, findKey } from 'lodash';\nimport Minisearch from 'minisearch';\n\nimport { ITEM_TYPES_BY_CATEGORIES } from 'engine/data/dataMappings';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport { CharacterClass } from 'types/Character.types';\nimport { ItemsFilters, SortOrder } from 'types/Filters.types';\nimport { ItemCategory, ItemType, Item, ItemRarity, ItemSet } from 'types/Item.types';\n\nimport Engine, { DataInterface } from './Engine';\n\nexport interface ItemSetData extends ItemSet {\n  items: Item[];\n  types: ItemType[];\n}\n\nexport const DEFAULT_RARITIES_FILTERS = [\n  ItemRarity.Unique,\n  ItemRarity.Legendary,\n  ItemRarity.TrueLegendary,\n];\n\nconst FILTER_UNAFFECTED_CATEGORIES = [\n  'Any',\n  ItemCategory.Consumables,\n  ItemCategory.Craft,\n  ItemCategory.Gem,\n  ItemCategory.Misc,\n];\n\nexport const ITEM_TYPES_WITH_EPIC_REPLACEMENT_CHANCE = [\n  ItemType.Armor,\n  ItemType.Boots,\n  ItemType.Bow,\n  ItemType.Sword,\n  ItemType.Fists,\n  ItemType.Staff,\n  ItemType.Accessory,\n];\n\nexport default class EngineItems {\n  public readonly engine: Engine;\n  public categories: ItemCategory[];\n  public types: ItemType[];\n  public typesByCategories: Record<ItemCategory, ItemType[]>;\n  public categoriesByType: Record<ItemType, ItemCategory>;\n  private searchEngine: Minisearch;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.types = allEnumValues(ItemType);\n    this.categories = allEnumValues(ItemCategory);\n    this.typesByCategories = ITEM_TYPES_BY_CATEGORIES;\n    this.categoriesByType = this._categoriesByType();\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: ['name', 'classRestriction', 'enchants', 'setName', 'setBonuses'],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.itemsSearchIndex);\n  }\n\n  /* Methods */\n  public all(filters: ItemsFilters): Item[] {\n    let items = this.items;\n\n    items = this.filterBySearch(items, filters);\n    items = this.filterByTypeAndCategory(items, filters);\n    items = this.filterByClass(items, filters);\n    items = this.filterByRarities(items, filters);\n    items = this.filterOnlySet(items, filters);\n    items = this.sortBy(items, filters);\n\n    return items;\n  }\n\n  public find(uuid: number): Item | null {\n    return this.items.find(item => item.uuid === uuid) || null;\n  }\n\n  public getSetData(item: Item): ItemSetData | null {\n    if (item.set) {\n      const set = this.data.sets.find(set => set.uuid === item.set);\n\n      if (set) {\n        const setItems = compact(set.itemIds.map(itemId => this.items.find(item => item.uuid === itemId)));\n        return {\n          ...set,\n          items: setItems,\n          types: setItems.map(item => item.type),\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  private get items(): Item[] {\n    if (this.engine.loaded) {\n      return this.data.items;\n    }\n\n    return [];\n  }\n\n  public get defaultCategory(): ItemCategory {\n    return this.categories[0];\n  }\n\n  public get defaultType(): ItemType {\n    return this.typesByCategories[this.defaultCategory][0];\n  }\n\n  /* Private */\n  private filterBySearch(items: Item[], filters: ItemsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine.search(filters.search, {\n        prefix: true,\n        combineWith: 'AND',\n      }).map(r => r.uuid);\n\n      return items.filter(item => resultingUuids.includes(item.uuid));\n    }\n\n    return items;\n  }\n\n  private filterByTypeAndCategory(items: Item[], filters: ItemsFilters) {\n    if (filters.category === 'Any' || filters.type === 'Any') {\n      return items;\n    } else {\n      const category = (filters.category || this.defaultCategory) as ItemCategory;\n      const type = (filters.type || this.defaultType) as ItemType;\n\n      return items.filter(item => item.type === type && item.category === category);\n    }\n  }\n\n  private filterByClass(items: Item[], filters: ItemsFilters) {\n    // If we have a category and it's a category that should not be affected by rarity\n    if (filters.category && FILTER_UNAFFECTED_CATEGORIES.includes(filters.category)) {\n      return items;\n    }\n\n    // For all others categories, filter by rarity\n    if (filters.characterClass && filters.characterClass !== CharacterClass.All) {\n      return items.filter(item => filters.characterClass === item.classRestriction);\n    }\n\n    return items;\n  }\n\n  private filterByRarities(items: Item[], filters: ItemsFilters) {\n    // Don't use this filter for unaffected categories\n    if (FILTER_UNAFFECTED_CATEGORIES.includes(filters.category || this.defaultCategory)) {\n      // Don't return mythical items anyway if it is unselected\n      if (!filters.rarities?.includes(ItemRarity.Mythical)) {\n        return items.filter(item => item.rarity !== ItemRarity.Mythical);\n      } else {\n        return items;\n      }\n    }\n\n    // For all others categories, filter by rarity\n    if (filters.rarities) {\n      return items.filter(item => filters.rarities?.includes(item.rarity));\n    } else {\n      return items.filter(item => DEFAULT_RARITIES_FILTERS.includes(item.rarity));\n    }\n  }\n\n  private filterOnlySet(items: Item[], filters: ItemsFilters) {\n    // Don't use this filter for unaffected categories\n    if (FILTER_UNAFFECTED_CATEGORIES.includes(filters.category || this.defaultCategory)) {\n      return items;\n    }\n\n    if (filters.onlySet) {\n      return items.filter(item => !!item.set);\n    }\n\n    return items;\n  }\n\n  private sortBy(items: Item[], filters: ItemsFilters) {\n    if (!filters.orderBy) {\n      // Default sort is LevelDesc\n      return items.sort((a, b) => a.minLevel - b.minLevel);\n    }\n\n    switch (filters.orderBy) {\n      case SortOrder.NameAsc:\n        return items.sort((a, b) => {\n          const [nameA, nameB] = [a.name.toUpperCase(), b.name.toUpperCase()];\n          return nameA < nameB ? -1 : 1;\n        });\n      case SortOrder.NameDesc:\n        return items.sort((a, b) => {\n          const [nameA, nameB] = [a.name.toUpperCase(), b.name.toUpperCase()];\n          return nameA < nameB ? 1 : -1;\n        });\n      case SortOrder.LevelAsc:\n        return items.sort((a, b) => a.minLevel - b.minLevel);\n      case SortOrder.LevelDesc:\n        return items.sort((a, b) => -(a.minLevel - b.minLevel));\n      default:\n        return items;\n    }\n  }\n\n  private _categoriesByType(): Record<ItemType, ItemCategory> {\n    // @ts-ignore\n    return this.types.reduce((memo: Record<ItemType, ItemCategory>, type) => {\n      memo[type] = findKey(this.typesByCategories, types =>\n        types.includes(type)\n      ) as ItemCategory;\n\n      return memo;\n    }, {});\n  }\n}\n","import Minisearch from 'minisearch';\n\nimport { allEnumValues } from 'helpers/typeUtils';\nimport { CharacterClass } from 'types/Character.types';\nimport { SkillsFilters } from 'types/Filters.types';\nimport { Skill, SkillTree } from 'types/Skill.types';\n\nimport { SKILLTREES_BY_CLASSES } from './data/dataMappings';\nimport Engine, { DataInterface } from './Engine';\n\ninterface FindParams {\n  class: CharacterClass;\n}\n\nexport default class EngineEnchants {\n  public readonly engine: Engine;\n  private searchEngine: Minisearch;\n  public classes: CharacterClass[];\n  public trees: SkillTree[];\n  public treesByClasses: Partial<Record<CharacterClass, SkillTree[]>>;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.classes = [CharacterClass.Templar, CharacterClass.Berserker, CharacterClass.Warden, CharacterClass.Warlock];\n    this.trees = allEnumValues(SkillTree);\n    this.treesByClasses = SKILLTREES_BY_CLASSES;\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: ['name', 'class', 'tree', 'type', 'element', 'family', 'description'],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.skillsSearchIndex);\n  }\n\n  /* Methods */\n  public all(filters: SkillsFilters): Skill[] {\n    let skills = this.skills;\n\n    skills = this.filterBySearch(skills, filters);\n    skills = this.filterByClassAndTree(skills, filters);\n    skills = this.filterByFamily(skills, filters);\n    skills = this.filterByTypes(skills, filters);\n    // skills = this.sortBy(skills, filters);\n\n    return skills;\n  }\n\n  public find(uuid: number, params?: FindParams): Skill | null {\n    if (params) {\n      return this.skills.find(skill => skill.uuid === uuid && skill.class === params.class) || null;\n    } else {\n      return this.skills.find(skill => skill.uuid === uuid) || null;\n    }\n  }\n\n  public findByName(name: string): Skill | null {\n    return this.data.skills.find(skill => skill.name.toLowerCase() === name.toLowerCase()) || null;\n  }\n\n  public defaultTreeForClass(characterClass: CharacterClass): SkillTree {\n    const classTrees = this.treesByClasses[characterClass];\n    return classTrees ? classTrees[0] : SkillTree.Mastery;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  public get defaultClass(): CharacterClass {\n    return this.classes[0];\n  }\n\n  public get defaultTree(): SkillTree {\n    return this.defaultTreeForClass(this.defaultClass);\n  }\n\n  /* Private */\n  private get skills(): Skill[] {\n    if (this.engine.loaded) {\n      return this.data.skills;\n    }\n\n    return [];\n  }\n\n  private filterBySearch(skills: Skill[], filters: SkillsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine.search(filters.search, {\n        prefix: true,\n        combineWith: 'AND',\n      }).map(r => r.uuid);\n\n      return skills.filter(skill => resultingUuids.includes(skill.uuid));\n    }\n\n    return skills;\n  }\n\n  private filterByClassAndTree(skills: Skill[], filters: SkillsFilters) {\n    if (filters.characterClass === 'All' || filters.tree === 'Any') {\n      return skills;\n    } else {\n      const characterClass = (filters.characterClass || this.defaultClass) as CharacterClass;\n      const tree = (filters.tree || this.defaultTree) as SkillTree;\n\n      return skills.filter(skill => skill.class === characterClass && skill.tree === tree);\n    }\n  }\n\n\n  private filterByFamily(skills: Skill[], filters: SkillsFilters) {\n    if (filters.family && filters.family !== 'All') {\n      return skills.filter(skill => filters.family === skill.family);\n    }\n\n    return skills;\n  }\n\n  private filterByTypes(skills: Skill[], filters: SkillsFilters) {\n    if (filters.types) {\n      return skills.filter(skill => skill.type && filters.types?.includes(skill.type));\n    }\n\n    return skills;\n  }\n}\n","import { compare } from 'compare-versions';\n\nimport { CharacterClass } from 'types/Character.types';\nimport { Enchant, EnchantsPool } from 'types/Enchant.types';\nimport { Item, ItemSet } from 'types/Item.types';\nimport { Skill, SkillTree } from 'types/Skill.types';\n\nimport { ArtifactInterface } from '../types/Artifact.types';\nimport EngineArtifacts from './EngineArtifacts';\nimport EngineEnchants from './EngineEnchants';\nimport EngineItems from './EngineItems';\nimport EngineSkills from './EngineSkills';\n\ntype Version = string;\n\nexport interface DataInterface {\n  artifacts: ArtifactInterface[];\n  artifactsSearchIndex: Record<string, string | number>[];\n  items: Item[];\n  enchants: Enchant[];\n  enchantsPool: EnchantsPool;\n  sets: ItemSet[];\n  skills: Skill[];\n  skillsByClass: Record<CharacterClass, Record<SkillTree, Skill[]>>;\n  itemsSearchIndex: Record<string, string | number>[];\n  enchantsSearchIndex: Record<string, string | number>[];\n  skillsSearchIndex: Record<string, string | number>[];\n}\n\n/* Singleton */\nexport default class Engine {\n  public version!: Version;\n  public data?: DataInterface;\n\n  public readonly Items!: EngineItems;\n  public readonly Enchants!: EngineEnchants;\n  public readonly Skills!: EngineSkills;\n  public readonly Artifacts!: EngineArtifacts;\n\n  constructor(version: Version) {\n    this.version = version;\n    this.Items = new EngineItems(this);\n    this.Enchants = new EngineEnchants(this);\n    this.Skills = new EngineSkills(this);\n    this.Artifacts = new EngineArtifacts(this);\n  }\n\n  public get loaded(): boolean {\n    return !!this.data;\n  }\n\n  public async loadVersion(version: Version) {\n    if (version !== this.version) {\n      this.data = undefined;\n      this.version = version;\n      await this.loadData();\n    }\n  }\n\n  public async loadData() {\n    this.data = (await import(`./data/${this.version}/extracts`)).default;\n    this.Items.onDataLoaded();\n    this.Enchants.onDataLoaded();\n    this.Skills.onDataLoaded();\n    if (compare(this.version, '1.40.1', '>=')) {\n      this.Artifacts.onDataLoaded();\n    }\n\n    // console.log('Enchants', this.data?.enchants.length);\n    // console.log('Skills', this.data?.skills.length);\n    // console.log('Items', this.data?.items.length);\n  }\n}","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nconst ScrollToTop: React.FunctionComponent = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import { useContext } from 'react';\n\nimport EngineContext from 'engine/context';\nimport Engine from 'engine/Engine';\n\nexport default function useEngine(): Engine {\n  const engine = useContext(EngineContext);\n\n  return engine;\n}","import { useContext } from 'react';\n\nimport { MobXProviderContext } from 'mobx-react';\n\nimport { Stores } from 'types/DataStore.types';\n\n/**\n * Use MobX stores provided by the MobX context\n *\n * @param {DataStore} [storeNames] list of DataStores to be returned. Values can be taken from the `DataStore` enum. If left empty all available stores are returned\n */\nexport function useStores<StoresData extends Partial<Stores>>(...storeNames: (keyof StoresData)[]): StoresData {\n  const allStores: StoresData = useContext(MobXProviderContext) as StoresData;\n  let stores: StoresData;\n\n  if (storeNames && storeNames.length) {\n    stores = {} as StoresData;\n    storeNames.forEach((storeName) => {\n      const store = allStores[storeName];\n      if (!store) {\n        throw new Error(`Attempting to get an in-existant MobX store: ${String(storeName)}`);\n      }\n\n      stores[storeName] = store;\n    });\n  } else {\n    stores = allStores;\n  }\n\n  return stores;\n}\n","import React, { FunctionComponent } from 'react';\n\nexport enum IconName {\n  ArrowDownBlue = 'arrow_down_blue',\n  ArrowDownPurple = 'arrow_down_purple',\n  ArrowDownYellow = 'arrow_down_yellow',\n  ArrowDownWhite = 'arrow_down_white',\n  ArrowRightBlue = 'arrow_right_blue',\n  ArrowRightPurple = 'arrow_right_purple',\n  ArrowRightYellow = 'arrow_right_yellow',\n  ArrowRightWhite = 'arrow_right_white',\n  ArrowUpBlue = 'arrow_up_blue',\n  Copy = 'copy',\n  Link = 'link',\n  Search = 'search',\n  Menu = 'menu'\n}\n\nconst SVG_PATH = 'assets/images/icons';\n\nexport interface Props {\n  id?: string;\n  className?: string;\n  name: IconName;\n  width?: number;\n  height?: number;\n}\n\nconst Icon: FunctionComponent<Props> = ({\n  id,\n  className,\n  name,\n  width,\n  height,\n}) =>  (\n  <img\n    aria-label={name}\n    src={`/${SVG_PATH}/${name}.svg`}\n    width={width}\n    height={height}\n    alt={name}\n    id={id}\n    className={className}\n  />\n);\n\nexport default Icon;\n","import React, { FunctionComponent } from 'react';\n\nimport './Footer.scss';\n\nconst Footer: FunctionComponent = () => {\n  return (\n    <footer className=\"o-footer\">\n      <span className=\"o-footer-item made-with\">\n        Made with&nbsp;&nbsp;❤️\n      </span>\n      <span className=\"o-footer__separator\">|</span>\n      <span className=\"o-footer-item issues\">\n        Noticed an <strong>issue?</strong> Tell me all about it&nbsp;\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.reddit.com/r/ChroniconDB/\"\n        >\n          here.\n        </a>\n      </span>\n      <span className=\"o-footer__separator\">|</span>\n      <span className=\"o-footer-item source-code\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/gabriel-dehan/chronicondb-client\"\n        >\n          Source code\n        </a>\n      </span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export enum RouteId {\n  Items = 'items',\n  Item = 'item',\n  Enchants  = 'enchants',\n  Skills = 'skills',\n  Skill = 'skill',\n  Artifacts = 'artifacts',\n  Developers = 'developers',\n}\n\nexport enum RoutePath {\n  Items = '/items',\n  Item = '/item/:uuid',\n  Enchants = '/enchants',\n  Skills = '/skills',\n  Skill = '/skill/:uuid',\n  Artifacts = '/artifacts',\n  Developers = '/developers',\n}\n\ninterface RoutesMapping {\n  [key: string]: RouteId;\n}\n\nexport const ROUTES_ID_MAPPING: RoutesMapping = {\n  [RoutePath.Items]: RouteId.Items,\n  [RoutePath.Item]: RouteId.Item,\n  [RoutePath.Enchants]: RouteId.Enchants,\n  [RoutePath.Skills]: RouteId.Skills,\n  [RoutePath.Skill]: RouteId.Skill,\n  [RoutePath.Artifacts]: RouteId.Artifacts,\n  [RoutePath.Developers]: RouteId.Developers,\n};\n","import React, { FunctionComponent, useState, createRef } from 'react';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nimport './Dropdown.scss';\n\nexport interface DropdownOption {\n  label: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  id?: string;\n  className?: string;\n  label: string;\n  defaultValue?: string;\n  options: DropdownOption[];\n  onChange: (value: string) => void;\n}\n\nconst Dropdown: FunctionComponent<DropdownProps> = ({\n  id,\n  className,\n  label,\n  defaultValue,\n  options,\n  onChange,\n}) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [currentValue, setCurrentValue] = useState(defaultValue || options[0].value);\n  const currentValueLabel = options.find(opt => opt.value === currentValue)?.label || defaultValue;\n  const dropdownRef = createRef<HTMLDivElement>();\n\n  useOnClickOutside(dropdownRef, onClickOutside);\n\n  return (\n    <div\n      id={id}\n      className={`a-dropdown ${className ? className : ''}`}\n      ref={dropdownRef}\n    >\n      <div className=\"a-dropdown__container\">\n        <div\n          className=\"a-dropdown__trigger\"\n          onClick={toggleDropdown}\n        >\n          <span className=\"a-dropdown__trigger-label\">{label}</span>\n          <span className=\"a-dropdown__trigger-value\">{currentValueLabel}</span>\n          <div className=\"a-dropdown__icon\"><Icon name={IconName.ArrowDownBlue} width={16} height={8} /></div>\n        </div>\n        <div className={`a-dropdown__options ${showDropdown ? 'open' : ''}`}>\n          {options.map(({ value, label }, index) => (\n            <span\n              key={`dropdown-${value}-${index}`}\n              className={`a-dropdown__option ${value === currentValue ? 'selected' : ''}`}\n              data-value={value}\n              onClick={() => onSelect(value)}\n            >\n              {label}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  function onSelect(value: string) {\n    setCurrentValue(value);\n    setShowDropdown(false);\n    onChange(value);\n  }\n\n  function toggleDropdown() {\n    setShowDropdown(!showDropdown);\n  }\n\n  function onClickOutside() {\n    if (showDropdown) {\n      setShowDropdown(false);\n    }\n  }\n};\n\nexport default Dropdown;","import { useEffect, RefObject } from 'react';\n\nexport default function useOnClickOutside(\n  element: RefObject<HTMLElement>,\n  callback: (event: MouseEvent) => void\n) {\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (element.current && !element.current.contains(event.target as Node)) {\n        callback(event);\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [element, callback]);\n}","import { FiltersStore } from 'stores/FiltersStore';\n\nexport enum DataStore {\n  Filters = 'filtersStore'\n}\n\nexport interface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { useHistory, useLocation, matchPath } from 'react-router-dom';\n\nimport { capitalize } from 'lodash';\nimport { autorun } from 'mobx';\n\nimport { allEnumValues } from 'helpers/typeUtils';\nimport { useStores } from 'hooks/useStores';\nimport { RoutePath } from 'routes';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\nimport {\n  GeneralFilters,\n  ItemsFilters,\n  EnchantsFilters,\n  SkillsFilters,\n  FiltersType, ArtifactsFilters,\n} from 'types/Filters.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\ntype useFiltersInterface<T> = [T, (params: T) => void];\n\nconst AVAILABLE_FILTERS_FOR_ROUTES: Record<RoutePath, FiltersType[]> = {\n  [RoutePath.Items]: [FiltersType.General, FiltersType.Items],\n  [RoutePath.Item]: [],\n  [RoutePath.Enchants]: [FiltersType.General, FiltersType.Enchants],\n  [RoutePath.Skills]: [FiltersType.General, FiltersType.Skills],\n  [RoutePath.Skill]: [],\n  [RoutePath.Artifacts]: [FiltersType.General, FiltersType.Artifacts],\n  [RoutePath.Developers]: [FiltersType.General],\n};\n\nexport default function useFilters\n  <T extends GeneralFilters | ItemsFilters | EnchantsFilters | SkillsFilters | ArtifactsFilters>(filtersType: FiltersType)\n  : useFiltersInterface<T>  {\n  const routes = allEnumValues(RoutePath);\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const history = useHistory();\n  const location = useLocation();\n\n  // When the change location change and on first render, observe the filters store\n  useEffect(() => {\n    const path = (\n      routes.find(route => matchPath(location.pathname, { path: route }))\n      || location.pathname\n    ) as RoutePath;\n\n    autorun(() => {\n      const filtersForPath = AVAILABLE_FILTERS_FOR_ROUTES[path];\n\n      if (filtersForPath?.length > 0) {\n        history.replace({\n          search: filtersStore.toQueryString(filtersForPath || []),\n        });\n      }\n    });\n  }, [location.pathname]);\n\n  return [filtersStore.filters[filtersType] as T, setFilters];\n\n  /* A bit too metaprogramming for typescript */\n  function setFilters(filters: T) {\n    // @ts-ignore\n    filtersStore[`set${capitalize(filtersType)}Filters`](filters);\n  }\n}","import { useMediaQuery } from 'react-responsive';\n\nexport enum Breakpoint {\n  Mobile = 480,\n  Tablet = 860,\n  Laptop = 1024,\n  Desktop = 1280,\n}\n\nconst useResponsive = () => {\n  return {\n    isUpToTablet: useMediaQuery({ query: `(max-width: ${Breakpoint.Tablet}px)` }),\n  };\n};\n\nexport default useResponsive;","import React, { FunctionComponent } from 'react';\n\nexport enum GameIconType {\n  ItemCategory = 'itemCategory',\n  Item = 'item',\n  EnchantType = 'enchantType',\n  Enchant = 'enchant',\n  SkillSpell = 'skillSpell',\n  SkillMastery = 'skillMastery',\n  SkillTree = 'skillTree',\n  ClassProfile = 'classProfile',\n  ClassHeader = 'classHeader',\n  ClassBanner = 'classBanner',\n  Artifact = 'artifact',\n}\n\nconst BASE_PATH = 'assets/images/game';\n\nconst ICONS_PATH: Record<GameIconType, string> = {\n  [GameIconType.ItemCategory]: `${BASE_PATH}/items/categories/`,\n  [GameIconType.Item]: `${BASE_PATH}/items/all/`,\n  [GameIconType.EnchantType]: `${BASE_PATH}/enchants/types/`,\n  [GameIconType.Enchant]: `${BASE_PATH}/enchants/`,\n  [GameIconType.SkillSpell]: `${BASE_PATH}/skills/skills/`,\n  [GameIconType.SkillMastery]: `${BASE_PATH}/skills/masteries/`,\n  [GameIconType.SkillTree]: `${BASE_PATH}/skills/trees/`,\n  [GameIconType.ClassProfile]: `${BASE_PATH}/classes/profiles/`,\n  [GameIconType.ClassHeader]: `${BASE_PATH}/classes/headers/`,\n  [GameIconType.ClassBanner]: `${BASE_PATH}/classes/banners/`,\n  [GameIconType.Artifact]: `${BASE_PATH}/artifacts/`,\n};\n\nexport interface Props {\n  id?: string;\n  className?: string;\n  type: GameIconType;\n  name: string;\n  width?: number;\n  height?: number;\n}\n\nconst GameIcon: FunctionComponent<Props> = ({\n  id,\n  className,\n  type,\n  name,\n  width,\n  height,\n}) => (\n  <img\n    aria-label={name}\n    src={`/${ICONS_PATH[type]}/${name.toLowerCase()}.png`}\n    width={width}\n    height={height}\n    alt={name}\n    id={id}\n    className={className}\n  />\n);\n\nexport default GameIcon;\n","\n\nimport React, { FunctionComponent, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { observer } from 'mobx-react';\nimport Drawer from 'rc-drawer';\n\nimport Dropdown from 'components/atoms/Dropdown/Dropdown';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport patches from 'engine/data/patches.json';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { RouteId, RoutePath, ROUTES_ID_MAPPING } from 'routes';\nimport { GeneralFilters, FiltersType } from 'types/Filters.types';\n\nimport './Header.scss';\n\ntype MenuItem = Record<string, RoutePath>;\n\nconst MAIN_MENU_ITEMS: MenuItem[] = [\n  { path: RoutePath.Items },\n  { path: RoutePath.Enchants },\n  { path: RoutePath.Skills },\n  { path: RoutePath.Artifacts },\n];\n\nconst Header: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const { pathname } = useLocation();\n  const [filters, setFilters] = useFilters<GeneralFilters>(FiltersType.General);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return renderMobileHeader();\n  }\n\n  return renderDesktopHeader();\n\n  function renderDesktopHeader() {\n    return (\n      <header className=\"o-header\">\n        <div className=\"o-header__container\">\n          <div className=\"o-header__left\">\n            <h1 className=\"o-header__logo\"><Link to=\"/items\">ChroniconDB</Link></h1>\n            <ul className=\"o-header__main-menu\">\n              {MAIN_MENU_ITEMS.map((menuItem) => {\n                const menuRouteId: RouteId = ROUTES_ID_MAPPING[menuItem.path];\n                const { path } = menuItem;\n                const isCurrent = pathname === path;\n\n                return (\n                  <li\n                    className={`o-header__main-menu-item ${isCurrent ? 'current' : ''}`}\n                    key={menuRouteId}\n                  >\n                    <Link to={path}>{menuRouteId}</Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <ul className=\"o-header__sub-menu\">\n            <li className=\"o-header__sub-menu-item\">\n              <div className=\"o-header__sub-menu-patches\">\n                <Dropdown\n                  label=\"Patch:\"\n                  defaultValue={filters.patch}\n                  options={patches.map(patch => ({ label: patch, value: patch }))}\n                  onChange={onPatchChange}\n                />\n              </div>\n            </li>\n            <li className={`o-header__sub-menu-item ${pathname === RoutePath.Developers ? 'current' : ''}`}>\n              <Link to={RoutePath.Developers}>{RouteId.Developers}</Link>\n            </li>\n          </ul>\n        </div>\n      </header>\n    );\n  }\n\n  function renderMobileHeader() {\n    return (\n      <header className=\"o-header\">\n        <div className=\"o-header__container\">\n          <div className=\"o-header__left\">\n            <h1 className=\"o-header__logo\">ChroniconDB</h1>\n          </div>\n          <div className=\"o-header__right\" onClick={() => setIsMobileMenuOpen(true)}>\n            <Icon name={IconName.Menu} width={28} />\n          </div>\n          <Drawer\n            className=\"o-header__menuMobile\"\n            open={isMobileMenuOpen}\n            onClose={() => setIsMobileMenuOpen(false)}\n            handler={false}\n            width=\"50vw\"\n            placement={'right'}\n          >\n            <ul className=\"o-header__menuMobile-items\">\n              {MAIN_MENU_ITEMS.map((menuItem) => {\n                const menuRouteId: RouteId = ROUTES_ID_MAPPING[menuItem.path];\n                const { path } = menuItem;\n                const isCurrent = pathname === path;\n\n                return (\n                  <li\n                    className={`o-header__menuMobile-item ${isCurrent ? 'current' : ''}`}\n                    key={menuRouteId}\n                  >\n                    <Link to={path} onClick={() => setIsMobileMenuOpen(false)}>{menuRouteId}</Link>\n                  </li>\n                );\n              })}\n              <li className={`o-header__menuMobile-item ${pathname === RoutePath.Developers ? 'current' : ''}`}>\n                <Link to={RoutePath.Developers} onClick={() => setIsMobileMenuOpen(false)}>{RouteId.Developers}</Link>\n              </li>\n              <li className=\"o-header__menuMobile-item patch\">\n                <Dropdown\n                  label=\"Patch:\"\n                  defaultValue={filters.patch}\n                  options={patches.map(patch => ({ label: patch, value: patch }))}\n                  onChange={onPatchChange}\n                />\n              </li>\n            </ul>\n          </Drawer>\n        </div>\n      </header>\n    );\n  }\n\n  function onPatchChange(patch: string) {\n    setFilters({ patch });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default observer(Header);\n","import React, { FunctionComponent } from 'react';\n\n\nimport Footer from 'components/organisms/Footer/Footer';\nimport Header from 'components/organisms/Header/Header';\n\nimport './Default.scss';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst DefaultLayout: FunctionComponent<Props> = ({ children }) => {\n\n  return (\n    <div className=\"p-layout\">\n      <Header />\n      <div className=\"p-wrapper\">\n        <div className=\"p-content\">\n          {children}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n","import React, { FunctionComponent } from 'react';\nimport { Helmet } from 'react-helmet-async';\n\ninterface Props {\n  title: string,\n  description: string,\n}\n\nconst useSeo = ({\n  title,\n  description,\n}: Props) => {\n\n  const SeoTag: FunctionComponent = () => {\n    return (\n      <Helmet>\n        <title>ChroniconDB - {title}</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n    );\n  };\n\n  return SeoTag;\n};\n\nexport default useSeo;","import React, { FunctionComponent, useState } from 'react';\n\nimport Drawer from 'rc-drawer';\n\n// import useEngine from 'hooks/useEngine';\n// import useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\n\n// import { ArtifactsFilters, FiltersType } from 'types/Filters.types';\nimport './Categories.scss';\nimport { allEnumValues } from '../../../../helpers/typeUtils';\nimport useEngine from '../../../../hooks/useEngine';\nimport useFilters from '../../../../hooks/useFilters';\nimport { ArtifactType } from '../../../../types/Artifact.types';\nimport { ArtifactsFilters, FiltersType } from '../../../../types/Filters.types';\nimport GameIcon, { GameIconType } from '../../../atoms/GameIcon/GameIcon';\n\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst categories = allEnumValues(ArtifactType);\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<ArtifactsFilters>(FiltersType.Artifacts);\n\n  const { Artifacts: { defaultType } } = Engine;\n  const baseType = (filters.type ?? defaultType) as ArtifactType;\n  const [selectedType, setSelectedType] = useState<ArtifactType>(baseType);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-artifactClasses__menuMobile ${selectedType.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderCategoryMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderCategoryMenu();\n  }\n\n  function renderCategoryMenu() {\n    return <ul className={'o-artifactClasses'}>\n      {categories.map((type, index) => {\n        const isSelected = selectedType === type;\n        return <li key={`skill-class-${index}`} className={`o-artifactClasses__class ${isSelected && 'selected'}`}>\n          <span\n            className={`o-artifactClasses__className`}\n            onClick={() => onSelectedType(type)}\n          >\n            {type}\n            <GameIcon\n              className=\"o-artifactClasses__className-icon\"\n              type={GameIconType.Artifact}\n              name={type.toLowerCase()}\n              width={16}\n            />\n          </span>\n        </li>;\n      })}\n    </ul>;\n  }\n\n  function onSelectedType(artifactType: ArtifactType) {\n    setSelectedType(artifactType);\n    setFilters({ ...filters, type: artifactType });\n  }\n\n};\n\nexport default Categories;","import React, { FunctionComponent, useState, useCallback } from 'react';\n\nimport { isEmpty, debounce } from 'lodash';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\n\nimport './Search.scss';\n\ninterface SearchProps {\n  className?: string;\n  placeholder?: string;\n  value: string;\n  onChange: (value?: string) => void;\n}\n\nconst Search: FunctionComponent<SearchProps> = ({\n  className,\n  placeholder,\n  value,\n  onChange,\n}) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const onDebouncedChange = useCallback(debounce((val) => {\n    onChange(isEmpty(val) ? undefined : val);\n  }, 500), []);\n\n  return (\n    <div className={`a-search ${className ? className : ''}`}>\n      <input\n        className=\"a-search__input\"\n        placeholder={placeholder}\n        type=\"text\"\n        value={inputValue}\n        onChange={onInputChange}\n      />\n      <div className=\"a-search__iconContainer\">\n        <Icon\n          className=\"a-search__icon\"\n          name={IconName.Search}\n          width={18}\n        />\n      </div>\n    </div>\n  );\n\n  function onInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setInputValue(e.target.value);\n    onDebouncedChange(e.target.value);\n  }\n};\n\nexport default Search;","import React, { FunctionComponent } from 'react';\n\nimport Search from 'components/atoms/Search/Search';\nimport useFilters from 'hooks/useFilters';\nimport { ArtifactsFilters, FiltersType } from 'types/Filters.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<ArtifactsFilters>(FiltersType.Artifacts);\n\n  return (\n    <div className=\"o-artifactsFilters\">\n      <Search\n        className=\"o-artifactsFilters__search\"\n        placeholder=\"Search anything: Mana, Health, Pickup radius...\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n    </div>\n  );\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React, { FunctionComponent } from 'react';\n\nimport './Header.scss';\n\n// TODO: Refactor with Item and Enchant headers\nconst Header: FunctionComponent = () => {\n\n  return (\n    <div className=\"m-header\">\n      <div className=\"m-header__skills\">\n        <h3 className=\"m-header__thead\">\n          Artifact\n        </h3>\n        <h3  className=\"m-header__thead reqSkill\">\n          Req.\n        </h3>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Header;","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { chunk } from 'lodash';\n\nexport default function useInfiniteScroll<T>(data: T[], perPage = 10) {\n  const [dataChunks, setDataChunks] = useState<T[][]>(chunk(data, perPage));\n  const [paginatedData, setPaginatedData] = useState<T[]>(dataChunks[0]);\n\n  useEffect(() => {\n    const chunks = chunk(data, perPage);\n    setDataChunks(chunks);\n    setPaginatedData(chunks[0] || []);\n  }, [data, perPage]);\n\n  return {\n    paginatedData,\n    InfiniteScroll: getTag(),\n  };\n\n  function getTag() {\n    const InfiniteScroller: FunctionComponent = ({ children }) => {\n      return (\n        <InfiniteScroll\n          dataLength={paginatedData.length}\n          next={fetchNextData}\n          hasMore={paginatedData.length < data.length}\n          loader={<h4>Loading...</h4>}\n        >\n          {children}\n        </InfiniteScroll>\n      );\n    };\n    return InfiniteScroller;\n  }\n\n  function fetchNextData() {\n    const currentChunk = Math.ceil(paginatedData.length / perPage) - 1;\n    setPaginatedData([...paginatedData, ...dataChunks[currentChunk + 1]]);\n  }\n}\n","import React from 'react';\n\nimport './Badge.scss';\n\ninterface Props {\n  label: string;\n  color: string;\n}\n\nconst Badge: React.FunctionComponent<Props> = ({\n  label,\n  color,\n}) => {\n  return (\n    <em className=\"a-badge\" style={{ backgroundColor: color }}>\n      {label}\n    </em>\n  );\n};\n\nexport default Badge;\n","import React, { FunctionComponent } from 'react';\nimport replaceWithJSX from 'react-string-replace';\nimport { Tooltip } from 'react-tippy';\n\nimport { camelCase } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\n\nimport './Artifact.scss';\n\nimport useResponsive from '../../../../hooks/useResponsive';\nimport { ArtifactInterface } from '../../../../types/Artifact.types';\nimport { CharacterClass } from '../../../../types/Character.types';\nimport Badge from '../../../atoms/Badge/Badge';\n\ninterface Props {\n  artifact: ArtifactInterface,\n}\n\nconst Artifact: FunctionComponent<Props> = ({\n  artifact,\n}) => {\n  const { isUpToTablet } = useResponsive();\n  return (\n    <div className=\"o-artifact\">\n      <div className=\"o-artifact__header\">\n        <div className=\"o-artifact__header-content\">\n          <span className=\"o-artifact__icon\" >\n            <GameIcon type={GameIconType.Artifact} name={artifact.type || ''} width={16} />\n          </span>\n          <div className=\"o-artifact__header-title\">\n            <h2 className=\"o-artifact__header-name\">\n              {artifact.name}\n            </h2>\n          </div>\n        </div>\n        <div className=\"o-artifact__header-meta\">\n          <span className=\"o-artifact__header-meta-category\">\n            <span className=\"o-artifact__header-meta-class\">\n              {renderBadges(artifact.class)}\n            </span>\n          </span>\n        </div>\n      </div>\n      <div className=\"o-artifact__content\">\n        <div className=\"o-artifact__content-main\">\n          <div className=\"o-artifact__description\">\n            {renderDescription()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderDescription() {\n    let replacementCounter = 0; // Fuck react unique keys\n    return replaceWithJSX(artifact.description, /(AMOUNT)/, (match, i, offset) => {\n      replacementCounter++;\n      return <span key={`amount-${i}-${offset}-${replacementCounter}`} style={{ color: 'var(--color-element-light-green)' }}>{artifact.value}</span>;\n    });\n  }\n\n  function renderBadges(classRestriction: CharacterClass | 'Any Class') {\n    // Mobile has less space\n    if (isUpToTablet) {\n      return (\n        <Badge\n          label={classRestriction}\n          color={`var(--color-class-${camelCase(classRestriction)})`}\n        />\n      );\n    }\n\n    if (classRestriction === 'Any Class') {\n      return (\n        <Tooltip\n          title={classRestriction}\n          position=\"bottom\"\n          arrow={true}\n          distance={5}\n          offset={0}\n          size=\"small\"\n        >\n          {[CharacterClass.Templar, CharacterClass.Berserker, CharacterClass.Warlock, CharacterClass.Warden].map(charClass => (\n            <GameIcon\n              key={`item-${artifact.uuid}-req-class-${charClass.toLowerCase()}`}\n              type={GameIconType.ClassProfile}\n              name={charClass.toLowerCase()}\n              height={28}\n            />\n          ))}\n        </Tooltip>\n      );\n    } else {\n      return (\n        <Tooltip\n          title={classRestriction}\n          position=\"bottom\"\n          arrow={true}\n          distance={5}\n          offset={0}\n          size=\"small\"\n        >\n          <GameIcon\n            type={GameIconType.ClassProfile}\n            name={classRestriction.toLowerCase()}\n            height={28}\n          />\n        </Tooltip>\n      );\n    }\n  }\n};\n\nexport default Artifact;","import React, { FunctionComponent } from 'react';\n\nimport Header from 'components/molecules/Artifacts/Header/Header';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\nimport './List.scss';\nimport { ArtifactInterface } from 'types/Artifact.types';\n\nimport Artifact from '../Artifact/Artifact';\n\ninterface Props {\n  artifacts: ArtifactInterface[];\n}\n\nconst List: FunctionComponent<Props> = ({ artifacts }) => {\n  const { paginatedData, InfiniteScroll } =  useInfiniteScroll<ArtifactInterface>(artifacts, 10);\n\n  return (\n    <div className=\"o-artifactsList\">\n      {artifacts.length > 0 ? (\n        <>\n          <Header />\n          <div className=\"o-artifactsList__container\">\n            <div className=\"o-artifactsList__artifacts\">\n              <InfiniteScroll>\n                {paginatedData.map(artifact => (\n                  <Artifact key={`artifact-${artifact.uuid}-${artifact.class}`} artifact={artifact}/>\n                ))}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"o-artifactsList__noArtifact\">\n          No artifact was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Artifacts/Categories/Categories';\nimport Filters from 'components/organisms/Artifacts/Filters/Filters';\nimport List from 'components/organisms/Artifacts/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\nimport './ArtifactsTemplate.scss';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nconst ArtifactsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n\n  const artifacts = getFilteredArtifacts();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-artifacts__wrapper\">\n        <Categories />\n        <div className=\"t-artifacts__list\">\n          <List artifacts={artifacts} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredArtifacts() {\n    return Engine.Artifacts.all({\n      search: filtersStore.artifacts.search,\n      type: filtersStore.artifacts.type,\n    });\n  }\n};\n\nexport default observer(ArtifactsTemplate);","import React, { FunctionComponent } from 'react';\n\nimport useSeo from 'hooks/useSeo';\n\nimport ArtifactsTemplate from '../../components/templates/Artifacts/ArtifactsTemplate';\n\nconst EnchantsPage: FunctionComponent = () => {\n  const Seo = useSeo({\n    title: 'Artifacts database',\n    description: 'Find the Artifacts that best suit your build.',\n  });\n\n  return (\n    <>\n      <Seo />\n      <ArtifactsTemplate />\n    </>\n  );\n};\n\nexport default EnchantsPage;","import React, { FunctionComponent } from 'react';\n\nimport useFilters from 'hooks/useFilters';\nimport useSeo from 'hooks/useSeo';\nimport { GeneralFilters, FiltersType } from 'types/Filters.types';\n\nimport './DevelopersTemplate.scss';\n\nconst DevelopersTemplate: FunctionComponent = () => {\n  const [filters] = useFilters<GeneralFilters>(FiltersType.General);\n\n  const Seo = useSeo({\n    title: 'Developers',\n    description:\n      \"Want some juicy data to create your own application? It's all here!\",\n  });\n\n  return (\n    <>\n      <Seo />\n      <div className=\"t-developers\">\n        <div className=\"t-developers__block\">\n          <h1>So, you have an idea...</h1>\n          <p>\n            ...for a Chronicon related application, maybe a{' '}\n            <em>Character Planner</em> or an <em>Item crafting simulator</em>,\n            but what you`&apos;re missing dearly are some fat, juicy{' '}\n            <strong>pieces of (up to date) data</strong> to supplement your\n            idea?\n            <br />- &quot;What about those items?&quot;, you think? &quot;Where\n            will I ever find properly formatted data for those hundreds of\n            items?&quot;\n          </p>\n          <p>\n            But <strong>don`&apos;t you worry</strong> lad(y), for we`&apos;ve\n            got you covered here at <strong>ChroniconDB™</strong>.<br />\n            All the data you ever wished for is now at your finger tips 👌!\n          </p>\n        </div>\n        <div className=\"t-developers__block\">\n          <h1>Stop talking and gieb data please</h1>\n          <p className=\"t-developers__tldr\">\n            <strong>TL;DR:</strong> Clone everything.\n            <br />\n            In the{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/engine\">\n              Engine data folder\n            </a>\n            , <code>{filters.patch}/extracts/</code> contains almost all the\n            data in JSON format for the latest version.\n            <br />\n            The{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/types\">\n              Types\n            </a>{' '}\n            will help you make sense of those json files: for instance{' '}\n            <code>items.json</code> has it`&apos;s interface <code>Item</code>{' '}\n            in the <code>types/Item.types.ts</code> file.\n            <br />\n            The rest of the non-versioned data, is in the Engine data folder:{' '}\n            <code>dataMappings.ts</code> is the most useful.\n          </p>\n          <p>\n            ChroniconDB is an <strong>open source</strong> React/Typescript\n            application and everything can be found in the{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client\">\n              Github Repository\n            </a>\n            .<br />\n            Rest assured that even if you don`&apos;t know Typescript you should\n            still be able to use the data provided here.\n            <br />\n            <br />\n            The main issue on our hands is that{' '}\n            <strong>I did the coding</strong>. It has - therefore and inevitably\n            - become <strong>a mess</strong>. Believe me.\n            <br />\n          </p>\n          <p>\n            So <strong>let me guide you</strong> through this ungodly jungle:\n            <br />\n            If you`&apos;re not interested in the display intricacies (a.k.a the\n            front-end) but want some data and logic, everything can be found in\n            the{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/engine\">\n              Engine\n            </a>\n            , or more specifically in the{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/engine\">\n              Engine data folder\n            </a>\n            .\n          </p>\n          <div>\n            In here you`&apos;ll find the following architecture:\n            <pre>\n              .<br />\n              ├── <strong>1.10.6/</strong>\n              <br />\n              │ ├── ...\n              <br />\n              ├── <strong>1.10.4/</strong>\n              <br />\n              │ ├── ...\n              <br />\n              ├── <strong>1.10.2/</strong>\n              <br />│ ├── <strong>extracts/</strong>\n              <br />\n              │ │ ├── enchants.json\n              <br />\n              │ │ ├── enchantsPool.json\n              <br />\n              │ │ ├── enchantsSearchIndex.json\n              <br />\n              │ │ ├── index.ts\n              <br />\n              │ │ ├── items.json\n              <br />\n              │ │ ├── itemsSearchIndex.json\n              <br />\n              │ │ ├── sets.json\n              <br />\n              │ │ ├── skills.json\n              <br />\n              │ │ ├── skillsByClass.json\n              <br />\n              │ │ └── skillsSearchIndex.json\n              <br />│ └── <strong>sources/</strong>\n              <br />\n              │ ├── enchantlist.txt\n              <br />\n              │ ├── enchantspool.txt\n              <br />\n              │ ├── itemlist.txt\n              <br />\n              │ ├── skilldata_1.10.2.json\n              <br />│ └── <strong>locale/</strong>\n              <br />\n              │ └── ...\n              <br />\n              ├── <strong>injected/</strong>\n              <br />\n              │ └── gemenchantlist.txt\n              <br />\n              ├── dataMappings.ts\n              <br />\n              ├── index.ts\n              <br />\n              └── patches.json\n              <br />\n            </pre>\n            Let`&apos;s start, shall we?\n          </div>\n          <div>\n            <h2>VERSIONS</h2>\n            Those folders, aptly named by their respective versions{' '}\n            <code>x.y.z/</code>, contain most of the data you`&apos;ll need.\n            <br />\n            They are automatically created using the command{' '}\n            <code>yarn parse:all x.y.z</code> whenever I see that a new version\n            of Chronicon is out.\n            <br />\n            If you can`&apos;t see a folder for the latest version, it probably\n            means that <strong>I`&apos;ve been ran over by a Moose</strong>, an\n            unfortunate accident.\n            <br />\n            But don`&apos;t fret, you can still generate everything you need\n            yourself by following{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client#how-to-get-up-to-date-item-and-skills-data\">\n              those instructions\n            </a>\n            .<br />\n            <br />\n            So we have something that looks like this.\n            <pre>\n              .<br />\n              ├── <strong>1.10.4/</strong>\n              <br />│ ├── <strong>extracts/</strong>\n              <br />│ └── <strong>sources/</strong>\n              <br />\n              ├── <strong>1.10.2/</strong>\n              <br />│ ├── <strong>extracts/</strong>\n              <br />│ └── <strong>sources/</strong>\n              <br />\n              ├── ...\n              <br />│\n            </pre>\n            <div>\n              There are two folders per version:\n              <ul>\n                <li>\n                  <code>\n                    <strong>sources/</strong>\n                  </code>\n                  , contains all the data extracted from the game itself, mainly\n                  CSV (sort of) and locales (translations) files.\n                </li>\n                <li>\n                  <code>\n                    <strong>extracts/</strong>\n                  </code>\n                  , is where it gets spicy, as it contains all the data parsed\n                  and formatted, both from versioned data, and manually\n                  extracted data (sigh.)\n                  <br />\n                  Everything inside the folder is pretty self explanatory, just\n                  don`&apos;t pay attention to the{' '}\n                  <code>*SearchIndex.json</code> files, they are used\n                  internally. But if you need indexes for your own search\n                  engine, please feel free to use those.\n                  <br />\n                  To help make sense of those files, do not hesitate to take a\n                  peak at the{' '}\n                  <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/types\">\n                    Types\n                  </a>\n                  : for instance <code>items.json</code> has it`&apos;s\n                  interface <code>Item</code> in the{' '}\n                  <code>types/Item.types.ts</code> file.\n                </li>\n                <li>\n                  Inside the extracts, <code>enchantsPool.ts</code> is pretty\n                  much extracted from{' '}\n                  <a\n                    href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=835123683\"\n                    rel=\"nofollow\"\n                  >\n                    this guide\n                  </a>\n                  , it should help you identify which enchants goes with which\n                  type of item.\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div>\n            <h2>DATAMAPS</h2>A fancy word for everything I had to map-out by\n            hand (pepega) because it could not be extracted from the game\n            directly. I am talking about the following files:\n            <pre>\n              .<br />\n              ├── <strong>injected/</strong>\n              <br />\n              │ └── gemenchantlist.txt\n              <br />\n              ├── dataMappings.ts\n              <br />\n              └── patches.json\n              <br />\n            </pre>\n            <ul>\n              <li>\n                <code>\n                  <strong>injected/</strong>\n                </code>\n                , does not contain much apart from my tears and blood, and a\n                manually extracted list of gem enchants. Those are automatically\n                baked in the versioned <code>enchants.json</code> so you can\n                forget about it.\n              </li>\n              <li>\n                <code>dataMappings.ts</code> contains most of the data mappings,\n                mainly which item goes in which set, all the sets ids, what item\n                type is in which category, etc...\n              </li>\n              <li>\n                <code>patches.json</code> contains all the patches known to the\n                application. Not very useful to you, I guess.\n              </li>\n            </ul>\n            As said before, to help make sense of this mess, the{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/types\">\n              Types\n            </a>{' '}\n            are a breath of fresh air.\n          </div>\n          <div>\n            <h2>ENGINE</h2>\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/engine\">\n              This\n            </a>{' '}\n            is a bit application specific, but could probably be used elsewhere.\n            <br />\n            <pre>\n              . <br />\n              ├── Engine.ts\n              <br />\n              ├── EngineEnchants.ts\n              <br />\n              ├── EngineItems.ts\n              <br />\n              ├── EngineSkills.ts\n              <br />\n              ├── context.ts\n              <br />\n              ├── <strong>data/</strong>\n              <br />\n              ├── <strong>parsers/</strong>\n              <br />\n              └── <strong>utils/</strong>\n              <br />\n            </pre>\n            <ul>\n              <li>\n                <code>\n                  <strong>data/</strong>\n                </code>\n                , you know this one. I just can`&apos;t seem to be able to shut\n                up about it.\n              </li>\n              <li>\n                In the{' '}\n                <code>\n                  <strong>parsers/</strong>\n                </code>{' '}\n                folder you`&apos;ll find the code that generates the versioned\n                JSON extracts. The code that is called when you do a{' '}\n                <code>yarn parse:all VERSION</code>, yup, the one.\n              </li>\n              <li>\n                <code>Engine.ts</code>, <code>EngineItems.ts</code>,{' '}\n                <code>EngineEnchants.ts</code>, <code>EngineSkills.ts</code>,\n                contain a lot of logic code, as well as finders, filters, and\n                helper methods to work with the data.\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h2>TEMPLATING</h2>\n            If you look at the enchants and skills, you`&apos;ll notice that\n            their descriptions are looking like that:\n            <pre>\n              Using a |Shield¥ skill increases |Sword¥ skill damage by EFFECT%\n              for DURATION seconds, stacking VALUE times. Using a |Sword¥ skill\n              increases |Shield¥ skill damage by EFFECT% for DURATION seconds,\n              stacking VALUE times.\n            </pre>\n            This is called a templating string and actual values are usually\n            inserted into it at runtime. The templating system in Chronicon is a\n            bit convoluted but if you want to see how it`&apos;s integrated in\n            ChroniconDB, feel free to look at the{' '}\n            <code>renderDescription()</code> functions in the following files:{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/blob/main/src/components/organisms/Skills/Skill/Skill.tsx\">\n              Skills\n            </a>{' '}\n            and{' '}\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/blob/main/src/components/molecules/Items/AppliedEnchant/AppliedEnchant.tsx\">\n              Enchants\n            </a>\n            .\n          </div>\n          <div>\n            <h2>ASSETS</h2>\n            If you`&apos;ve read up to here, I believe you`&apos;ll be able to\n            find them yourselves in the repository.\n            <br />\n            Think of it as your homework if you will. Hint: it`&apos;s not in\n            the Engine.\n          </div>\n\n          <p>\n            Use the data as you like, the same goes for the code. If you want to\n            take out the parsers and use them directly into your own projects,\n            do it.\n            <br />\n            <a href=\"http://www.wtfpl.net/about/\">\n              Do whatever the fuck you want\n            </a>{' '}\n            with all this.\n            <br />\n            <br />\n            That`&apos;s all I could think of for now, hope it helped.\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DevelopersTemplate;\n","import React, { FunctionComponent } from 'react';\n\nimport DevelopersTemplate from 'components/templates/Developers/DevelopersTemplate';\n\nexport const DevelopersPage: FunctionComponent = () => {\n  return (\n    <DevelopersTemplate />\n  );\n};\n\nexport default DevelopersPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport { map } from 'lodash';\nimport Drawer from 'rc-drawer';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useEngine from 'hooks/useEngine';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { EnchantCategory, EnchantType } from 'types/Enchant.types';\nimport { EnchantsFilters, FiltersType } from 'types/Filters.types';\n\nimport './Categories.scss';\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<EnchantsFilters>(FiltersType.Enchants);\n\n  const { Enchants: { categoriesByTypes, defaultCategory, defaultType } } = Engine;\n  const baseCategory = (filters.category ?? defaultCategory) as EnchantCategory;\n  const baseType = (filters.type ?? defaultType) as EnchantType;\n\n  const [selectedCategory, setSelectedCategory] = useState<EnchantCategory>(baseCategory);\n  const [selectedType, setSelectedType] = useState<EnchantType>(baseType);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-enchantTypes__menuMobile type-${selectedType.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderTypeMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderTypeMenu();\n  }\n\n  function renderCategories(type: EnchantType, enchantCategories: EnchantCategory[]) {\n    return (\n      <ul className=\"o-enchantTypes__enchantCategories\">\n        {enchantCategories.map(enchantCategory => (\n          <li\n            key={`enchant-type-${enchantCategory}`}\n            className={`o-enchantTypes__enchantCategory ${selectedCategory === enchantCategory ? 'selected' : ''}`}\n          >\n            <span\n              className=\"o-enchantTypes__enchantCategoryName\"\n              onClick={() => onCategorySelect(enchantCategory, type)}\n            >\n              {enchantCategory === EnchantCategory.Enchant ? 'Item' : enchantCategory}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderTypeMenu() {\n    return (\n      <ul className=\"o-enchantTypes\">\n        {map(categoriesByTypes, ((enchantTypes, type: EnchantType) => {\n          const isSelected = selectedType === type;\n          return (\n            <li\n              key={`enchant-type-${type}`}\n              className={`o-enchantTypes__type ${isSelected ? 'selected' : ''}`}\n            >\n              <span\n                className=\"o-enchantTypes__typeName\"\n                onClick={() => onTypeSelect(type)}\n              >\n                <Icon\n                  className=\"o-enchantTypes__typeName-arrow\"\n                  width={isSelected ? 14 : 6}\n                  height={isSelected ? 7 : 12}\n                  name={isSelected ? IconName.ArrowDownBlue : IconName.ArrowRightBlue}\n                />\n                {type}\n                <GameIcon\n                  className=\"o-enchantTypes__typeName-icon\"\n                  type={GameIconType.EnchantType}\n                  name={type.includes('/') ? 'gem' : type}\n                  width={type.includes('/') ? 20 : 28}\n                />\n              </span>\n              {renderCategories(type, enchantTypes)}\n            </li>\n          );\n        }))}\n      </ul>\n    );\n  }\n\n  function onTypeSelect(type: EnchantType) {\n    const defaultEnchantCategory = categoriesByTypes[type][0];\n\n    setSelectedType(type);\n    setSelectedCategory(defaultEnchantCategory);\n    setFilters({ type, category: defaultEnchantCategory });\n  }\n\n  function onCategorySelect(category: EnchantCategory, enchantType: EnchantType) {\n    setSelectedCategory(category);\n    setFilters({ category, type: enchantType });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default Categories;","import React, { FunctionComponent } from 'react';\n\nimport Search from 'components/atoms/Search/Search';\nimport useFilters from 'hooks/useFilters';\nimport { EnchantsFilters, FiltersType } from 'types/Filters.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<EnchantsFilters>(FiltersType.Enchants);\n\n  return (\n    <div className=\"o-enchantFilters\">\n      <Search\n        className=\"o-enchantFilters__search\"\n        placeholder=\"Search anything: Health, Movement, Weapons...\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n    </div>\n  );\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { camelCase, uniq } from 'lodash';\n\nimport Badge from 'components/atoms/Badge/Badge';\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\nimport { Enchant as EnchantInterfacee, EnchantCategory, EnchantType } from 'types/Enchant.types';\nimport { ItemRarity, ItemType } from 'types/Item.types';\n\nimport './Enchant.scss';\n\ninterface Props {\n  enchant: EnchantInterfacee,\n}\n\nconst Enchant: FunctionComponent<Props> = ({\n  enchant,\n}) => {\n  const Engine = useEngine();\n  const isGem = enchant.category === EnchantCategory.Gem;\n  // We put Gems enchants as Major Enchants\n  const type = isGem ? EnchantType.Major : enchant.type;\n\n  return (\n    <div className=\"o-enchant\">\n      <div className=\"o-enchant__header\">\n        <div className=\"o-enchant__header-content\">\n          <span className=\"o-enchant__icon\">\n            <GameIcon type={GameIconType.EnchantType} name={type} width={32} />\n          </span>\n          <div className=\"o-enchant__header-title\">\n            <h2 className=\"o-enchant__header-name\">\n              {enchant.name}\n            </h2>\n            <h3\n              className=\"o-enchant__header-category\"\n              style={{ color: `var(--color-enchant-${camelCase(type)})` }}\n            >\n              {isGem ? EnchantType.Major : type}\n              &nbsp;\n              {enchant.category === EnchantCategory.Enchant ? 'Item' : enchant.category} Enchant\n            </h3>\n          </div>\n        </div>\n        <div className=\"o-enchant__header-affixes\">\n          {enchant.affixes && uniq(enchant.affixes).map(affix => (\n            <span\n              key={`enchant-${enchant.uuid}-affix-${affix}`}\n              className=\"o-enchant__header-affix\"\n            >\n              <Badge\n                label={affix}\n                color={`var(--color-enchant-dim-${camelCase(type)})`}\n              />\n            </span>\n          ))}\n        </div>\n      </div>\n      <div className=\"o-enchant__content\">\n        <div className=\"o-enchant__content-main\">\n          <div className=\"o-enchant__description\">\n            {renderDescription()}\n          </div>\n          <div className=\"o-enchant__ranges\">\n            {renderRanges()}\n          </div>\n        </div>\n        <div className=\"o-enchant__content-sub\">\n          <h3 className=\"o-enchant__itemTypes-title\">\n            Can be applied to:\n          </h3>\n          <ul>\n            {enchant.itemTypes.map(itemType => (\n              <li\n                key={`enchant-${enchant.uuid}-itemType-${itemType}`}\n                className=\"o-enchant__itemType\"\n              >\n                <Link to={{\n                  pathname: '/items',\n                  search: `?itemsType=${itemType}&itemsCategory=${Engine.Items.categoriesByType[itemType]}`,\n                }}>\n                  {itemType === ItemType.Rune ? 'Rune' : itemType}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderRanges() {\n    if (isGem) {\n      return (\n        <div className=\"o-enchant__ranges-column full\">\n          {renderRange(ItemRarity.Rare)}\n          {renderRange(ItemRarity.Enchanted)}\n          {renderRange(ItemRarity.Ordinary)}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"o-enchant__ranges-column\">\n          {renderRange(ItemRarity.TrueLegendary)}\n          {renderRange(ItemRarity.Legendary)}\n          {renderRange(ItemRarity.Unique)}\n        </div>\n        <div className=\"o-enchant__ranges-column\">\n          {renderRange(ItemRarity.Rare)}\n          {renderRange(ItemRarity.Enchanted)}\n          {renderRange(ItemRarity.Ordinary)}\n        </div>\n      </>\n    );\n  }\n\n  function renderRange(rarity: ItemRarity) {\n    const rolls = enchant.ranges[rarity];\n\n    return (\n      <div key={`epool-rolls-${rarity}`} className=\"o-enchant__rolls\">\n        <strong\n          className=\"o-enchant__rolls-rarity\"\n          style={{ color: `var(--color-item-${camelCase(rarity)})` }}\n        >\n          {rarity}\n        </strong>\n        <ul>\n          <li className=\"o-enchant__roll\">\n            <span className=\"o-enchant__roll-header\">\n                Roll range\n            </span>\n            <em className=\"o-enchant__roll-roll\">\n              {rolls.minimum} - {rolls.maximum}\n            </em>\n          </li>\n          <li className=\"o-enchant__roll\">\n            <span className=\"o-enchant__roll-header\">\n                Augment caps\n            </span>\n            <em className=\"o-enchant__roll-roll\">\n              {rolls.cap} - {rolls.greaterCap}\n            </em>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  // TODO: Refactor with AppliedEnchant and enchant page\n  function renderDescription() {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"o-enchant__description-enchant-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i, offset) => {\n        const skillId = parseInt(match);\n        const skillName = Engine.Skills.find(skillId)?.name;\n\n        if (skillName) {\n          return (\n            <Link\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"o-enchant__description-enchant-skill\"\n            >\n              {skillName}\n            </Link>\n          );\n        } else {\n          return (\n            <Link\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"o-enchant__description-enchant-skill unknown\"\n            >\n              Unknown Skill\n            </Link>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    return finalNodes;\n  }\n};\n\nexport default Enchant;","import React, { FunctionComponent } from 'react';\n\nimport Enchant from 'components/organisms/Enchants/Enchant/Enchant';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\nimport { Enchant as EnchantInterface } from 'types/Enchant.types';\n\nimport './List.scss';\n\ninterface Props {\n  enchants: EnchantInterface[];\n}\n\n// TODO: Header should be a reusable component between lists\nconst List: FunctionComponent<Props> = ({\n  enchants,\n}) => {\n  const { paginatedData, InfiniteScroll } =  useInfiniteScroll<EnchantInterface>(enchants, 10);\n\n  return (\n    <div className=\"o-enchantsList\">\n      {enchants.length > 0 ? (\n        <>\n          <div className=\"o-enchantsList__header\">\n            <div className=\"o-enchantsList__header__items\">\n              <h3 className=\"o-enchantsList__header__thead\">\n                Enchant\n              </h3>\n              <h3 className=\"o-enchantsList__header__thead\">\n                Affixes\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-enchantsList__container\">\n            <div className=\"o-enchantsList__enchants\">\n              <InfiniteScroll>\n                {paginatedData.map(enchant => (\n                  <Enchant key={`enchant-${enchant.uuid}`} enchant={enchant} />\n                ))}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"o-enchantsList__noEnchant\">\n          No Enchant was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Enchants/Categories/Categories';\nimport Filters from 'components/organisms/Enchants/Filters/Filters';\nimport List from 'components/organisms/Enchants/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\nimport './EnchantsTemplate.scss';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nconst EnchantsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n  const enchants = getFilteredEnchants();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-enchants__wrapper\">\n        <Categories />\n        <div className=\"t-enchants__list\">\n          <List enchants={enchants} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredEnchants() {\n    return Engine.Enchants.all({\n      search: filtersStore.enchants.search,\n      type: filtersStore.enchants.type,\n      category: filtersStore.enchants.category,\n    });\n  }\n};\n\nexport default observer(EnchantsTemplate);\n","import React, { FunctionComponent } from 'react';\n\nimport EnchantsTemplate from 'components/templates/Enchants/EnchantsTemplate';\nimport useSeo from 'hooks/useSeo';\n\nconst EnchantsPage: FunctionComponent = () => {\n  const Seo = useSeo({\n    title: 'Enchants database',\n    description: 'Find all the enchants you need to craft your dream items.',\n  });\n\n  return (\n    <>\n      <Seo />\n      <EnchantsTemplate />\n    </>\n  );\n};\n\nexport default EnchantsPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport './Tabs.scss';\n\nexport interface TabsNavItem {\n  label: string;\n  color: string;\n  borderColor?: string;\n  hoverColor?: string;\n}\n\ninterface Props {\n  className?: string;\n  defaultItem?: number;\n  navItems: TabsNavItem[];\n}\n\n// TODO: Should definitely handle colors differently, this is disgusting\nconst EnchantsPool: FunctionComponent<Props> = ({\n  className,\n  navItems,\n  defaultItem,\n  children,\n}) => {\n  const [currentTab, setCurrentTab] = useState(defaultItem || 0);\n\n  React.useEffect(() => {\n    setCurrentTab(defaultItem || 0);\n  }, [defaultItem]);\n\n  return (\n    <div className={`m-tabs ${className ? className : ''}`}>\n      <ul className=\"m-tabs__navigation\">\n        {navItems.map((navItem: TabsNavItem, index) => (\n          <li\n            key={`tab-${navItem.label}-${index}`}\n            className={`m-tabs__navigation-tab ${currentTab === index ? 'selected' : ''}`}\n            style={{\n              '--box-shadow-color': navItem.hoverColor || navItem.color,\n              color: navItem.color,\n              borderColor: navItem.borderColor || navItem.color,\n            } as React.CSSProperties}\n            onClick={() => onTabClick(index)}\n          >\n            {navItem.label}\n          </li>\n        ))}\n      </ul>\n\n      {React.Children.map(children, node => (\n        <div key={`tabPanel-${currentTab}`}>\n          {node}\n        </div>\n      ))?.filter((_, i) => i === currentTab)}\n    </div>\n  );\n\n  function onTabClick(index: number) {\n    setCurrentTab(index);\n  }\n\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent, useState } from 'react';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { pickBy, map, camelCase, isString } from 'lodash';\n\nimport Tabs from 'components/molecules/Tabs/Tabs';\nimport useEngine from 'hooks/useEngine';\nimport { CraftableEnchantTypes, EnchantType, Enchant } from 'types/Enchant.types';\nimport { ItemType, ItemRarity } from 'types/Item.types';\n\nimport './ItemsEnchantsPool.scss';\n\ninterface Props {\n  type: ItemType,\n}\n\nconst ItemsEnchantsPool: FunctionComponent<Props> = ({\n  type,\n}) => {\n  const Engine = useEngine();\n  const enchantsPool = Engine.Enchants.getTypeEnchantsPool(type);\n  const availableEnchantTypes = (enchantsPool ?\n    Object.keys(pickBy(enchantsPool, pool => pool.length > 0))\n    : []\n  ) as CraftableEnchantTypes[];\n  const [currentEnchant, setCurrentEnchant] = useState<Enchant | null>(null);\n\n  return (\n    <div className=\"m-enchantsPool\">\n      {enchantsPool ? (\n        <div className=\"m-enchantsPool__content\">\n          <Tabs\n            navItems={availableEnchantTypes.map(enchantType => ({\n              label: enchantType,\n              color: `var(--color-enchant-${enchantType.toLowerCase()})`,\n              borderColor: enchantType === EnchantType.Minor ?\n                'var(--color-element-mid-beige)' :\n                `var(--color-enchant-${enchantType.toLowerCase()})`,\n              hoverColor: `var(--color-enchant-dim-${enchantType.toLowerCase()})`,\n            }))}\n          >\n            {availableEnchantTypes.map((enchantType) => {\n              return (\n                <div key={`pool-${enchantType}`}>\n                  {renderPoolForType(enchantType)}\n                </div>\n              );\n            })}\n          </Tabs>\n\n        </div>\n      ) : (\n        <div className=\"m-enchantsPool__none\">\n          {type}s are not enchantable\n        </div>\n      )}\n    </div>\n  );\n\n  function renderPoolForType(type: CraftableEnchantTypes) {\n    if (!enchantsPool) {\n      return null;\n    }\n\n    return enchantsPool[type].map((enchant) => {\n      const isSelected = currentEnchant?.uuid === enchant.uuid;\n\n      return (\n        <div\n          key={`epool-${type}-${enchant.uuid}`}\n          className={`m-enchantsPool__enchant etype-${type.toLowerCase()} ${isSelected ? 'expanded' : ''}`}\n        >\n          <span\n            className=\"m-enchantsPool__enchant-name\"\n            onClick={() => setCurrentEnchant(isSelected ? null : enchant)}\n          >\n            {enchant.name}\n          </span>\n          {isSelected && (\n            <div className=\"m-enchantsPool__enchant__data\">\n              <strong className=\"m-enchantsPool__enchant__data-description\">\n                {renderDescription(enchant)}\n              </strong>\n              {map(enchant.ranges, (rolls, rarity) => {\n                if (rarity === ItemRarity.Mythical) {\n                  return null;\n                }\n\n                return (\n                  <div key={`epool-rolls-${rarity}`} className=\"m-enchantsPool__enchant__rolls\">\n                    <strong\n                      className=\"m-enchantsPool__enchant__rolls-rarity\"\n                      style={{ color: `var(--color-item-${camelCase(rarity)})` }}\n                    >\n                      {rarity}\n                    </strong>\n                    <ul>\n                      <li className=\"m-enchantsPool__enchant__roll\">\n                        <span className=\"m-enchantsPool__enchant__roll-header\">\n                    Roll range\n                        </span>\n                        <em className=\"m-enchantsPool__enchant__roll-roll\">\n                          {rolls.minimum} - {rolls.maximum}\n                        </em>\n                      </li>\n                      <li className=\"m-enchantsPool__enchant__roll\">\n                        <span className=\"m-enchantsPool__enchant__roll-header\">\n                    Augment caps\n                        </span>\n                        <em className=\"m-enchantsPool__enchant__roll-roll\">\n                          {rolls.cap} - {rolls.greaterCap}\n                        </em>\n                      </li>\n                    </ul>\n                  </div>\n                );\n              }).reverse()}\n\n            </div>\n          )}\n        </div>\n      );\n    });\n  }\n\n  // TODO: Refactor with AppliedEnchant and Enchant page\n  function renderDescription(enchant: Enchant) {\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-enchantsPool__enchant__data-description-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (replacedRanges && isString(replacedRanges[0]) && !replacedRanges[0].match(/^\\+/)) {\n      replacedRanges[0] = `- ${replacedRanges[0]}`;\n    }\n\n    return replacedRanges;\n  }\n};\n\nexport default ItemsEnchantsPool;","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { isString } from 'lodash';\n\nimport Tabs from 'components/molecules/Tabs/Tabs';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\nimport { EnchantType, Enchant } from 'types/Enchant.types';\nimport { ItemRarity } from 'types/Item.types';\n\nimport './RunesEnchantsPool.scss';\n\nconst EnchantsPool: FunctionComponent = () => {\n  const Engine = useEngine();\n  const enchantsPool = Engine.Enchants.getRunesEnchantsPool();\n  const availableEnchantTypes = [EnchantType.Legendary];\n  const [currentEnchant, setCurrentEnchant] = useState<Enchant | null>(null);\n\n  return (\n    <div className=\"m-runesEnchantsPool\">\n      <div className=\"m-runesEnchantsPool__content\">\n        <Tabs\n          navItems={availableEnchantTypes.map(enchantType => ({\n            label: enchantType,\n            color: `var(--color-enchant-${enchantType.toLowerCase()})`,\n            borderColor: enchantType === EnchantType.Minor ?\n              'var(--color-element-mid-beige)' :\n              `var(--color-enchant-${enchantType.toLowerCase()})`,\n            hoverColor: `var(--color-enchant-dim-${enchantType.toLowerCase()})`,\n          }))}\n        >\n          {availableEnchantTypes.map((enchantType) => {\n            return (\n              <div key={`pool-${enchantType}`}>\n                {renderPool()}\n              </div>\n            );\n          })}\n        </Tabs>\n      </div>\n    </div>\n  );\n\n  function renderPool() {\n    return enchantsPool.map((enchant) => {\n      const isSelected = currentEnchant?.uuid === enchant.uuid;\n      const rolls = enchant.ranges[ItemRarity.TrueLegendary];\n\n      return (\n        <div\n          key={`epool-legendary-${enchant.uuid}`}\n          className={`m-runesEnchantsPool__enchant etype-legendary ${isSelected ? 'expanded' : ''}`}\n        >\n          <span\n            className=\"m-runesEnchantsPool__enchant-name\"\n            onClick={() => setCurrentEnchant(isSelected ? null : enchant)}\n          >\n            {enchant.name}\n          </span>\n          {isSelected && (\n            <div className=\"m-runesEnchantsPool__enchant__data\">\n              <strong className=\"m-runesEnchantsPool__enchant__data-description\">\n                {renderDescription(enchant)}\n              </strong>\n\n              <div key={`epool-rolls-trueLegendary`} className=\"m-runesEnchantsPool__enchant__rolls\">\n                <ul>\n                  <li className=\"m-runesEnchantsPool__enchant__roll\">\n                    <span className=\"m-runesEnchantsPool__enchant__roll-header\">\n                      Roll range\n                    </span>\n                    <em className=\"m-runesEnchantsPool__enchant__roll-roll\">\n                      {rolls.minimum} - {rolls.maximum}\n                    </em>\n                  </li>\n                  <li className=\"m-runesEnchantsPool__enchant__roll\">\n                    <span className=\"m-runesEnchantsPool__enchant__roll-header\">\n                      Augment caps\n                    </span>\n                    <em className=\"m-runesEnchantsPool__enchant__roll-roll\">\n                      {rolls.cap} - {rolls.greaterCap}\n                    </em>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    });\n  }\n\n  // TODO: Refactor with AppliedEnchant and enchant page\n  function renderDescription(enchant: Enchant) {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-runesEnchantsPool__enchant__data-description-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i, offset) => {\n        const skillId = parseInt(match);\n        const skillName = Engine.Skills.find(skillId)?.name;\n\n        if (skillName) {\n          return (\n            <Link\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"m-runesEnchantsPool__enchant__data-description-skill\"\n            >\n              {skillName}\n            </Link>\n          );\n        } else {\n          return (\n            <Link\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"m-runesEnchantsPool__enchant__data-description-skill unknown\"\n            >\n              Unknown Skill\n            </Link>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (finalNodes && isString(finalNodes[0]) && !finalNodes[0].match(/^\\+/)) {\n      finalNodes[0] = `- ${finalNodes[0]}`;\n    }\n\n    return finalNodes;\n  }\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent } from 'react';\n\nimport Drawer from 'rc-drawer';\n\nimport ItemsEnchantsPool from 'components/molecules/Items/ItemsEnchantsPool/ItemsEnchantsPool';\nimport RunesEnchantsPool from 'components/molecules/Items/RunesEnchantsPool/RunesEnchantsPool';\nimport useResponsive from 'hooks/useResponsive';\nimport { ItemType } from 'types/Item.types';\n\nimport './EnchantsPool.scss';\n\ninterface Props {\n  itemType: ItemType;\n}\n\nconst EnchantsPool: FunctionComponent<Props> = ({\n  itemType,\n}) => {\n  const { isUpToTablet } = useResponsive();\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        className={`o-enchantsPool__enchantsPoolMobile`}\n        width=\"80vw\"\n        placement={'left'}\n      >\n        <div className=\"o-enchantsPool__possibleEnchants\">\n          <div className=\"o-enchantsPool__title\">\n            Possible enchants\n          </div>\n          {itemType === ItemType.Rune ? (\n            <RunesEnchantsPool />\n          ) : (\n            <ItemsEnchantsPool type={itemType} />\n          )}\n        </div>\n      </Drawer>\n    );\n  }\n\n  return (\n    <div className=\"o-enchantsPool__possibleEnchants\">\n      {itemType === ItemType.Rune ? (\n        <RunesEnchantsPool />\n      ) : (\n        <ItemsEnchantsPool type={itemType} />\n      )}\n    </div>\n  );\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { isString } from 'lodash';\n\nimport { RoutePath } from 'routes';\nimport { SimpleEnchant } from 'types/Enchant.types';\nimport { Item } from 'types/Item.types';\n\nimport './AppliedEnchant.scss';\n\ninterface Props {\n  item: Item\n  enchant: SimpleEnchant;\n}\n\nconst AppliedEnchant: FunctionComponent<Props> = ({\n  item,\n  enchant,\n}) => {\n  return (\n    <li className=\"m-appliedEnchant\">\n      {descriptionToTemplate()}\n    </li>\n  );\n\n  // TODO: Refactor with EnchantsPool\n  function descriptionToTemplate() {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${item.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-appliedEnchant__range\"\n        >\n          {renderRange()}\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i, offset) => {\n        const skillId = parseInt(match);\n        const skillName = enchant.skills ? enchant.skills[skillId] : null;\n        if (skillName) {\n          return (\n            <Link\n              key={`tpl-${item.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"m-appliedEnchant__skill\"\n            >\n              {skillName}\n            </Link>\n          );\n        } else {\n          return (\n            <Link\n              key={`tpl-${item.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"m-appliedEnchant__skill unkown\"\n            >\n            Unknown Skill\n            </Link>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (finalNodes && isString(finalNodes[0]) && !finalNodes[0].match(/^\\+/)) {\n      finalNodes[0] = `- ${finalNodes[0]}`;\n    }\n\n    return finalNodes;\n  }\n\n  function renderRange() {\n    if (enchant.min === enchant.max) {\n      return (\n        <em className=\"m-appliedEnchant__max\">{enchant.max}</em>\n      );\n    } else {\n      return (\n        <>\n          [<em className=\"m-appliedEnchant__min\">{enchant.min}</em>-<em className=\"m-appliedEnchant__max\">{enchant.max}</em>]\n        </>\n      );\n    }\n  }\n};\n\nexport default AppliedEnchant;","import React, { FunctionComponent } from 'react';\n\nimport { ItemEnchantSlot, EnchantType } from 'types/Enchant.types';\nimport { Item } from 'types/Item.types';\n\nimport './EnchantSlot.scss';\n\ninterface Props {\n  item: Item;\n  enchantSlot: ItemEnchantSlot;\n}\n\nconst EnchantSlot: FunctionComponent<Props> = ({\n  item,\n  enchantSlot,\n}) => {\n  return (\n    <li className=\"m-enchantSlot\">\n      +<em className=\"m-enchantSlot__count\">{enchantSlot.count}</em>&nbsp;\n      {formattedTypes()}&nbsp;\n      {enchantSlot.count > 1 ? 'enchants' : 'enchant'}\n    </li>\n  );\n\n  function formattedTypes() {\n    const renderSlotType = (type: EnchantType) => (\n      <em\n        key={`${item.uuid}-slot-${type}`}\n        className=\"m-enchantSlot__type\"\n        style={{ color: `var(--color-enchant-${type.toLowerCase()})` }}\n      >\n        {type}\n      </em>\n    );\n\n    return enchantSlot\n      .types\n      .map<React.ReactNode>(renderSlotType)\n      .reduce((prev, curr) => [prev, ' or ', curr]);\n  }\n};\n\nexport default EnchantSlot;","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { map } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport { ItemSetData } from 'engine/EngineItems';\nimport { RoutePath } from 'routes';\n\nimport './Set.scss';\n\ninterface Props {\n  set: ItemSetData,\n  setCollapsed?: boolean,\n}\n\nconst ItemSet: FunctionComponent<Props> = ({\n  set,\n  setCollapsed = true,\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(setCollapsed);\n\n  return (\n    <div className=\"m-itemSet\">\n      <div\n        className=\"m-itemSet__nameContainer\"\n        onClick={() => setIsCollapsed(!isCollapsed)}\n      >\n        Set: <span className=\"m-itemSet__name\">{set.name}</span>\n        <span className={`m-itemSet__collapseIcon ${isCollapsed ? '' : 'expanded'}`}>\n          {isCollapsed ? (\n            <Icon name={IconName.ArrowRightYellow} width={6} height={12} />\n          ) : (\n            <Icon name={IconName.ArrowDownYellow} width={14} height={7} />\n          )}\n        </span>\n      </div>\n      <div className={`m-itemSet__contentContainer ${isCollapsed ? '' : 'expanded'}`}>\n        <div className=\"m-itemSet__content\">\n          <div className=\"m-itemSet__setInfo\">\n            <strong className=\"m-itemSet__setInfo-itemTypes\">\n              {set.types.join(', ')}\n            </strong>\n            <ul className=\"m-itemSet__setInfo-bonuses\">\n              {map(set.bonuses, (bonus, piecesCount) => (\n                <li\n                  key={`set-bonus-${set.uuid}-${piecesCount}`}\n                  className=\"m-itemSet__setInfo-bonus\"\n                >\n                  <em className=\"m-itemSet__setInfo-bonus-count\">{piecesCount})</em>\n                  {bonus}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <ul className=\"m-itemSet__itemsInfo\">\n            {set.items.map(item => (\n              <li\n                key={`set-items-${set.uuid}-${item.uuid}`}\n              >\n                <Link to={RoutePath.Item.replace(':uuid', item.uuid.toString())} className=\"m-itemSet__itemsInfo-item\">\n                  {item.icon && (\n                    <GameIcon type={GameIconType.Item} name={item.icon} width={18} />\n                  )}\n                  <em className=\"m-itemSet__itemsInfo-item-name\">\n                    {item.name}\n                  </em>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemSet;","import React, { Fragment, FunctionComponent, useMemo } from 'react';\n\nimport { camelCase, map } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport AppliedEnchant from 'components/molecules/Items/AppliedEnchant/AppliedEnchant';\nimport EnchantSlot from 'components/molecules/Items/EnchantSlot/EnchantSlot';\nimport useEngine from 'hooks/useEngine';\nimport { Item as ItemInterface, ItemCategory, ItemType } from 'types/Item.types';\n\nimport './DownloadableItem.scss';\n\ninterface Props {\n  item: ItemInterface,\n  setCollapsed?: boolean,\n}\n\nconst Item: FunctionComponent<Props> = ({\n  item,\n}) => {\n  const Engine = useEngine();\n  const itemEnchants = useMemo(() => Engine.Enchants.getItemEnchantsSlots(item), [item]);\n  const itemSetData = useMemo(() => Engine.Items.getSetData(item), [item]);\n  const classRestriction = item.classRestriction || 'Any Class';\n\n  return (\n    <div className=\"o-downloadableItem__container\">\n      <div className=\"o-downloadableItem\">\n        <div className=\"o-downloadableItem__header\">\n          <div className=\"o-downloadableItem__header-content\">\n            <span className=\"o-downloadableItem__icon\">\n              {item.icon && (\n                <GameIcon type={GameIconType.Item} name={item.icon} width={32} />\n              )}\n            </span>\n            <div className=\"o-downloadableItem__header-title\">\n              <h2\n                className=\"o-downloadableItem__name\"\n                style={{ color: `var(--color-item-${camelCase(item.rarity)})` }}\n              >\n                {item.name}\n              </h2>\n              <h3\n                className=\"o-downloadableItem__rarity\"\n\n              >\n                {item.rarity} {item.type}\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-downloadableItem__header-req\">\n            <span>\n              Level: {item.minLevel}\n            </span>\n            {classRestriction} Item\n          </div>\n        </div>\n        <div className=\"o-downloadableItem__content\">\n          {item.description && (\n            <div className=\"o-downloadableItem__description\">\n              {item.description}\n            </div>\n          )}\n          {itemEnchants &&(\n            <div className=\"o-downloadableItem__enchants\">\n              {renderBaseEnchants()}\n            </div>\n          )}\n          {itemSetData && (\n            <div className=\"o-downloadableItem__set\">\n              <span className=\"o-downloadableItem__set-name\">Set: {itemSetData.name}</span>\n              <div className=\"o-downloadableItem__setInfo\">\n                <strong className=\"o-downloadableItem__setInfo-itemTypes\">\n                  {itemSetData.types.join(', ')}\n                </strong>\n                <ul className=\"o-downloadableItem__setInfo-bonuses\">\n                  {map(itemSetData.bonuses, (bonus, piecesCount) => (\n                    <li\n                      key={`set-bonus-${itemSetData.uuid}-${piecesCount}`}\n                      className=\"o-downloadableItem__setInfo-bonus\"\n                    >\n                      <em className=\"o-downloadableItem__setInfo-bonus-count\">{piecesCount})</em>\n                      {bonus}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          )}\n          {itemEnchants &&\n            <div className=\"o-downloadableItem__enchants\">\n              <div className=\"o-downloadableItem__enchants__slotsContainer\">\n                {renderFixedEnchants()}\n                {renderEnchantsSlots()}\n              </div>\n            </div>\n          }\n          {item.flavor && (\n            <div className=\"o-downloadableItem__flavor\">\n              {item.flavor}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderBaseEnchants() {\n    return itemEnchants && itemEnchants.baseEnchants?.length > 0 && (\n      <ul className=\"o-downloadableItem__enchants__base\">\n        {itemEnchants.baseEnchants?.map((enchant, index) => (\n          <AppliedEnchant\n            key={`${item.uuid}-ebase-${index}`}\n            item={item}\n            enchant={enchant}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  function renderFixedEnchants() {\n    const isGem = item.category === ItemCategory.Gem;\n    // TODO: Extract to a proper dataMapping\n    const enchantForType = ['Weapon/Offhand', 'Helm/Armor/Boots', 'Amulet/Ring/Accessory'];\n\n    return itemEnchants && (\n      <ul className=\"o-downloadableItem__enchants__fixed\">\n        {itemEnchants.fixedEnchants?.map((enchant, index) => (\n          <Fragment key={`fr-${item.uuid}-fbase-${index}`}>\n            {isGem && <span className=\"o-downloadableItem__enchants__fixed-label\">{enchantForType[index]}</span>}\n            <AppliedEnchant\n              item={item}\n              key={`${item.uuid}-fbase-${index}`}\n              enchant={enchant}\n            />\n          </Fragment>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderEnchantsSlots() {\n    return itemEnchants && (\n      <ul className=\"o-downloadableItem__enchants__slots\">\n        {itemEnchants.enchantSlots?.map((slot, index) => {\n          return (!slot.categoriesRestriction || slot.categoriesRestriction.includes(item.category)) && (\n            <EnchantSlot\n              key={`${item.uuid}-eslot-${index}`}\n              item={item}\n              enchantSlot={slot}\n            />\n          );\n        })}\n        {[ItemType.Helm, ItemType.Armor, ItemType.Boots].includes(item.type) &&\n          <li className=\"o-downloadableItem__enchants__slots-replace\">\n            <em className=\"o-downloadableItem__enchants__slots-replace-chance\">25%</em> chance to replace 1 <em style={{ color: 'var(--color-enchant-major)' }}>Major</em> with 1 <em style={{ color: 'var(--color-enchant-epic)' }}>Epic</em>\n          </li>\n        }\n      </ul>\n    );\n  }\n};\n\nexport default Item;","import React, { createRef, FunctionComponent, useState, useEffect } from 'react';\nimport { Tooltip } from 'react-tippy';\n\nimport useAsDownloadableImage from 'hooks/useAsDownloadableImage';\nimport { Item } from 'types/Item.types';\n\nimport DownloadableItem from './DownloadableItem/DownloadableItem';\n\nimport './ItemDownloader.scss';\n\nconst ItemDownloader: FunctionComponent<{ item: Item }> = ({\n  item,\n}) => {\n  const elementRef = createRef<HTMLDivElement>();\n  const [renderItem, setRenderItem] = useState(false);\n  const download = useAsDownloadableImage(elementRef, { height: '100%', opacity: '1', width: 'auto' });\n\n  useEffect(() => {\n    if (renderItem) {\n      download(item.name, () => {\n        setRenderItem(false);\n      });\n\n      // If the item hasn't downloaded after 4 seconds, cancel.\n      setTimeout(() => setRenderItem(false), 4000);\n    }\n  });\n\n  return (\n    <span className=\"o-itemDownloader\" title=\"Download as an image\">\n      {renderItem ? (\n        <span className=\"o-itemDownloader__icon\">\n          <svg style={{ display: 'block' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"-5 0 50 35\" stroke=\"#dc9d63\">\n            <g fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(1 1)\" strokeWidth=\"8\">\n                <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"/>\n                <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                </path>\n              </g>\n            </g>\n          </svg>\n        </span>\n      ) : (\n        <span className=\"o-itemDownloader__icon\" onClick={() => setRenderItem(true)}>\n          <Tooltip\n            title=\"Download item as an image\"\n            position=\"right\"\n            arrow={true}\n            distance={0}\n            offset={-10}\n            size=\"small\"\n          >\n            <svg style={{ display: 'block' }} xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\" width=\"18\" height=\"18\">\n              <g>\n                <path fill=\"#DECFB0\" d=\"M412.907,214.08C398.4,140.693,333.653,85.333,256,85.333c-61.653,0-115.093,34.987-141.867,86.08    C50.027,178.347,0,232.64,0,298.667c0,70.72,57.28,128,128,128h277.333C464.213,426.667,512,378.88,512,320    C512,263.68,468.16,218.027,412.907,214.08z M256,384L149.333,277.333h64V192h85.333v85.333h64L256,384z\"/>\n              </g>\n            </svg>\n          </Tooltip>\n        </span>\n      )}\n      {renderItem && (\n        <div className=\"o-itemDownloader__item\" ref={elementRef} style={{ height: '0', opacity: '0', width: '0' }}>\n          <DownloadableItem item={item} />\n        </div>\n      )}\n    </span>\n  );\n};\n\nexport default ItemDownloader;","import { useState, useEffect, RefObject, CSSProperties } from 'react';\n\nimport { saveAs } from 'file-saver';\nimport { toBlob } from 'html-to-image';\n\nexport default function useAsDownloadableImage(node: RefObject<HTMLElement>, style: CSSProperties): (name: string, callback?: () => void) => void {\n  const [blob, setBlob] = useState<Blob>();\n\n  useEffect(() => {\n    // Make sure the node.current render is finished\n    setTimeout(() => {\n      if (node.current) {\n        // @ts-ignore\n        toBlob(node.current, { pixelRatio: 1, style })\n          .then((blob) => {\n            if (blob) {\n              setBlob(blob);\n            }\n          });\n      }\n    }, 500);\n  }, [node, style]);\n\n  return (name: string, callback?: () => void) => {\n    if (blob) {\n      saveAs(blob, `${name}.png`);\n      callback && callback();\n    }\n  };\n}\n","import React, { Fragment, FunctionComponent, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from 'react-tippy';\n\nimport { camelCase } from 'lodash';\n\nimport Badge from 'components/atoms/Badge/Badge';\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport AppliedEnchant from 'components/molecules/Items/AppliedEnchant/AppliedEnchant';\nimport EnchantSlot from 'components/molecules/Items/EnchantSlot/EnchantSlot';\nimport ItemSet from 'components/molecules/Items/Set/Set';\nimport ItemDownloader from 'components/organisms/ItemDownloader/ItemDownloader';\nimport { ITEM_TYPES_WITH_EPIC_REPLACEMENT_CHANCE } from 'engine/EngineItems';\nimport useEngine from 'hooks/useEngine';\nimport useResponsive from 'hooks/useResponsive';\nimport { RoutePath } from 'routes';\nimport { CharacterClass } from 'types/Character.types';\nimport { Item as ItemInterface, ItemCategory, ItemRarity } from 'types/Item.types';\n\nimport './Item.scss';\n\ninterface Props {\n  item: ItemInterface,\n  setCollapsed?: boolean,\n}\n\nconst Item: FunctionComponent<Props> = ({\n  item,\n  setCollapsed,\n}) => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const itemEnchants = useMemo(() => Engine.Enchants.getItemEnchantsSlots(item), [item]);\n  const itemSetData = useMemo(() => Engine.Items.getSetData(item), [item]);\n  const classRestriction = item.classRestriction || 'Any Class';\n\n  return (\n    <div className=\"o-item__container\">\n      <div className=\"o-item\">\n        <div className=\"o-item__header\">\n          <div className=\"o-item__header-content\">\n            <span className=\"o-item__icon\">\n              {item.icon && (\n                <GameIcon type={GameIconType.Item} name={item.icon} width={32} />\n              )}\n            </span>\n            <div className=\"o-item__header-title\">\n              <h2 className=\"o-item__name\">\n                <Link to={RoutePath.Item.replace(':uuid', item.uuid.toString())} className=\"o-item__header-title-link\">\n                  {item.name}\n                </Link>\n                <ItemDownloader item={item} />\n              </h2>\n              <h3\n                className=\"o-item__rarity\"\n                style={{ color: `var(--color-item-${camelCase(item.rarity)})` }}\n              >\n                {item.rarity} {item.type}\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-item__header-req\">\n            <span className=\"o-item__header-req-badge\">\n              {renderBadges(classRestriction)}\n            </span>\n            <span>\n              LVL. {item.minLevel}\n            </span>\n          </div>\n        </div>\n        <div className=\"o-item__content\">\n          {item.description && (\n            <div className=\"o-item__description\">\n              {item.description}\n            </div>\n          )}\n          {itemEnchants &&\n            <div className=\"o-item__enchants\">\n              {renderBaseEnchants()}\n              <div className=\"o-item__enchants__slotsContainer\">\n                {renderFixedEnchants()}\n                {renderEnchantsSlots()}\n              </div>\n            </div>\n          }\n          {item.flavor && (\n            <div className=\"o-item__flavor\">\n              {item.flavor}\n            </div>\n          )}\n        </div>\n        {itemSetData && (\n          <div className=\"o-item__set\">\n            <ItemSet set={itemSetData} setCollapsed={setCollapsed} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  function renderBadges(classRestriction: CharacterClass | 'Any Class') {\n    // Mobile has less space\n    if (isUpToTablet) {\n      return (\n        <Badge\n          label={classRestriction}\n          color={`var(--color-class-${camelCase(classRestriction)})`}\n        />\n      );\n    }\n\n    if (classRestriction === 'Any Class') {\n      return (\n        <Tooltip\n          title={classRestriction}\n          position=\"bottom\"\n          arrow={true}\n          distance={5}\n          offset={0}\n          size=\"small\"\n        >\n          {[CharacterClass.Templar, CharacterClass.Berserker, CharacterClass.Warlock, CharacterClass.Warden].map(charClass => (\n            <GameIcon\n              key={`item-${item.uuid}-req-class-${charClass.toLowerCase()}`}\n              type={GameIconType.ClassProfile}\n              name={charClass.toLowerCase()}\n              height={28}\n            />\n          ))}\n        </Tooltip>\n      );\n    } else {\n      return (\n        <Tooltip\n          title={classRestriction}\n          position=\"bottom\"\n          arrow={true}\n          distance={5}\n          offset={0}\n          size=\"small\"\n        >\n          <GameIcon\n            type={GameIconType.ClassProfile}\n            name={classRestriction.toLowerCase()}\n            height={28}\n          />\n        </Tooltip>\n      );\n    }\n  }\n\n  function renderBaseEnchants() {\n    return itemEnchants && itemEnchants.baseEnchants?.length > 0 && (\n      <ul className=\"o-item__enchants__base\">\n        {itemEnchants.baseEnchants?.map((enchant, index) => (\n          <AppliedEnchant\n            key={`${item.uuid}-ebase-${index}`}\n            item={item}\n            enchant={enchant}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  function renderFixedEnchants() {\n    const isGem = item.category === ItemCategory.Gem;\n    // TODO: Extract to a proper dataMapping\n    const enchantForType = ['Weapon/Offhand', 'Helm/Armor/Boots', 'Amulet/Ring/Accessory'];\n\n    return itemEnchants && (\n      <ul className=\"o-item__enchants__fixed\">\n        {itemEnchants.fixedEnchants?.map((enchant, index) => (\n          <Fragment key={`fr-${item.uuid}-fbase-${index}`}>\n            {isGem && <span className=\"o-item__enchants__fixed-label\">{enchantForType[index]}</span>}\n            <AppliedEnchant\n              item={item}\n              key={`${item.uuid}-fbase-${index}`}\n              enchant={enchant}\n            />\n          </Fragment>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderEnchantsSlots() {\n    return itemEnchants && (\n      <ul className=\"o-item__enchants__slots\">\n        {itemEnchants.enchantSlots?.map((slot, index) => {\n          return (!slot.categoriesRestriction || slot.categoriesRestriction.includes(item.category)) && (\n            <EnchantSlot\n              key={`${item.uuid}-eslot-${index}`}\n              item={item}\n              enchantSlot={slot}\n            />\n          );\n        })}\n        {ITEM_TYPES_WITH_EPIC_REPLACEMENT_CHANCE.includes(item.type) &&\n         item.rarity !== ItemRarity.Ordinary &&\n          <li className=\"o-item__enchants__slots-replace\">\n            <em className=\"o-item__enchants__slots-replace-chance\">25%</em> chance to replace 1 <em style={{ color: 'var(--color-enchant-major)' }}>Major</em> with 1 <em style={{ color: 'var(--color-enchant-epic)' }}>Epic</em>\n          </li>\n        }\n      </ul>\n    );\n  }\n};\n\nexport default Item;","import React, { FunctionComponent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport EnchantsPool from 'components/organisms/Items/EnchantsPool/EnchantsPool';\nimport Item from 'components/organisms/Items/Item/Item';\nimport useEngine from 'hooks/useEngine';\nimport useSeo from 'hooks/useSeo';\nimport { RoutePath } from 'routes';\n\nimport './ItemTemplate.scss';\n\nconst ItemTemplate: FunctionComponent = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const Engine = useEngine();\n  const item = Engine.Items.find(parseInt(uuid));\n  const Seo = useSeo({\n    title: item ? item.name : 'Item not found',\n    description: item ? `Find all the information about ${item.name}` : 'Item not found',\n  });\n\n  return (\n    <>\n      <Seo />\n      <div className=\"t-item\">\n        {item ? (\n          <>\n            <div className=\"t-item__header\">\n              <Link to={RoutePath.Items}>\n                <Icon\n                  className=\"t-item__header-icon\"\n                  width={7}\n                  height={14}\n                  name={IconName.ArrowRightWhite}\n                /> Back to items\n              </Link>\n            </div>\n            <div className=\"t-item__container\">\n              <Item item={item} setCollapsed={false} />\n              <EnchantsPool itemType={item.type} />\n            </div>\n          </>\n        ) : (\n          <div className=\"t-item__notFound\">\n            Item Not Found\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ItemTemplate;","import React, { FunctionComponent } from 'react';\n\nimport ItemTemplate from 'components/templates/Item/ItemTemplate';\n\nexport const ItemPage: FunctionComponent = () => {\n  return (\n    <ItemTemplate />\n  );\n};\n\nexport default ItemPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport { map } from 'lodash';\nimport Drawer from 'rc-drawer';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useEngine from 'hooks/useEngine';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { ItemsFilters, FiltersType } from 'types/Filters.types';\nimport { ItemCategory, ItemType } from 'types/Item.types';\n\nimport './Categories.scss';\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n\n  const { Items: { typesByCategories, defaultCategory, defaultType } } = Engine;\n  const baseCategory = (filters.category ?? defaultCategory) as ItemCategory;\n  const baseType = (filters.type ?? defaultType) as ItemType;\n\n  const [selectedCategory, setSelectedCategory] = useState<ItemCategory>(baseCategory);\n  const [selectedType, setSelectedType] = useState<ItemType>(baseType);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-itemCategories__menuMobile category-${selectedCategory.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderCategoryMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderCategoryMenu();\n  }\n\n  function renderItemTypes(category: ItemCategory, itemTypes: ItemType[]) {\n    return (\n      <ul className=\"o-itemCategories__itemTypes\">\n        {itemTypes.map(itemType => (\n          <li\n            key={`item-type-${itemType}`}\n            className={`o-itemCategories__itemType ${selectedType === itemType ? 'selected' : ''}`}\n          >\n            <span\n              className=\"o-itemCategories__itemTypeName\"\n              onClick={() => onItemTypeSelect(category, itemType)}\n            >\n              {itemType === ItemType.Rune ? 'Rune' : itemType}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderCategoryMenu() {\n    return (\n      <ul className=\"o-itemCategories\">\n        {map(typesByCategories, ((itemTypes, category: ItemCategory) => {\n          const isSelected = selectedCategory === category;\n          return (\n            <li\n              key={`item-category-${category}`}\n              className={`o-itemCategories__category ${isSelected ? 'selected' : ''}`}\n            >\n              <span\n                className=\"o-itemCategories__categoryName\"\n                onClick={() => onCategorySelect(category)}\n              >\n                <Icon\n                  className=\"o-itemCategories__categoryName-arrow\"\n                  width={isSelected ? 14 : 6}\n                  height={isSelected ? 7 : 12}\n                  name={isSelected ? IconName.ArrowDownBlue : IconName.ArrowRightBlue}\n                />\n                {category}\n                <GameIcon\n                  className=\"o-itemCategories__categoryName-icon\"\n                  type={GameIconType.ItemCategory}\n                  name={category}\n                  width={28}\n                />\n              </span>\n              {renderItemTypes(category, itemTypes)}\n            </li>\n          );\n        }))}\n      </ul>\n    );\n  }\n\n  function onCategorySelect(category: ItemCategory) {\n    const defaultItemType = typesByCategories[category][0];\n\n    setSelectedCategory(category);\n    setSelectedType(defaultItemType);\n    setFilters({ category, type: defaultItemType });\n  }\n\n  function onItemTypeSelect(category: ItemCategory, itemType: ItemType) {\n    setSelectedType(itemType);\n    setFilters({ category, type: itemType });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default Categories;","import React, { FunctionComponent, useState } from 'react';\n\nimport './CheckboxSelect.scss';\n\nexport interface CheckboxSelectProps {\n  className?: string;\n  selected: boolean;\n  label: string;\n  value: string;\n  color: string;\n  onChange: (selected: boolean) => void;\n}\n\nconst CheckboxSelect: FunctionComponent<CheckboxSelectProps> = ({\n  className,\n  selected,\n  label,\n  value,\n  color,\n  onChange,\n}) => {\n  const [isSelected, setIsSelected] = useState(selected);\n  const optionStyles = isSelected ? {\n    color: color,\n    textShadow: `0px -2px 16px ${color}`,\n  } : {};\n  const borderStyles = isSelected ? {\n    backgroundColor: color,\n    boxShadow: `0 0 12px ${color}, 0 1px 6px ${color}`,\n  } : {};\n\n  return (\n    <div className={`a-checkboxSelect ${className ? className : ''}`}>\n      <div\n        key={`checkboxSelect-label-${value}`}\n        className={`a-checkboxSelect__label ${isSelected ? 'selected' : ''}`}\n        onClick={onClickOption}\n        style={optionStyles}\n      >\n        {label}\n        <span className=\"a-checkboxSelect-borderBottom\" style={borderStyles}></span>\n      </div>\n    </div>\n  );\n\n  function onClickOption() {\n    setIsSelected(!isSelected);\n    onChange(!isSelected);\n  }\n};\n\nexport default CheckboxSelect;","import React, { FunctionComponent, useState } from 'react';\n\nimport { xor } from 'lodash';\n\nimport './Multiselect.scss';\n\nexport interface MultiselectOption {\n  label: string;\n  value: string;\n  color: string;\n}\n\nexport interface MultiselectProps {\n  className?: string;\n  defaultValues: string[];\n  options: MultiselectOption[];\n  onChange: (values: string[]) => void;\n}\n\nconst Multiselect: FunctionComponent<MultiselectProps> = ({\n  className,\n  defaultValues,\n  options,\n  onChange,\n}) => {\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(defaultValues);\n\n  return (\n    <div className={`a-multiselect ${className ? className : ''}`}>\n      {options.map((option) => {\n        const isSelected = selectedOptions.includes(option.value);\n        const optionStyles = isSelected ? {\n          color: option.color,\n          textShadow: `0px -2px 16px ${option.color}`,\n        } : {};\n        const borderStyles = isSelected ? {\n          backgroundColor: option.color,\n          boxShadow: `0 0 12px ${option.color}, 0 1px 6px ${option.color}`,\n        } : {};\n\n        return (\n          <div\n            key={`multiselect-option-${option.value}`}\n            className={`a-multiselect__option ${isSelected ? 'selected' : ''}`}\n            onClick={() => onClickOption(option)}\n            style={optionStyles}\n          >\n            {option.label}\n            <span className=\"a-multiselect__option-borderBottom\" style={borderStyles}></span>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  function onClickOption(option: MultiselectOption) {\n    const newSelectedOptions = xor(selectedOptions, [option.value]);\n    setSelectedOptions(newSelectedOptions);\n    onChange(newSelectedOptions);\n  }\n};\n\nexport default Multiselect;","import React, { FunctionComponent } from 'react';\n\nimport { camelCase } from 'lodash';\n\nimport CheckboxSelect from 'components/atoms/CheckboxSelect/CheckboxSelect';\nimport Dropdown from 'components/atoms/Dropdown/Dropdown';\nimport Multiselect, { MultiselectOption } from 'components/atoms/Multiselect/Multiselect';\nimport Search from 'components/atoms/Search/Search';\nimport { DEFAULT_RARITIES_FILTERS } from 'engine/EngineItems';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport useFilters from 'hooks/useFilters';\nimport { CharacterClass } from 'types/Character.types';\nimport { ItemsFilters, FiltersType } from 'types/Filters.types';\nimport { ItemRarity } from 'types/Item.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n\n  const raritiesOptions: MultiselectOption[] = allEnumValues(ItemRarity).map(rarity => ({\n    label: rarity,\n    value: rarity,\n    color: `var(--color-item-${camelCase(rarity)})`,\n  }));\n\n  const classOptions = allEnumValues(CharacterClass).map(charClass => ({\n    label: charClass === CharacterClass.All ? 'All classes' : charClass,\n    value: charClass,\n  }));\n\n  return (\n    <div className=\"o-itemFilters\">\n      <Search\n        className=\"o-itemFilters__search\"\n        placeholder=\"Search anything: Fire, Movement, Tornado...\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n      <Multiselect\n        className=\"o-itemFilters__raritySelect\"\n        defaultValues={filters.rarities ? filters.rarities : DEFAULT_RARITIES_FILTERS}\n        options={raritiesOptions}\n        onChange={onRaritiesSelect}\n      />\n      <CheckboxSelect\n        className=\"o-itemFilters__setCheckbox\"\n        selected={filters.onlySet || false}\n        label=\"Only Sets\"\n        value=\"Set\"\n        color={`var(--color-item-set)`}\n        onChange={onSetSelect}\n      />\n      <Dropdown\n        className=\"o-itemFilters__classDropdown\"\n        label=\"\"\n        defaultValue={filters.characterClass || CharacterClass.All}\n        options={classOptions}\n        onChange={onClassSelect}\n      />\n    </div>\n  );\n\n  function onRaritiesSelect(rarities: string[]) {\n    setFilters({ rarities });\n  }\n\n  function onSetSelect(isSelected: boolean) {\n    setFilters({ onlySet: isSelected });\n  }\n\n  function onClassSelect(characterClass: string) {\n    setFilters({ characterClass });\n  }\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React, { FunctionComponent } from 'react';\n\nimport './SortSelect.scss';\n\ninterface Props {\n  currentOrder: 'asc' | 'desc' | null;\n  label: string;\n  onChange: () => void;\n}\n\nconst SortSelect: FunctionComponent<Props> = ({\n  currentOrder,\n  label,\n  onChange,\n}) => {\n  return (\n    <span className=\"a-sortSelect\" onClick={onChange}>\n      {label}\n      <span className=\"a-sortSelect__icon\">\n        <span className={`a-sortSelect__icon-up ${currentOrder === 'asc' ? 'selected' : ''}`}></span>\n        <span className={`a-sortSelect__icon-down ${currentOrder === 'desc' ? 'selected' : ''}`}></span>\n      </span>\n    </span>\n  );\n};\n\nexport default SortSelect;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport SortSelect from 'components/atoms/SortSelect/SortSelect';\nimport useFilters from 'hooks/useFilters';\nimport { ItemsFilters, FiltersType, SortOrder } from 'types/Filters.types';\n\nimport './Header.scss';\n\nconst Header: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n  let nameSortOrder: 'asc' | 'desc' | null = null;\n  let levelSortOrder: 'asc' | 'desc' | null = null;\n\n  if (filters.orderBy && [SortOrder.NameAsc, SortOrder.NameDesc].includes(filters.orderBy)) {\n    nameSortOrder = filters.orderBy === SortOrder.NameAsc ? 'asc' : 'desc';\n  }\n\n  if (filters.orderBy && [SortOrder.LevelAsc, SortOrder.LevelDesc].includes(filters.orderBy)) {\n    levelSortOrder = filters.orderBy === SortOrder.LevelAsc ? 'asc' : 'desc';\n  }\n\n  return (\n    <div className=\"m-header\">\n      <div className=\"m-header__items\">\n        <h3 className=\"m-header__thead\">\n          <SortSelect\n            label=\"Item\"\n            currentOrder={nameSortOrder}\n            onChange={() => orderBy(filters.orderBy === SortOrder.NameAsc ? SortOrder.NameDesc : SortOrder.NameAsc)}\n          />\n        </h3>\n        <h3  className=\"m-header__thead req\">\n          <SortSelect\n            label=\"Req.\"\n            currentOrder={levelSortOrder}\n            onChange={() => orderBy(filters.orderBy === SortOrder.LevelAsc ? SortOrder.LevelDesc : SortOrder.LevelAsc)}\n          />\n        </h3>\n      </div>\n      <div className=\"m-header__enchants\">\n        <h3 className=\"m-header__thead\">Possible Enchants</h3>\n      </div>\n    </div>\n  );\n\n  function orderBy(orderBy: SortOrder) {\n    setFilters({ orderBy });\n  }\n};\n\nexport default observer(Header);","import React, { FunctionComponent } from 'react';\n\nimport Header from 'components/molecules/Items/Header/Header';\nimport EnchantsPool from 'components/organisms/Items/EnchantsPool/EnchantsPool';\nimport Item from 'components/organisms/Items/Item/Item';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\nimport { Item as ItemInterface } from 'types/Item.types';\n\nimport './List.scss';\n\ninterface Props {\n  items: ItemInterface[];\n}\n\nconst List: FunctionComponent<Props> = ({ items }) => {\n  const currentType = items[0]?.type;\n  const { paginatedData, InfiniteScroll } =  useInfiniteScroll<ItemInterface>(items, 10);\n\n  return (\n    <div className=\"o-itemsList\">\n      {items.length > 0 ? (\n        <>\n          <Header />\n          <div className=\"o-itemsList__container\">\n            <div className=\"o-itemsList__items\">\n              <InfiniteScroll>\n                {paginatedData.map(item => (\n                  <Item key={`item-${item.uuid}`} item={item} />\n                ))}\n              </InfiniteScroll>\n            </div>\n            <EnchantsPool itemType={currentType} />\n          </div>\n        </>\n      ) : (\n        <div className=\"o-itemsList__noItem\">\n          No item was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Items/Categories/Categories';\nimport Filters from 'components/organisms/Items/Filters/Filters';\nimport List from 'components/organisms/Items/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\nimport './ItemsTemplate.scss';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nconst ItemsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n\n  const items = getFilteredItems();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-items__wrapper\">\n        <Categories />\n        <div className=\"t-items__list\">\n          <List items={items} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredItems() {\n    return Engine.Items.all({\n      search: filtersStore.items.search,\n      category: filtersStore.items.category,\n      type: filtersStore.items.type,\n      characterClass: filtersStore.items.characterClass,\n      rarities: filtersStore.items.rarities,\n      orderBy: filtersStore.items.orderBy,\n      onlySet: filtersStore.items.onlySet,\n    });\n  }\n};\n\nexport default observer(ItemsTemplate);","import React, { FunctionComponent } from 'react';\n\nimport ItemsTemplate from 'components/templates/Items/ItemsTemplate';\nimport useSeo from 'hooks/useSeo';\n\nexport const ItemsPage: FunctionComponent = () => {\n  const Seo = useSeo({\n    title: 'Items database',\n    description: 'Find all the items you need to craft your dream build.',\n  });\n\n  return (\n    <>\n      <Seo />\n      <ItemsTemplate />\n    </>\n  );\n};\n\nexport default ItemsPage;","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\nimport { Tooltip } from 'react-tippy';\n\nimport { camelCase, isString, compact } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\nimport { CharacterClass } from 'types/Character.types';\nimport { Skill as SkillInterface, SkillTree, SkillFamily, SkillType } from 'types/Skill.types';\n\nimport './Skill.scss';\n\nconst SKILLS_TEMPLATE_REGEX = /\\|((?:\\w|'|\\s|\\|?)+)¥/g;\nconst DAMAGE_TYPES_TEMPLATE_REGEX = /(?:XDAM\\s?)?_\\w{3}_(\\w+)¥/g;\nconst VALUES_TEMPLATE_REGEX = /(EFFECT|DURATION|DAMAGE|VALUE2|VALUE|PROC|RANGE2|RANGE)/g;\nconst GENERIC_REPLACE_REGEX = /(?:\\||~)((?:\\w|\\.|'|-|%|\\s)+)¥/g;\nconst SINGLE_REPLACE_REGEX = /\\|(\\w+)/g;\n\n// TODO: Add this in the skills parser, automatically\nconst DEFAULT_MASTERY_VALUE = 10;\nconst DEFAULT_VALUE2 = 3;\n\nconst SKILL_FAMILIES = allEnumValues(SkillFamily);\n\n// TODO: Move outside\ninterface SkillLinkProps {\n  uuid: number;\n  content: string | ReactNode;\n  charClass?: CharacterClass;\n  className?: string;\n  key?: string;\n}\ninterface Props {\n  skill: SkillInterface,\n}\n\nconst Skill: FunctionComponent<Props> = ({\n  skill,\n}) => {\n  // Mastery skills can share the same UUID\n  const safeUuid = `${skill.uuid}-${skill.class.toLowerCase()}`;\n  const Engine = useEngine();\n\n  return (\n    <div className=\"o-skill\">\n      <div className=\"o-skill__header\">\n        <div className=\"o-skill__header-content\">\n          <span className=\"o-skill__icon\">\n            {skill.icon && (\n              <GameIcon\n                type={skill.tree === SkillTree.Mastery ? GameIconType.SkillMastery : GameIconType.SkillSpell}\n                name={skill.icon}\n                width={32}\n              />\n            )}\n          </span>\n          <div className=\"o-skill__header-title\">\n            <h2 className=\"o-skill__header-name\">\n              {renderSkillLink({\n                uuid: skill.uuid,\n                content: skill.name,\n                charClass: skill.class,\n                className: 'o-skill__header-title-link',\n              })}\n            </h2>\n            <h3 className=\"o-skill__header-category\">\n              <strong style={{ color: `var(--color-damage-type-${camelCase(skill.element)})` }}>\n                {skill.element}\n              </strong>\n              &nbsp;-&nbsp;\n              <span className=\"o-skill__header-tree\">\n                {skill.type ? skill.type : skill.tree}\n              </span>\n              {skill.family && (\n                <>\n                  &nbsp;-&nbsp;\n                  <span\n                    className=\"o-skill__header-family\"\n                    style={{ color: `var(--color-damage-type-${camelCase(skill.element)})` }}\n                  >\n                    {skill.family}\n                  </span>\n                </>\n              )}\n            </h3>\n          </div>\n        </div>\n        <div className=\"o-skill__header-meta\">\n          <span className=\"o-skill__header-meta-category\">\n            <span className=\"o-skill__header-meta-class\">\n              <Tooltip\n                title={skill.class}\n                position=\"bottom\"\n                arrow={true}\n                distance={5}\n                offset={0}\n                size=\"small\"\n              >\n                <GameIcon\n                  type={GameIconType.ClassProfile}\n                  name={skill.class.toLowerCase()}\n                  height={32}\n                />\n              </Tooltip>\n            </span>\n            <span className=\"o-skill__header-meta-tree\">\n              <Tooltip\n                title={skill.tree}\n                position=\"bottom\"\n                arrow={true}\n                distance={10}\n                offset={0}\n                size=\"small\"\n              >\n                <GameIcon\n                  type={GameIconType.SkillTree}\n                  name={skill.tree.toLowerCase().replace(/\\s/g, '')}\n                  height={32}\n                />\n              </Tooltip>\n            </span>\n          </span>\n        </div>\n      </div>\n      <div className=\"o-skill__content\">\n        <div className=\"o-skill__content-main\">\n          <div className=\"o-skill__description\">\n            {renderDescription()}\n          </div>\n        </div>\n        <div className=\"o-skill__content-sub\">\n          <ul className=\"o-skill__content-list\">\n            {skill.skillRequirement.length > 0 && (\n              <li>\n                <span className=\"o-skill__content-list-title\">\n                  Parent skill\n                </span>\n                <span className=\"o-skill__content-list-value requirements\">\n                  {renderSkillsRequirement()}\n                </span>\n              </li>\n            )}\n            <li>\n              <span className=\"o-skill__content-list-title\">\n                Max rank\n              </span>\n              <span className=\"o-skill__content-list-value maxRank\">\n                {skill.maxRank}\n              </span>\n            </li>\n            {skill.cooldown && (\n              <li>\n                <span className=\"o-skill__content-list-title\">\n                Cooldown\n                </span>\n                <span className=\"o-skill__content-list-value cooldown\">\n                  {skill.cooldown}\n                </span>\n              </li>\n            )}\n            {skill.cost100 && (\n              <li>\n                <span className=\"o-skill__content-list-title\">\n                Mana cost\n                </span>\n                <span className=\"o-skill__content-list-value cost\">\n                  {skill.cost100}\n                </span>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n\n  // TODO: SkillLink component, reusable everywhere\n  function renderSkillLink({ uuid, content, charClass, className, key }: SkillLinkProps) {\n    return (\n      <Link\n        to={{\n          pathname: RoutePath.Skill.replace(':uuid', uuid.toString()),\n          search: charClass ? `?skillCharacterClass=${charClass}` : '',\n        }}\n        className={className}\n        key={key}\n      >\n        {content}\n      </Link>\n    );\n  }\n\n  function renderSkillsRequirement() {\n    return compact(\n      skill.skillRequirement.map<React.ReactNode>((skillId) => {\n        const skillReq = Engine.Skills.find(skillId, { class: skill.class });\n        return skillReq ? (\n          <span\n            className=\"o-skill__parentSkill\"\n            key={`req-skills-${safeUuid}-${skillId}`}\n          >\n            <Tooltip\n              title={skillReq.name}\n              position=\"bottom\"\n              arrow={true}\n              distance={10}\n              offset={0}\n              size=\"small\"\n            >\n              {renderSkillLink({\n                uuid: skillReq.uuid,\n                charClass: skillReq.class,\n                content: (\n                  <GameIcon\n                    type={skillReq.tree === SkillTree.Mastery ? GameIconType.SkillMastery : GameIconType.SkillSpell}\n                    name={skillReq.icon || 'default'}\n                    width={24}\n                  />\n                ),\n              })}\n\n            </Tooltip>\n          </span>\n        ) : null;\n      }) // TODO: Create \"join\" helper and replace all those occurences\n    ).reduce((prev, curr) => [prev, ' or ', curr]);\n  }\n\n  // TODO: Refactor in useTemplateResolver (skill, amount, effect, etc...) that can be used elsewhere\n  function renderDescription() {\n    let finalNodes = null;\n    let replacementCounter = 0; // Fuck react unique keys\n\n    finalNodes = replaceWithJSX(skill.description, SKILLS_TEMPLATE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n      const skillName = match.replace(/\\|/g, '');\n      const skillId = Engine.Skills.findByName(skillName)?.uuid;\n\n      if (skillId) {\n        return (\n          <Link\n            to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n            key={`tpl-${safeUuid}-skill-${skillId}-${i}-${offset}`}\n            className=\"o-skill__description-skill-spell\"\n          >\n            {skillName}\n          </Link>\n        );\n      // It's a skill family\n      } else if (SKILL_FAMILIES.includes(skillName as SkillFamily)) {\n        return (\n          // TODO: In search add `skillsTree=Any&characterClass=CURRENT`\n          <Link\n            to={{ pathname: RoutePath.Skills, search: `?skillsFamily=${skillName}` }}\n            key={`tpl-${safeUuid}-skill-${skillId}-${i}-${offset}`}\n            className=\"o-skill__description-skill-spell family\"\n          >\n            {skillName}\n          </Link>\n        );\n      // @ts-ignore\n      } else if (SkillType[skillName]) {\n        return (\n          // TODO: In search add `skillsTree=Any&characterClass=CURRENT`\n          <Link\n            to={{ pathname: RoutePath.Skills, search: `?skillsTypes=${skillName}` }}\n            key={`tpl-${safeUuid}-skill-${skillId}-${i}-${offset}`}\n            className=\"o-skill__description-skill-spell type\"\n          >\n            {skillName}\n          </Link>\n        );\n      } else {\n        return (\n          <em\n            key={`tpl-${safeUuid}-skill-${skillId}-${i}-${offset}`}\n            className=\"o-skill__description-skill-spell unknown\"\n          >\n            {skillName}\n          </em>\n        );\n      }\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, DAMAGE_TYPES_TEMPLATE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n      const damageTypeId = match.toLowerCase();\n\n      return (\n        <span\n          key={`tpl-skill-${safeUuid}-dt-${damageTypeId}-${i}-${offset}-${replacementCounter}`}\n          style={{ color: `var(--color-damage-type-${damageTypeId})` }}\n          className=\"o-skill__description-skill-damageType\"\n        >\n          {match}\n        </span>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, VALUES_TEMPLATE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n      const valueType = match.toLowerCase();\n      const key = `tpl-skill-${safeUuid}-vals-${valueType}-${i}-${offset}-${replacementCounter}`;\n\n      // @ts-ignore\n      const values: Array<string | number> = skill[valueType] || [];\n\n      // VALUE2 seems to be hardcoded\n      if (valueType === 'value2' && values.length === 0) {\n        values.push(DEFAULT_VALUE2);\n      } else if (values.length === 0) {\n        // Some masteries don't come with values even tho they should, so we use the DEFAULT_MASTERY_VALUE\n        values.push(DEFAULT_MASTERY_VALUE);\n      }\n\n      return (\n        <span\n          key={key}\n          className=\"o-skill__description-skill-values\"\n        >\n          {values.length > 6 ? renderRange(values) : renderValues(values, key)}\n        </span>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, '|Use:¥', (match, i, offset) => {\n      replacementCounter++;\n\n      return (\n        <strong\n          key={`tpl-skill-${safeUuid}-use-${i}-${offset}-${replacementCounter}`}\n          className=\"o-skill__description-skill-onUse\"\n        >\n          <br/>Use:\n        </strong>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, GENERIC_REPLACE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n\n      return (\n        <strong\n          key={`tpl-skill-${safeUuid}-simpleValue-${i}-${offset}-${replacementCounter}`}\n          className=\"o-skill__description-skill-simpleValue\"\n        >\n          {match}\n        </strong>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, SINGLE_REPLACE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n\n      // TODO: Same color as spell unknown, spell unknown should be a different color than links\n      return (\n        <em\n          key={`tpl-skill-${safeUuid}-singleValue-${i}-${offset}-${replacementCounter}`}\n          className=\"o-skill__description-skill-singleValue\"\n        >\n          {match}\n        </em>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, 'REQUIRED', (match, i, offset) => {\n      replacementCounter++;\n\n      return (\n        <strong\n          key={`tpl-skill-${safeUuid}-required-${i}-${offset}-${replacementCounter}`}\n          className=\"o-skill__description-skill-required\"\n        >\n          The previously selected skill\n        </strong>\n      );\n    });\n\n    return finalNodes;\n  }\n\n  function renderValues(values: Array<string | number>, key: string) {\n    const valueNodes = values.map<React.ReactNode>((value, index) => {\n      const val = isString(value) ? parseInt(value) : value;\n      return (\n        <em key={`${key}-${value}-${index}`} className=\"o-skill__description-skill-value\">\n          {val}\n        </em>\n      );\n    });\n\n    if (valueNodes.length === 1) {\n      return valueNodes;\n    } else {\n      return (\n        <>\n          [\n          {valueNodes.reduce((prev, curr) => [prev, ' / ', curr])}\n          ]\n        </>\n      );\n    }\n\n  }\n\n  function renderRange(values: Array<string | number>) {\n    const min = isString(values[0]) ? parseInt(values[0]) : values[0];\n    let max = values[values.length - 1];\n    max = isString(max) ? parseInt(max) : max;\n\n    if (min === max) {\n      return (\n        <em className=\"o-skill__description-skill-valueRange-max\">{max}</em>\n      );\n    } else {\n      return (\n        <>\n          [\n          <em className=\"o-skill__description-skill-valueRange-min\">{min}</em>\n          -\n          <em className=\"o-skill__description-skill-valueRange-max\">{max}</em>\n          ]\n        </>\n      );\n    }\n  }\n};\n\nexport default Skill;","import React, { FunctionComponent } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { isEmpty } from 'lodash';\nimport qs from 'query-string';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport Skill from 'components/organisms/Skills/Skill/Skill';\nimport useEngine from 'hooks/useEngine';\nimport useSeo from 'hooks/useSeo';\nimport { RoutePath } from 'routes';\nimport { CharacterClass } from 'types/Character.types';\n\nimport './SkillTemplate.scss';\n\nconst SkillTemplate: FunctionComponent = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const location = useLocation();\n  const queryParams = qs.parse(location.search);\n  const findParams = !isEmpty(queryParams) ? { class: queryParams.skillCharacterClass as CharacterClass } : undefined;\n\n  const Engine = useEngine();\n  const skill = Engine.Skills.find(parseInt(uuid), findParams);\n  const Seo = useSeo({\n    title: skill ? skill.name : 'Skill not found',\n    description: skill ? `Find all the information about ${skill.name}` : 'Skill not found',\n  });\n\n  return (\n    <>\n      <Seo />\n      <div className=\"t-skill\">\n        {skill ? (\n          <>\n            <div className=\"t-skill__header\">\n              <Link to={RoutePath.Skills}>\n                <Icon\n                  className=\"t-skill__header-icon\"\n                  width={7}\n                  height={14}\n                  name={IconName.ArrowRightWhite}\n                /> Back to skills\n              </Link>\n            </div>\n            <div className=\"t-skill__container\">\n              <Skill skill={skill} />\n            </div>\n          </>\n        ) : (\n          <div className=\"t-skill__notFound\">\n            Skill Not Found\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SkillTemplate;","import React, { FunctionComponent } from 'react';\n\nimport SkillTemplate from 'components/templates/Skill/SkillTemplate';\n\nexport const SkillPage: FunctionComponent = () => {\n  return (\n    <SkillTemplate />\n  );\n};\n\nexport default SkillPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport { map } from 'lodash';\nimport Drawer from 'rc-drawer';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useEngine from 'hooks/useEngine';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { CharacterClass } from 'types/Character.types';\nimport { SkillsFilters, FiltersType } from 'types/Filters.types';\nimport { SkillTree } from 'types/Skill.types';\n\nimport './Categories.scss';\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<SkillsFilters>(FiltersType.Skills);\n\n  const { Skills: { treesByClasses, defaultClass, defaultTree } } = Engine;\n  const baseClass = (filters.characterClass ?? defaultClass) as CharacterClass;\n  const baseTree = (filters.tree ?? defaultTree) as SkillTree;\n\n  const [selectedClass, setSelectedClass] = useState<CharacterClass>(baseClass);\n  const [selectedTree, setSelectedTree] = useState<SkillTree>(baseTree);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-skillClasses__menuMobile class-${selectedClass.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderCategoryMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderCategoryMenu();\n  }\n\n  function renderSkillTrees(characterClass: CharacterClass, skillTrees: SkillTree[]) {\n    return (\n      <ul className=\"o-skillClasses__skillTrees\">\n        {skillTrees.map(skillTree => (\n          <li\n            key={`skill-tree-${skillTree}`}\n            className={`o-skillClasses__skillTree ${selectedTree === skillTree ? 'selected' : ''}`}\n          >\n            <span\n              className=\"o-skillClasses__skillTreeName\"\n              onClick={() => onSkillTreeSelect(characterClass, skillTree)}\n            >\n              {skillTree}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderCategoryMenu() {\n    return (\n      <ul className=\"o-skillClasses\">\n        {map(treesByClasses, ((skillTrees, characterClass: CharacterClass) => {\n          const isSelected = selectedClass === characterClass;\n\n          if (!skillTrees) { return null; }\n\n          return (\n            <li\n              key={`skill-class-${characterClass}`}\n              className={`o-skillClasses__class ${isSelected ? 'selected' : ''}`}\n            >\n              <span\n                className=\"o-skillClasses__className\"\n                onClick={() => onClassSelect(characterClass)}\n              >\n                <Icon\n                  className=\"o-skillClasses__className-arrow\"\n                  width={isSelected ? 14 : 6}\n                  height={isSelected ? 7 : 12}\n                  name={isSelected ? IconName.ArrowDownBlue : IconName.ArrowRightBlue}\n                />\n                {characterClass}\n                <GameIcon\n                  className=\"o-skillClasses__className-icon\"\n                  type={GameIconType.ClassHeader}\n                  name={characterClass.toLowerCase()}\n                  width={32}\n                />\n              </span>\n              {renderSkillTrees(characterClass, skillTrees)}\n            </li>\n          );\n        }))}\n      </ul>\n    );\n  }\n\n  function onClassSelect(characterClass: CharacterClass) {\n    const defaultSkillTree = Engine.Skills.defaultTreeForClass(characterClass);\n\n    setSelectedClass(characterClass);\n    setSelectedTree(defaultSkillTree);\n    setFilters({ characterClass, tree: defaultSkillTree });\n  }\n\n  function onSkillTreeSelect(characterClass: CharacterClass, skillTree: SkillTree) {\n    setSelectedTree(skillTree);\n    setFilters({ characterClass, tree: skillTree });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default Categories;","import React, { FunctionComponent } from 'react';\n\nimport Dropdown from 'components/atoms/Dropdown/Dropdown';\nimport Multiselect, { MultiselectOption } from 'components/atoms/Multiselect/Multiselect';\nimport Search from 'components/atoms/Search/Search';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport useFilters from 'hooks/useFilters';\nimport { SkillsFilters, FiltersType } from 'types/Filters.types';\nimport { SkillType, SkillFamily } from 'types/Skill.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<SkillsFilters>(FiltersType.Skills);\n  const skillTypes = allEnumValues(SkillType);\n\n  const typesOptions: MultiselectOption[] = skillTypes.map(type => ({\n    label: type,\n    value: type,\n    color: `var(--color-element-orange)`,\n  }));\n\n  const familyOptions = [...['All'], ...allEnumValues(SkillFamily)].map(family => ({\n    label: family === 'All' ? 'Any family' : family,\n    value: family,\n  }));\n\n  return (\n    <div className=\"o-skillFilters\">\n      <Search\n        className=\"o-skillFilters__search\"\n        placeholder=\"Search anything: Fire, Movement, Tornado...\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n      <Multiselect\n        className=\"o-skillFilters__typeSelect\"\n        defaultValues={filters.types ? filters.types : skillTypes}\n        options={typesOptions}\n        onChange={onTypesSelect}\n      />\n      <Dropdown\n        className=\"o-skillFilters__familyDropdown\"\n        label=\"\"\n        defaultValue={filters.family || 'All'}\n        options={familyOptions}\n        onChange={onFamilySelect}\n      />\n    </div>\n  );\n\n  function onTypesSelect(types: string[]) {\n    setFilters({ types });\n  }\n\n  function onFamilySelect(family: string) {\n    setFilters({ family });\n  }\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React, { FunctionComponent } from 'react';\n\nimport './Header.scss';\n\n// TODO: Refactor with Item and Enchant headers\nconst Header: FunctionComponent = () => {\n\n  return (\n    <div className=\"m-header\">\n      <div className=\"m-header__skills\">\n        <h3 className=\"m-header__thead\">\n          Skill\n        </h3>\n        <h3  className=\"m-header__thead reqSkill\">\n          Req.\n        </h3>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Header;","import React, { FunctionComponent } from 'react';\n\nimport Header from 'components/molecules/Skills/Header/Header';\nimport Skill from 'components/organisms/Skills/Skill/Skill';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\nimport { Skill as SkillInterface } from 'types/Skill.types';\n\nimport './List.scss';\n\ninterface Props {\n  skills: SkillInterface[];\n}\n\nconst List: FunctionComponent<Props> = ({ skills }) => {\n  const { paginatedData, InfiniteScroll } =  useInfiniteScroll<SkillInterface>(skills, 10);\n\n  return (\n    <div className=\"o-skillsList\">\n      {skills.length > 0 ? (\n        <>\n          <Header />\n          <div className=\"o-skillsList__container\">\n            <div className=\"o-skillsList__skills\">\n              <InfiniteScroll>\n                {paginatedData.map(skill => (\n                  <Skill key={`skill-${skill.uuid}-${skill.class}`} skill={skill} />\n                ))}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"o-skillsList__noSkill\">\n          No skill was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Skills/Categories/Categories';\nimport Filters from 'components/organisms/Skills/Filters/Filters';\nimport List from 'components/organisms/Skills/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\nimport './SkillsTemplate.scss';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nconst SkillsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n\n  const skills = getFilteredSkills();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-skills__wrapper\">\n        <Categories />\n        <div className=\"t-skills__list\">\n          <List skills={skills} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredSkills() {\n    return Engine.Skills.all({\n      search: filtersStore.skills.search,\n      tree: filtersStore.skills.tree,\n      types: filtersStore.skills.types,\n      characterClass: filtersStore.skills.characterClass,\n      family: filtersStore.skills.family,\n    });\n  }\n};\n\nexport default observer(SkillsTemplate);","import React, { FunctionComponent } from 'react';\n\nimport SkillsTemplate from 'components/templates/Skills/SkillsTemplate';\nimport useSeo from 'hooks/useSeo';\n\nconst EnchantsPage: FunctionComponent = () => {\n  const Seo = useSeo({\n    title: 'Skills database',\n    description: 'Find the skills that best suit your build.',\n  });\n\n  return (\n    <>\n      <Seo />\n      <SkillsTemplate />\n    </>\n  );\n};\n\nexport default EnchantsPage;","import React, { FunctionComponent, useEffect, useState, useRef } from 'react';\nimport { Router } from 'react-router';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { createBrowserHistory } from 'history';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport Loader from 'components/atoms/Loader/Loader';\nimport ScrollToTop from 'components/atoms/ScrollToTop/ScrollToTop';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport Layout from 'layouts/Default';\nimport ArtifactPage from 'pages/artifacts/Artifacts';\nimport DevelopersPage from 'pages/developers/Developers';\nimport EnchantsPage from 'pages/enchants/Enchants';\nimport ItemPage from 'pages/items/Item';\nimport ItemsPage from 'pages/items/Items';\nimport SkillPage from 'pages/skills/Skill';\nimport SkillsPage from 'pages/skills/Skills';\nimport { RoutePath } from 'routes';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nconst Main: FunctionComponent =  () => {\n  const engine = useEngine();\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const history = useRef(createBrowserHistory());\n  const [engineLoaded, setEngineLoaded] = useState(engine.loaded);\n\n  useEffect(() => {\n    // Load engine data\n    autorun(() => {\n      setEngineLoaded(false);\n      if (!engine.loaded && filtersStore.currentPatch) {\n        // First load\n        engine.loadData().then(() => setEngineLoaded(true));\n      } else {\n        // Subsequent version changes\n        engine.loadVersion(filtersStore.currentPatch).then(() => setTimeout(() => setEngineLoaded(true), 500));\n      }\n    });\n  }, []);\n\n  return (\n    <Router history={history.current}>\n      <ScrollToTop />\n      <Layout>\n        <Switch>\n          <Route path=\"/\">\n            {!engineLoaded ? (\n              <Loader width={100} height={100} color=\"var(--color-element-yellow)\" />\n            ) : (\n              <Switch>\n                <Route exact path={RoutePath.Items} component={ItemsPage} />\n                <Route exact path={RoutePath.Item} component={ItemPage} />\n                <Route exact path={RoutePath.Enchants} component={EnchantsPage} />\n                <Route exact path={RoutePath.Skills} component={SkillsPage} />\n                <Route exact path={RoutePath.Skill} component={SkillPage} />\n                <Route exact path={RoutePath.Artifacts} component={ArtifactPage} />\n                <Route exact path={RoutePath.Developers} component={DevelopersPage} />\n\n                <Route>\n                  <Redirect to={RoutePath.Items} />\n                </Route>\n              </Switch>\n            )}\n\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default observer(Main);","import camelCaseKeys from 'camelcase-keys';\nimport { flatten } from 'flatten-anything';\nimport { isEmpty, merge, pick, has } from 'lodash';\nimport { observable, action, computed } from 'mobx';\nimport qs from 'query-string';\n\nimport patches from 'engine/data/patches.json';\nimport * as FiltersTypes from 'types/Filters.types';\n\n// Has a dependency on query params, not very clean but it works. See `useFilters`\nexport class FiltersStore {\n  @observable\n  public general: FiltersTypes.GeneralFilters;\n\n  @observable\n  public items: FiltersTypes.ItemsFilters;\n\n  @observable\n  public enchants: FiltersTypes.EnchantsFilters;\n\n  @observable\n  public skills: FiltersTypes.SkillsFilters;\n\n  @observable\n  public artifacts: FiltersTypes.ArtifactsFilters;\n\n  // A bit ugly but gets the job done\n  constructor() {\n    const query = qs.parse(\n      location.search\n    ) as unknown as FiltersTypes.QueryFiltersInterface;\n\n    const latestPatch = patches[patches.length - 1];\n    /* Make sure the patch in the query string exists,\n     * And, yes, I DARED nest that, sue me! :smirk:\n     */\n    const defaultPatch = query.patch\n      ? patches.includes(query.patch)\n        ? query.patch\n        : latestPatch\n      : latestPatch;\n\n    this.general = {\n      patch: defaultPatch,\n    };\n\n    this.items = {\n      search: query.itemsSearch,\n      category: query.itemsCategory,\n      type: query.itemsType,\n      characterClass: query.itemsCharacterClass,\n      rarities: query.itemsRarities,\n      orderBy: query.itemsOrderBy as FiltersTypes.SortOrder,\n      onlySet: query.itemsOnlySet ? query.itemsOnlySet === 'true' : undefined, // typecast\n    };\n\n    this.enchants = {\n      search: query.enchantsSearch,\n      type: query.enchantsType,\n      category: query.enchantsCategory,\n    };\n\n    this.skills = {\n      search: query.skillsSearch,\n      characterClass: query.skillsCharacterClass,\n      tree: query.skillsTree,\n      types: query.skillsTypes,\n      family: query.skillsFamily,\n    };\n\n    this.artifacts = {\n      search: query.artifactSearch,\n      type: query.artifactType,\n    };\n  }\n\n  @action\n  public setGeneralFilters(filters: Partial<FiltersTypes.GeneralFilters>) {\n    this.general = merge(this.general, filters);\n  }\n\n  @action\n  public setItemsFilters(filters: Partial<FiltersTypes.ItemsFilters>) {\n    this.items = merge(this.items, filters);\n\n    // Override rarities instead of merge as it is an array of unique toggleable values\n    if (filters.rarities) {\n      this.items.rarities = filters.rarities;\n    }\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.items.search = undefined;\n    }\n  }\n\n  @action\n  public setEnchantsFilters(filters: Partial<FiltersTypes.EnchantsFilters>) {\n    this.enchants = merge(this.enchants, filters);\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.enchants.search = undefined;\n    }\n  }\n\n  @action\n  public setSkillsFilters(filters: Partial<FiltersTypes.SkillsFilters>) {\n    this.skills = merge(this.skills, filters);\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.skills.search = undefined;\n    }\n  }\n\n  @action\n  public setArtifactsFilters(filters: Partial<FiltersTypes.ArtifactsFilters>) {\n    this.artifacts = merge(this.artifacts, filters);\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.artifacts.search = undefined;\n    }\n  }\n\n  @computed\n  get filters(): FiltersTypes.Filters {\n    return {\n      general: this.general,\n      items: this.items,\n      enchants: this.enchants,\n      skills: this.skills,\n      artifacts: this.artifacts,\n    };\n  }\n\n  @computed\n  get currentPatch() {\n    return this.general.patch;\n  }\n\n  public toQueryString(filtersTypes: FiltersTypes.FiltersType[]): string {\n    const query = camelCaseKeys(\n      flatten(pick(this.filters, filtersTypes), 1)\n    ) as Record<string, string>;\n\n    // Rename patch key so it is less intrusive\n    if (filtersTypes.includes(FiltersTypes.FiltersType.General)) {\n      query.patch = query.generalPatch;\n      delete query.generalPatch;\n    }\n\n    return qs.stringify(query as unknown as FiltersTypes.QueryFiltersInterface);\n  }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport { useAsync } from 'react-async-hook';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport { Provider } from 'mobx-react';\n\nimport Loader from 'components/atoms/Loader/Loader';\nimport EngineContext from 'engine/context';\nimport Engine from 'engine/Engine';\nimport Main from 'pages/Main';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore, Stores } from 'types/DataStore.types';\n\nconst App: FunctionComponent = () => {\n  const [stores, setAllStores] = useState<Stores | null>(null);\n  const [engine, setEngine] = useState<Engine | null>(null);\n\n  useAsync(() => loadStoresAndData(), []);\n\n  if (!stores || !engine) {\n    return <Loader width={100} height={100} color=\"white\" />;\n  }\n\n  return (\n    <HelmetProvider>\n      <Provider {...stores}>\n        <EngineContext.Provider value={engine}>\n          <Main />\n        </EngineContext.Provider>\n      </Provider>\n    </HelmetProvider>\n  );\n\n  // return (\n  //   <I18nextProvider i18n={i18n}>\n  //           <Provider {...stores}>\n  //             <Main history={history} />\n  //           </Provider>\n  //   </I18nextProvider>\n  // );\n\n  async function loadStoresAndData() {\n    const loadedStores = await loadStores();\n    setAllStores(loadedStores);\n    setEngine(new Engine(loadedStores[DataStore.Filters].currentPatch));\n  }\n\n};\n\nasync function loadStores(): Promise<Stores> {\n  // Init rest of stores, (MobX requires all stores are instantiated immediately)\n  return {\n    [DataStore.Filters]: new FiltersStore(),\n  };\n}\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configure } from 'mobx';\n\nimport App from 'pages/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport 'assets/styles/fonts.css';\nimport 'assets/styles/variables.css';\nimport 'assets/styles/global.css';\nimport 'rc-drawer/assets/index.css';\nimport 'react-tippy/dist/tippy.css';\n\n// Mobx : all state that is observed somewhere needs to be changed through actions\nconfigure({ enforceActions: 'observed' });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}