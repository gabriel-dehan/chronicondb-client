{"version":3,"sources":["engine/data lazy /^/.//.*//extracts$/ groupOptions: {} namespace object","types/Character.types.ts","types/Item.types.ts","types/Enchant.types.ts","types/Skill.types.ts","components/atoms/Loader/Loader.tsx","engine/context.ts","engine/data/dataMappings.ts","helpers/typeUtils.ts","types/Filters.types.ts","engine/EngineEnchants.ts","helpers/objectUtils.ts","engine/EngineItems.ts","engine/EngineSkills.ts","engine/Engine.ts","components/atoms/ScrollToTop/ScrollToTop.tsx","hooks/useEngine.ts","hooks/useStores.ts","components/atoms/Icon/Icon.tsx","components/organisms/Footer/Footer.tsx","routes.ts","components/atoms/Dropdown/Dropdown.tsx","hooks/useOnClickOutside.ts","types/DataStore.types.ts","hooks/useFilters.ts","hooks/useResponsive.ts","components/atoms/GameIcon/GameIcon.tsx","components/organisms/Header/Header.tsx","layouts/Default.tsx","hooks/useSeo.tsx","components/templates/Developers/DevelopersTemplate.tsx","pages/developers/Developers.tsx","components/organisms/Enchants/Categories/Categories.tsx","components/atoms/Search/Search.tsx","components/organisms/Enchants/Filters/Filters.tsx","components/atoms/Badge/Badge.tsx","components/organisms/Enchants/Enchant/Enchant.tsx","hooks/useInfiniteScroll.tsx","components/organisms/Enchants/List/List.tsx","components/templates/Enchants/EnchantsTemplate.tsx","pages/enchants/Enchants.tsx","components/molecules/Tabs/Tabs.tsx","components/molecules/Items/ItemsEnchantsPool/ItemsEnchantsPool.tsx","components/molecules/Items/RunesEnchantsPool/RunesEnchantsPool.tsx","components/organisms/Items/EnchantsPool/EnchantsPool.tsx","components/molecules/Items/AppliedEnchant/AppliedEnchant.tsx","components/molecules/Items/EnchantSlot/EnchantSlot.tsx","components/molecules/Items/Set/Set.tsx","components/organisms/ItemDownloader/DownloadableItem/DownloadableItem.tsx","components/organisms/ItemDownloader/ItemDownloader.tsx","hooks/useAsDownloadableImage.ts","components/organisms/Items/Item/Item.tsx","components/templates/Item/ItemTemplate.tsx","pages/items/Item.tsx","components/organisms/Items/Categories/Categories.tsx","components/atoms/CheckboxSelect/CheckboxSelect.tsx","components/atoms/Multiselect/Multiselect.tsx","components/organisms/Items/Filters/Filters.tsx","components/atoms/SortSelect/SortSelect.tsx","components/molecules/Items/Header/Header.tsx","components/organisms/Items/List/List.tsx","components/templates/Items/ItemsTemplate.tsx","pages/items/Items.tsx","components/organisms/Skills/Skill/Skill.tsx","components/templates/Skill/SkillTemplate.tsx","pages/skills/Skill.tsx","components/organisms/Skills/Categories/Categories.tsx","components/organisms/Skills/Filters/Filters.tsx","components/molecules/Skills/Header/Header.tsx","components/organisms/Skills/List/List.tsx","components/templates/Skills/SkillsTemplate.tsx","pages/skills/Skills.tsx","pages/Main.tsx","stores/FiltersStore.ts","pages/App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","CharacterClass","ItemRarity","ItemCategory","ItemType","SetUuid","EnchantType","EnchantCategory","DamageElement","SkillFamily","SkillType","SkillTree","Loader","width","height","color","style","position","top","left","viewBox","xmlns","stroke","fill","fillRule","strokeWidth","cx","cy","r","attributeName","begin","dur","values","calcMode","keyTimes","keySplines","repeatCount","EngineContext","createContext","EpicEnchantableCategories","Ring","Amulet","EnchantableCategories","Accessory","Armor","Boots","Helmet","Offhand","Weapon","ENCHANT_SLOTS_BY_RARITY","Ordinary","Enchanted","count","types","Minor","Major","categoriesRestriction","Rare","Epic","Unique","Legendary","TrueLegendary","Mythical","ITEM_TYPES_BY_CATEGORIES","Helm","Bow","Sword","Staff","Fists","Spellbook","Shield","Tome","Claw","Arrow","Gem","CubeGem","StarGem","SphereGem","Consumables","Elixir","Potion","Scroll","Relic","Misc","Key","QuestItem","SpecialItem","Container","UnknownItem","Bag","Craft","CraftingMaterial","Rune","SKILLTREES_BY_CLASSES","All","Scout","WrathfulRevenge","Seeker","Challenger","Thief","Bond","Harverst","Summoner","SunAndMoon","FuriousRetaliation","AllForOne","OneForAll","Templar","Reckoning","Valkyrie","ThunderCharged","ThunderingArmy","Caines","Wargod","Ayeela","Soulpurger","Berserker","Bloodsoak","Cataclysm","SpiritualGarb","Skysoul","Dragonfire","Volcanic","NothernRage","FrostWyrm","Warden","HighRanger","Windcaller","Everspring","ShroomTender","Stormcaller","WispMother","Torrential","Snowstorm","Warlock","BloodBinder","PlagueMage","Coldhearted","Deathbringer","DemonLord","BurningHells","Desecrator","Masochist","Christmas","Master","Vengeance","Wrath","Conviction","Redemption","Mastery","Guardian","SkyLord","Dragonkin","Frostborn","WindRanger","Druid","StormCaller","WinterHerald","Corruptor","Lich","Demonologist","Reaper","allEnumValues","enumObject","key","SortOrder","FiltersType","EngineEnchants","engine","categories","_categoriesByTypes","enchantsPool","searchEngine","this","Minisearch","idField","fields","storeFields","hydrateEnchantsPool","removeAll","addAll","data","enchantsSearchIndex","filters","enchants","filterBySearch","filterByTypeAndCategory","type","filter","enchant","category","item","loaded","includes","rarity","enchantSlots","fixedEnchants","enchantsToRawEnchants","baseEnchants","isEmpty","search","resultingUuids","prefix","fuzzy","uuid","defaultCategory","defaultType","enchantsIds","skills","compact","enchantId","find","ranges","name","description","min","minimum","max","cap","reduce","memo","skillId","skill","s","EnchantsPoolData","hydratedPool","poolByEnchantType","itemType","categoriesByTypes","push","uniq","obj","sortFunction","a","sort","result","DEFAULT_RARITIES_FILTERS","FILTER_UNAFFECTED_CATEGORIES","EngineItems","typesByCategories","categoriesByType","_categoriesByType","itemsSearchIndex","items","filterByClass","filterByRarities","filterOnlySet","sortBy","set","sets","setItems","itemIds","itemId","characterClass","classRestriction","rarities","onlySet","orderBy","b","minLevel","NameAsc","toUpperCase","NameDesc","LevelAsc","LevelDesc","findKey","classes","trees","treesByClasses","skillsSearchIndex","filterByClassAndTree","filterByFamily","filterByTypes","params","class","toLowerCase","classTrees","tree","defaultClass","defaultTree","family","defaultTreeForClass","Engine","version","Items","Enchants","Skills","EngineSkills","undefined","loadData","default","onDataLoaded","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","useEngine","useContext","useStores","stores","allStores","MobXProviderContext","storeNames","length","forEach","storeName","store","IconName","Footer","className","target","rel","href","Icon","aria-label","src","alt","RouteId","RoutePath","Dropdown","element","callback","label","defaultValue","options","onChange","useState","showDropdown","setShowDropdown","value","currentValue","setCurrentValue","currentValueLabel","opt","dropdownRef","createRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","onClick","ArrowDownBlue","index","data-value","onSelect","DataStore","ROUTES_ID_MAPPING","Item","Skill","Developers","AVAILABLE_FILTERS_FOR_ROUTES","General","useFilters","filtersType","routes","filtersStore","Filters","history","useHistory","location","path","route","matchPath","autorun","filtersForPath","replace","toQueryString","capitalize","Breakpoint","GameIconType","useResponsive","isUpToTablet","useMediaQuery","query","Tablet","MAIN_MENU_ITEMS","observer","setFilters","isMobileMenuOpen","setIsMobileMenuOpen","Menu","open","onClose","handler","placement","menuItem","menuRouteId","isCurrent","to","patch","patches","onPatchChange","DefaultLayout","children","useSeo","title","content","DevelopersTemplate","Seo","DevelopersPage","BASE_PATH","ICONS_PATH","Enchant","SkillSpell","SkillMastery","ClassProfile","ClassHeader","ClassBanner","GameIcon","Categories","baseCategory","baseType","selectedCategory","setSelectedCategory","selectedType","setSelectedType","onHandleClick","renderTypeMenu","renderCategories","enchantCategories","enchantCategory","enchantType","enchantTypes","isSelected","defaultEnchantCategory","onTypeSelect","ArrowRightBlue","Search","placeholder","inputValue","setInputValue","onDebouncedChange","useCallback","debounce","val","Badge","backgroundColor","isGem","camelCase","affixes","affix","finalNodes","replacedRanges","replaceWithJSX","_","i","replacedSkills","match","offset","parseInt","skillName","toString","renderDescription","renderRange","renderRanges","itemTypes","rolls","maximum","greaterCap","useInfiniteScroll","perPage","chunk","dataChunks","setDataChunks","paginatedData","setPaginatedData","chunks","InfiniteScroll","getTag","dataLength","next","fetchNextData","hasMore","loader","currentChunk","Math","ceil","List","all","EnchantsPage","EnchantsPool","navItems","defaultItem","currentTab","setCurrentTab","React","navItem","hoverColor","borderColor","onTabClick","Children","node","ItemsEnchantsPool","getTypeEnchantsPool","availableEnchantTypes","pickBy","pool","currentEnchant","setCurrentEnchant","isString","reverse","renderPoolForType","getRunesEnchantsPool","AppliedEnchant","descriptionToTemplate","EnchantSlot","enchantSlot","prev","curr","ItemSet","setCollapsed","isCollapsed","setIsCollapsed","ArrowRightYellow","ArrowDownYellow","join","bonuses","bonus","piecesCount","icon","itemEnchants","useMemo","getItemEnchantsSlots","itemSetData","getSetData","renderBaseEnchants","enchantForType","renderFixedEnchants","slot","renderEnchantsSlots","flavor","ItemDownloader","elementRef","renderItem","setRenderItem","download","blob","setBlob","setTimeout","toBlob","pixelRatio","saveAs","useAsDownloadableImage","opacity","display","transform","strokeOpacity","d","from","arrow","distance","size","enableBackground","ItemTemplate","useParams","ArrowRightWhite","ItemPage","renderCategoryMenu","renderItemTypes","onItemTypeSelect","defaultItemType","onCategorySelect","CheckboxSelect","selected","setIsSelected","optionStyles","textShadow","borderStyles","boxShadow","Multiselect","defaultValues","selectedOptions","setSelectedOptions","option","newSelectedOptions","xor","onClickOption","raritiesOptions","classOptions","charClass","SortSelect","currentOrder","nameSortOrder","levelSortOrder","currentType","ItemsPage","SKILLS_TEMPLATE_REGEX","DAMAGE_TYPES_TEMPLATE_REGEX","VALUES_TEMPLATE_REGEX","GENERIC_REPLACE_REGEX","SINGLE_REPLACE_REGEX","SKILL_FAMILIES","safeUuid","renderSkillLink","replacementCounter","findByName","damageTypeId","valueType","valueNodes","renderValues","skillRequirement","skillReq","maxRank","cooldown","cost100","SkillTemplate","queryParams","qs","parse","findParams","skillCharacterClass","SkillPage","baseClass","baseTree","selectedClass","setSelectedClass","selectedTree","setSelectedTree","renderSkillTrees","skillTrees","skillTree","onSkillTreeSelect","defaultSkillTree","onClassSelect","skillTypes","typesOptions","familyOptions","Header","useRef","createBrowserHistory","engineLoaded","setEngineLoaded","currentPatch","loadVersion","exact","component","SkillsPage","FiltersStore","latestPatch","defaultPatch","general","itemsSearch","itemsCategory","itemsType","itemsCharacterClass","itemsRarities","itemsOrderBy","itemsOnlySet","enchantsSearch","enchantsType","enchantsCategory","skillsSearch","skillsCharacterClass","skillsTree","skillsTypes","skillsFamily","merge","has","filtersTypes","camelCaseKeys","flatten","pick","generalPatch","stringify","observable","action","computed","loadStores","App","setAllStores","setEngine","useAsync","loadStoresAndData","Provider","loadedStores","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configure","enforceActions","ReactDOM","render","StrictMode","getElementById"],"mappings":"0sGAAA,IAAIA,EAAM,CACT,oBAAqB,CACpB,IACA,GAED,oBAAqB,CACpB,IACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,GACzBG,EAAOC,QAAUf,G,mzBC5BLgB,ECyBAC,EAUAC,EAeAC,EAiCAC,ECnDAC,EAOAC,ECTAC,EAWAC,EAiBAC,EAUAC,E,gHCbGC,EA/C0B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,OACAC,EACI,EADJA,MAEA,OACE,yBAAKC,MAAO,CAAEC,SAAU,WAAYC,IAAI,cAAD,OAAgBJ,EAAS,EAAzB,OAAiCK,KAAK,cAAD,OAAgBN,EAAQ,EAAxB,SAC1E,yBAAKA,MAAK,UAAKA,GAASC,OAAM,UAAKA,GAAUM,QAAQ,YAAYC,MAAM,6BAA6BC,OAAQP,GAC1G,uBAAGQ,KAAK,OAAOC,SAAS,UAAUC,YAAY,KAC5C,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KACxB,6BAASC,cAAc,IACrBC,MAAM,KAAKC,IAAI,OACfC,OAAO,QACPC,SAAS,SACTC,SAAS,OACTC,WAAW,uBACXC,YAAY,eACd,6BAASP,cAAc,iBACrBC,MAAM,KAAKC,IAAI,OACfC,OAAO,OACPC,SAAS,SACTC,SAAS,OACTC,WAAW,sBACXC,YAAY,gBAEhB,4BAAQV,GAAG,KAAKC,GAAG,KAAKC,EAAE,KACxB,6BAASC,cAAc,IACrBC,MAAM,QAAQC,IAAI,OAClBC,OAAO,QACPC,SAAS,SACTC,SAAS,OACTC,WAAW,uBACXC,YAAY,eACd,6BAASP,cAAc,iBACrBC,MAAM,QAAQC,IAAI,OAClBC,OAAO,OACPC,SAAS,SACTC,SAAS,OACTC,WAAW,sBACXC,YAAY,oBCtCXC,EAFOC,wBAAsB,M,yCLPhCrC,K,UAAAA,E,kBAAAA,E,sBAAAA,E,gBAAAA,E,mBAAAA,M,cCyBAC,K,oBAAAA,E,sBAAAA,E,YAAAA,E,gBAAAA,E,sBAAAA,E,+BAAAA,E,qBAAAA,M,cAUAC,K,gBAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,kBAAAA,E,YAAAA,E,gBAAAA,E,sBAAAA,E,0BAAAA,E,UAAAA,E,YAAAA,E,eAAAA,M,cAeAC,K,YAAAA,E,cAAAA,E,UAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,sBAAAA,E,YAAAA,E,gBAAAA,E,YAAAA,E,cAAAA,E,sBAAAA,E,gBAAAA,E,UAAAA,E,YAAAA,E,gBAAAA,E,uBAAAA,E,2BAAAA,E,gBAAAA,E,gBAAAA,E,sBAAAA,E,qCAAAA,E,2BAAAA,E,UAAAA,E,mBAAAA,E,uBAAAA,E,mBAAAA,E,cAAAA,E,aAAAA,M,cAiCAC,K,wBAAAA,E,gBAAAA,E,YAAAA,E,qBAAAA,E,qBAAAA,E,cAAAA,E,oBAAAA,E,eAAAA,E,mBAAAA,E,yBAAAA,E,6BAAAA,E,wBAAAA,E,oBAAAA,E,sBAAAA,E,gCAAAA,E,+BAAAA,E,gBAAAA,E,gBAAAA,E,wBAAAA,E,gBAAAA,E,sBAAAA,E,sBAAAA,E,kBAAAA,E,2BAAAA,E,mBAAAA,E,wBAAAA,E,2BAAAA,E,sBAAAA,E,0BAAAA,E,wBAAAA,E,0BAAAA,E,6BAAAA,E,sBAAAA,E,2BAAAA,E,yBAAAA,E,uBAAAA,E,wBAAAA,E,wBAAAA,E,4BAAAA,E,wBAAAA,E,0BAAAA,E,wBAAAA,E,qBAAAA,E,sBAAAA,E,iBAAAA,E,kBAAAA,M,cCnDAC,K,cAAAA,E,cAAAA,E,YAAAA,E,uBAAAA,M,cAOAC,K,cAAAA,E,kBAAAA,E,UAAAA,E,aAAAA,M,cCTAC,K,oBAAAA,E,YAAAA,E,cAAAA,E,YAAAA,E,sBAAAA,E,oBAAAA,E,gBAAAA,E,iBAAAA,M,cAWAC,K,kBAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,cAAAA,E,gBAAAA,E,gBAAAA,E,cAAAA,E,kBAAAA,E,cAAAA,E,cAAAA,E,mBAAAA,M,cAiBAC,K,sBAAAA,E,wBAAAA,E,kBAAAA,E,4BAAAA,E,0BAAAA,E,sBAAAA,E,2BAAAA,M,cAUAC,K,kBAAAA,E,wBAAAA,E,sBAAAA,E,4BAAAA,E,sBAAAA,E,cAAAA,E,sBAAAA,E,oBAAAA,E,YAAAA,E,gBAAAA,E,wBAAAA,E,mBAAAA,E,2BAAAA,E,sBAAAA,E,yBAAAA,E,6BAAAA,E,eAAAA,M,KG/DL,IAAM4B,EAA4C,CAACpC,EAAaqC,KAAMrC,EAAasC,QAC7EC,EAAwC,CACnDvC,EAAaqC,KACbrC,EAAasC,OACbtC,EAAawC,UACbxC,EAAayC,MACbzC,EAAa0C,MACb1C,EAAa2C,OACb3C,EAAa4C,QACb5C,EAAa6C,QAGFC,GAA8D,mBACxE/C,EAAWgD,SAAW,IADkD,cAExEhD,EAAWiD,UAAY,CACtB,CACEC,MAAO,EACPC,MAAO,CAAC/C,EAAYgD,MAAOhD,EAAYiD,OACvCC,sBAAuBd,KAN8C,cASxExC,EAAWuD,KAAO,CACjB,CACEL,MAAO,EACPC,MAAO,CAAC/C,EAAYgD,OACpBE,sBAAuBd,GAEzB,CACEU,MAAO,EACPC,MAAO,CAAC/C,EAAYiD,OACpBC,sBAAuBd,GAEzB,CACEU,MAAO,EACPC,MAAO,CAAC/C,EAAYoD,MACpBF,sBAAuBjB,KAvB8C,cA0BxErC,EAAWyD,OAAS,CACnB,CACEP,MAAO,EACPC,MAAO,CAAC/C,EAAYgD,OACpBE,sBAAuBd,GAEzB,CACEU,MAAO,EACPC,MAAO,CAAC/C,EAAYiD,OACpBC,sBAAuBd,GAEzB,CACEU,MAAO,EACPC,MAAO,CAAC/C,EAAYoD,MACpBF,sBAAuBjB,KAxC8C,cA2CxErC,EAAW0D,UAAY,CACtB,CACER,MAAO,EACPC,MAAO,CAAC/C,EAAYgD,OACpBE,sBAAuBd,GAEzB,CACEU,MAAO,EACPC,MAAO,CAAC/C,EAAYiD,OACpBC,sBAAuBd,GAEzB,CACEU,MAAO,EACPC,MAAO,CAAC/C,EAAYoD,MACpBF,sBAAuBjB,KAzD8C,cA4DxErC,EAAW2D,cAAgB,CAC1B,CACET,MAAO,EACPC,MAAO,CAAC/C,EAAYgD,OACpBE,sBAAuBd,GAEzB,CACEU,MAAO,EACPC,MAAO,CAAC/C,EAAYiD,OACpBC,sBAAuBd,GAEzB,CACEU,MAAO,EACPC,MAAO,CAAC/C,EAAYoD,MACpBF,sBAAuBjB,KA1E8C,cA6ExErC,EAAW4D,SAAW,IA7EkD,GAgF9DC,GAA0D,mBACpE5D,EAAa2C,OAAS,CAAC1C,EAAS4D,OADoC,cAEpE7D,EAAayC,MAAQ,CAACxC,EAASwC,QAFqC,cAGpEzC,EAAa0C,MAAQ,CAACzC,EAASyC,QAHqC,cAIpE1C,EAAa6C,OAAS,CACrB5C,EAAS6D,IACT7D,EAAS8D,MACT9D,EAAS+D,MACT/D,EAASgE,QAR0D,cAUpEjE,EAAa4C,QAAU,CACtB3C,EAASiE,UACTjE,EAASkE,OACTlE,EAASmE,KACTnE,EAASoE,KACTpE,EAASqE,QAf0D,cAiBpEtE,EAAaqC,KAAO,CAACpC,EAASoC,OAjBsC,cAkBpErC,EAAasC,OAAS,CAACrC,EAASqC,SAlBoC,cAmBpEtC,EAAawC,UAAY,CAACvC,EAASuC,YAnBiC,cAoBpExC,EAAauE,IAAM,CAClBtE,EAASuE,QACTvE,EAASwE,QACTxE,EAASyE,YAvB0D,cAyBpE1E,EAAa2E,YAAc,CAC1B1E,EAAS2E,OACT3E,EAAS4E,OACT5E,EAAS6E,OACT7E,EAAS8E,QA7B0D,cA+BpE/E,EAAagF,KAAO,CACnB/E,EAASgF,IACThF,EAASiF,UACTjF,EAASkF,YACTlF,EAASmF,UACTnF,EAASoF,YACTpF,EAASqF,MArC0D,cAuCpEtF,EAAauF,MAAQ,CACpBtF,EAASuF,iBACTvF,EAASwF,OAzC0D,GAuJ1DC,GA1GgD,mBAC1D5F,EAAe6F,IAAM,CACpBzF,EAAQ0F,MACR1F,EAAQ2F,gBACR3F,EAAQ4F,OACR5F,EAAQ6F,WACR7F,EAAQ8F,MACR9F,EAAQ+F,KACR/F,EAAQgG,SACRhG,EAAQiG,SACRjG,EAAQkG,WACRlG,EAAQmG,mBACRnG,EAAQoG,UACRpG,EAAQqG,YAbiD,cAe1DzG,EAAe0G,QAAU,CACxBtG,EAAQuG,UACRvG,EAAQwG,SACRxG,EAAQyG,eACRzG,EAAQ0G,eACR1G,EAAQ2G,OACR3G,EAAQ4G,OACR5G,EAAQ6G,OACR7G,EAAQ8G,aAvBiD,cAyB1DlH,EAAemH,UAAY,CAC1B/G,EAAQgH,UACRhH,EAAQiH,UACRjH,EAAQkH,cACRlH,EAAQmH,QACRnH,EAAQoH,WACRpH,EAAQqH,SACRrH,EAAQsH,YACRtH,EAAQuH,YAjCiD,cAmC1D3H,EAAe4H,OAAS,CACvBxH,EAAQyH,WACRzH,EAAQ0H,WACR1H,EAAQ2H,WACR3H,EAAQ4H,aACR5H,EAAQ6H,YACR7H,EAAQ8H,WACR9H,EAAQ+H,WACR/H,EAAQgI,YA3CiD,cA6C1DpI,EAAeqI,QAAU,CACxBjI,EAAQkI,YACRlI,EAAQmI,WACRnI,EAAQoI,YACRpI,EAAQqI,aACRrI,EAAQsI,UACRtI,EAAQuI,aACRvI,EAAQwI,WACRxI,EAAQyI,YAI2C,mBACpDzI,EAAQkG,WAAa,CAAC,IAAK,MADyB,cAEpDlG,EAAQ4F,OAAS,CAAC,IAAK,IAAK,MAFwB,cAGpD5F,EAAQ+F,KAAO,CAAC,IAAK,MAH+B,cAIpD/F,EAAQoG,UAAY,CAAC,IAAK,MAJ0B,cAKpDpG,EAAQqG,UAAY,CAAC,IAAK,MAL0B,cAMpDrG,EAAQ0F,MAAS,CAAC,IAAK,IAAK,MANwB,cAOpD1F,EAAQiG,SAAW,CAAC,IAAK,IAAK,IAAK,MAPiB,cAQpDjG,EAAQ8F,MAAQ,CAAC,IAAK,MAR8B,cASpD9F,EAAQgG,SAAY,CAAC,IAAK,MAT0B,cAUpDhG,EAAQ2F,gBAAkB,CAAC,IAAK,IAAK,MAVe,cAWpD3F,EAAQmG,mBAAqB,CAAC,IAAK,IAAK,IAAK,MAXO,cAYpDnG,EAAQ6F,WAAa,CAAC,IAAK,IAAK,MAZoB,cAapD7F,EAAQwG,SAAW,CAAC,IAAK,IAAK,IAAK,MAbiB,cAcpDxG,EAAQuG,UAAY,CAAC,IAAK,IAAK,IAAK,MAdgB,cAepDvG,EAAQ0G,eAAiB,CAAC,IAAK,IAAK,IAAK,MAfW,cAgBpD1G,EAAQyG,eAAiB,CAAC,IAAK,IAAK,IAAK,MAhBW,cAiBpDzG,EAAQ2G,OAAS,CAAC,IAAK,IAAK,IAAK,MAjBmB,cAkBpD3G,EAAQ4G,OAAS,CAAC,IAAK,IAAK,IAAK,MAlBmB,cAmBpD5G,EAAQ8G,WAAa,CAAC,IAAK,IAAK,IAAK,MAnBe,cAoBpD9G,EAAQ6G,OAAS,CAAC,IAAK,IAAK,IAAK,MApBmB,cAqBpD7G,EAAQgH,UAAY,CAAC,GAAI,IAAK,IAAK,MArBiB,cAsBpDhH,EAAQiH,UAAY,CAAC,IAAK,IAAK,IAAK,MAtBgB,cAuBpDjH,EAAQmH,QAAU,CAAC,IAAK,IAAK,IAAK,MAvBkB,cAwBpDnH,EAAQkH,cAAgB,CAAC,IAAK,IAAK,IAAK,MAxBY,cAyBpDlH,EAAQqH,SAAW,CAAC,IAAK,IAAK,IAAK,MAzBiB,cA0BpDrH,EAAQoH,WAAa,CAAC,IAAK,IAAK,IAAK,MA1Be,cA2BpDpH,EAAQsH,YAAc,CAAC,IAAK,IAAK,IAAK,MA3Bc,cA4BpDtH,EAAQuH,UAAY,CAAC,IAAK,IAAK,IAAK,MA5BgB,cA6BpDvH,EAAQkI,YAAc,CAAC,IAAK,IAAK,IAAK,MA7Bc,cA8BpDlI,EAAQmI,WAAa,CAAC,IAAK,IAAK,IAAK,MA9Be,cA+BpDnI,EAAQoI,YAAc,CAAC,IAAK,IAAK,IAAK,MA/Bc,cAgCpDpI,EAAQqI,aAAe,CAAC,IAAK,IAAK,IAAK,MAhCa,cAiCpDrI,EAAQsI,UAAY,CAAC,IAAK,IAAK,IAAK,MAjCgB,cAkCpDtI,EAAQuI,aAAe,CAAC,IAAK,IAAK,IAAK,MAlCa,cAmCpDvI,EAAQwI,WAAa,CAAC,IAAK,IAAK,IAAK,MAnCe,cAoCpDxI,EAAQyI,UAAY,CAAC,IAAK,IAAK,IAAK,MApCgB,cAqCpDzI,EAAQyH,WAAa,CAAC,IAAK,IAAK,IAAK,MArCe,cAsCpDzH,EAAQ0H,WAAa,CAAC,IAAK,IAAK,IAAK,MAtCe,cAuCpD1H,EAAQ4H,aAAe,CAAC,IAAK,IAAK,IAAK,MAvCa,cAwCpD5H,EAAQ2H,WAAa,CAAC,IAAK,IAAK,IAAK,MAxCe,cAyCpD3H,EAAQ6H,YAAc,CAAC,GAAI,IAAK,IAAK,MAzCe,cA0CpD7H,EAAQ8H,WAAa,CAAC,IAAK,IAAK,IAAK,MA1Ce,cA2CpD9H,EAAQ+H,WAAa,CAAC,IAAK,IAAK,IAAK,MA3Ce,cA4CpD/H,EAAQgI,UAAY,CAAC,IAAK,IAAK,IAAK,MA5CgB,cA6CpDhI,EAAQ0I,UAAY,CAAC,IAAK,IAAK,IAAK,IAAK,MA7CW,cA8CpD1I,EAAQ2I,OAAS,CAAC,IAAK,MAGsD,mBAC7E/I,EAAe0G,QAAU,CACxBhG,EAAUsI,UACVtI,EAAUuI,MACVvI,EAAUwI,WACVxI,EAAUyI,WACVzI,EAAU0I,UANkE,cAQ7EpJ,EAAemH,UAAY,CAC1BzG,EAAU2I,SACV3I,EAAU4I,QACV5I,EAAU6I,UACV7I,EAAU8I,UACV9I,EAAU0I,UAbkE,cAe7EpJ,EAAe4H,OAAS,CACvBlH,EAAU+I,WACV/I,EAAUgJ,MACVhJ,EAAUiJ,YACVjJ,EAAUkJ,aACVlJ,EAAU0I,UApBkE,cAsB7EpJ,EAAeqI,QAAU,CACxB3H,EAAUmJ,UACVnJ,EAAUoJ,KACVpJ,EAAUqJ,aACVrJ,EAAUsJ,OACVtJ,EAAU0I,UA3BkE,G,QC9OzE,SAASa,EAAiBC,GAC/B,OAAOrK,OACJD,KAAKsK,GACLnL,KAAI,SAAAoL,GAAG,OAAID,EAAWC,M,ICbfC,EA8DAC,ECrCSC,E,WAQnB,WAAYC,GAAiB,yBAPbA,YAOY,OANrBC,gBAMqB,OALrBpH,WAKqB,OAJpBqH,wBAIoB,OAHpBC,kBAGoB,OAFpBC,kBAEoB,EAC1BC,KAAKL,OAASA,EACdK,KAAKJ,WAAaP,EAAc3J,GAChCsK,KAAKxH,MAAQ6G,EAAc5J,GAC3BuK,KAAKD,aAAe,IAAIE,IAAW,CACjCC,QAAS,OACTC,OAAQ,CAAC,OAAQ,WAAY,cAAe,YAAa,kBACzDC,YAAa,CAAC,U,2DAKhBJ,KAAKF,aAAeE,KAAKK,sBACzBL,KAAKD,aAAaO,YAClBN,KAAKD,aAAaQ,OAAOP,KAAKQ,KAAKC,uB,0BAI1BC,GACT,IAAIC,EAAWX,KAAKW,SAKpB,OAHAA,EAAWX,KAAKY,eAAeD,EAAUD,GACzCC,EAAWX,KAAKa,wBAAwBF,EAAUD,K,0CAIzBI,GACzB,OAAOd,KAAKF,aAAagB,IAAS,O,6CAIlC,OAAOd,KAAKW,SAASI,QAAO,SAAAC,GAAO,OAAIA,EAAQC,WAAavL,EAAgBqF,U,2CAGlDmG,GAC1B,GAAIlB,KAAKL,OAAOwB,SAAW,CAAC9L,EAAW4D,UAAUmI,SAASF,EAAKG,QAAS,CACtE,IAAMC,EAAelJ,EAAwB8I,EAAKG,QAC5CE,EAAgBvB,KAAKwB,sBAAsBN,EAAKG,OAAQH,EAAKK,eAC7DE,EAAezB,KAAKwB,sBAAsBN,EAAKG,OAAQH,EAAKO,cAElE,OAAIC,kBAAQJ,IAAiBI,kBAAQH,IAAkBG,kBAAQD,GACtD,KAEA,CACLH,eACAC,gBACAE,gBAKN,OAAO,O,qCAuDcd,EAAqBD,GAC1C,GAAIA,EAAQiB,OAAQ,CAClB,IAAMC,EAAiB5B,KAAKD,aAAa4B,OAAOjB,EAAQiB,OAAQ,CAC9DE,QAAQ,EACRC,MAAO,KACN3N,KAAI,SAAA4C,GAAC,OAAIA,EAAEgL,QAEd,OAAOpB,EAASI,QAAO,SAAAC,GAAO,OAAIY,EAAeR,SAASJ,EAAQe,SAGpE,OAAOpB,I,8CAGuBA,EAAqBD,GACnD,GAAyB,QAArBA,EAAQO,UAAuC,QAAjBP,EAAQI,KACxC,OAAOH,EAEP,IAAMM,EAAYP,EAAQO,UAAYjB,KAAKgC,gBACrClB,EAAQG,IAAavL,EAAgBmE,IAAM,MAAS6G,EAAQI,MAAQd,KAAKiC,YAE/E,OAAOtB,EAASI,QAAO,SAAAC,GAAO,OAAIA,EAAQF,OAASA,GAAQE,EAAQC,WAAaA,O,4CAKtDI,EAAoBa,GAAyC,IAAD,OAChFC,EAAWnC,KAAKQ,KAAhB2B,OAER,OAAOC,kBACLF,EAAY/N,KAAI,SAAAkO,GAAS,OAAI,EAAK1B,SAAS2B,MAAK,SAAA3N,GAAC,OAAIA,EAAEoN,OAASM,SAChElO,KAAI,SAAC6M,GAAa,IAAD,EACXuB,EAASvB,EAAQuB,OAAOlB,GAE9B,MAAO,CACLU,KAAMf,EAAQe,KACdS,KAAMxB,EAAQwB,KACdC,YAAazB,EAAQyB,YACrBC,IAAKH,EAAOI,QACZC,IAAKL,EAAOM,IACZV,OAAM,UAAEnB,EAAQmB,cAAV,aAAE,EAAgBW,QAAO,SAACC,EAA8BC,GAC5D,IAAMC,EAAQd,EAAOG,MAAK,SAAAY,GAAC,OAAIA,EAAEnB,OAASiB,KAE1C,OADAD,EAAKC,IAAgB,OAALC,QAAK,IAALA,OAAA,EAAAA,EAAOT,OAAQ,gBACxBO,IACN,U,4CAK4C,IAAD,OAC5CjD,EAAeqD,EAGrB,OAAOL,iBAAOhD,GAAc,SAACsD,EAAoCC,EAAoCC,GAAwB,IAAD,EAM1H,OALAF,EAAaE,IAAb,mBACG7N,EAAYoD,KAAOuJ,kBAAQiB,EAAkB5N,EAAYoD,MAAM1E,KAAI,SAAA4N,GAAI,OAAI,EAAKpB,SAAS2B,MAAK,SAAA3N,GAAC,OAAIA,EAAEoN,OAASA,UADjH,cAEGtM,EAAYiD,MAAQ0J,kBAAQiB,EAAkB5N,EAAYiD,OAAOvE,KAAI,SAAA4N,GAAI,OAAI,EAAKpB,SAAS2B,MAAK,SAAA3N,GAAC,OAAIA,EAAEoN,OAASA,UAFnH,cAGGtM,EAAYgD,MAAQ2J,kBAAQiB,EAAkB5N,EAAYgD,OAAOtE,KAAI,SAAA4N,GAAI,OAAI,EAAKpB,SAAS2B,MAAK,SAAA3N,GAAC,OAAIA,EAAEoN,OAASA,UAHnH,GAKOqB,IACN,M,2BA7GH,OAAOpD,KAAKL,OAAOa,O,+BAInB,OAAIR,KAAKL,OAAOwB,OACPnB,KAAKQ,KAAKG,SAGZ,K,kCAIP,OAAO1L,OAAOD,KAAKgL,KAAKuD,mBAAmB,K,sCAI3C,OAAOvD,KAAKuD,kBAAkBvD,KAAKiC,aAAa,K,wCAKhD,IAAKjC,KAAKH,mBAAoB,CAC5B,IAAMc,EAAWX,KAAKW,SAASmC,QAAO,SAACC,EAAgC/B,GACrE,MAAqB,QAAjBA,EAAQF,OAIRiC,EAAK/B,EAAQF,OACfiC,EAAK/B,EAAQF,MAAM0C,KAAKxC,EAAQC,UAChC8B,EAAK/B,EAAQF,MAAQ2C,eAAKV,EAAK/B,EAAQF,QAEvCiC,EAAK/B,EAAQF,MAAQ,IAPdiC,IAWR,IAEHpC,EAASlL,EAAYiD,OAAO8K,KAAK9N,EAAgBmE,KACjDmG,KAAKH,oBC/HmD6D,ED+HnB/C,EC/H2BgD,ED+HjB,SAACC,GAC9C,OAAIA,IAAMnO,EAAYgD,MACb,GAED,GClIPxD,OAAOD,KAAK0O,GAAKG,KAAKF,GAAcb,QAAO,SAACgB,EAAiCvE,GAElF,OADAuE,EAAOvE,GAAOmE,EAAInE,GACXuE,IACN,KAJE,IAAuDJ,EAAQC,EDuIlE,OAAO3D,KAAKH,uB,uBDvIJL,K,kBAAAA,E,oBAAAA,E,oBAAAA,E,uBAAAA,M,cA8DAC,K,kBAAAA,E,cAAAA,E,oBAAAA,E,iBAAAA,M,KG9CL,IAAMsE,EAA2B,CACtC1O,EAAWyD,OACXzD,EAAW0D,UACX1D,EAAW2D,eAGPgL,EAA+B,CACnC,MACA1O,EAAa2E,YACb3E,EAAauF,MACbvF,EAAauE,IACbvE,EAAagF,MAGM2J,E,WAQnB,WAAYtE,GAAiB,yBAPbA,YAOY,OANrBC,gBAMqB,OALrBpH,WAKqB,OAJrB0L,uBAIqB,OAHrBC,sBAGqB,OAFpBpE,kBAEoB,EAC1BC,KAAKL,OAASA,EACdK,KAAKxH,MAAQ6G,EAAc9J,GAC3ByK,KAAKJ,WAAaP,EAAc/J,GAChC0K,KAAKkE,kBAAoBhL,EACzB8G,KAAKmE,iBAAmBnE,KAAKoE,oBAC7BpE,KAAKD,aAAe,IAAIE,IAAW,CACjCC,QAAS,OACTC,OAAQ,CAAC,OAAQ,mBAAoB,WAAY,UAAW,cAC5DC,YAAa,CAAC,U,2DAKhBJ,KAAKD,aAAaO,YAClBN,KAAKD,aAAaQ,OAAOP,KAAKQ,KAAK6D,oB,0BAI1B3D,GACT,IAAI4D,EAAQtE,KAAKsE,MASjB,OAPAA,EAAQtE,KAAKY,eAAe0D,EAAO5D,GACnC4D,EAAQtE,KAAKa,wBAAwByD,EAAO5D,GAC5C4D,EAAQtE,KAAKuE,cAAcD,EAAO5D,GAClC4D,EAAQtE,KAAKwE,iBAAiBF,EAAO5D,GACrC4D,EAAQtE,KAAKyE,cAAcH,EAAO5D,GAClC4D,EAAQtE,KAAK0E,OAAOJ,EAAO5D,K,2BAKjBqB,GACV,OAAO/B,KAAKsE,MAAMhC,MAAK,SAAApB,GAAI,OAAIA,EAAKa,OAASA,MAAS,O,iCAGtCb,GAAiC,IAAD,OAChD,GAAIA,EAAKyD,IAAK,CACZ,IAAMA,EAAM3E,KAAKQ,KAAKoE,KAAKtC,MAAK,SAAAqC,GAAG,OAAIA,EAAI5C,OAASb,EAAKyD,OAEzD,GAAIA,EAAK,CACP,IAAME,EAAWzC,kBAAQuC,EAAIG,QAAQ3Q,KAAI,SAAA4Q,GAAM,OAAI,EAAKT,MAAMhC,MAAK,SAAApB,GAAI,OAAIA,EAAKa,OAASgD,SACzF,OAAO,2BACFJ,GADL,IAEEL,MAAOO,EACPrM,MAAOqM,EAAS1Q,KAAI,SAAA+M,GAAI,OAAIA,EAAKJ,WAKvC,OAAO,O,qCAyBcwD,EAAe5D,GACpC,GAAIA,EAAQiB,OAAQ,CAClB,IAAMC,EAAiB5B,KAAKD,aAAa4B,OAAOjB,EAAQiB,OAAQ,CAC9DE,QAAQ,EACRC,MAAO,KACN3N,KAAI,SAAA4C,GAAC,OAAIA,EAAEgL,QAEd,OAAOuC,EAAMvD,QAAO,SAAAG,GAAI,OAAIU,EAAeR,SAASF,EAAKa,SAG3D,OAAOuC,I,8CAGuBA,EAAe5D,GAC7C,GAAyB,QAArBA,EAAQO,UAAuC,QAAjBP,EAAQI,KACxC,OAAOwD,EAEP,IAAMrD,EAAYP,EAAQO,UAAYjB,KAAKgC,gBACrClB,EAAQJ,EAAQI,MAAQd,KAAKiC,YAEnC,OAAOqC,EAAMvD,QAAO,SAAAG,GAAI,OAAIA,EAAKJ,OAASA,GAAQI,EAAKD,WAAaA,O,oCAIlDqD,EAAe5D,GAEnC,OAAIA,EAAQO,UAAY+C,EAA6B5C,SAASV,EAAQO,UAC7DqD,EAIL5D,EAAQsE,gBAAkBtE,EAAQsE,iBAAmB5P,EAAe6F,IAC/DqJ,EAAMvD,QAAO,SAAAG,GAAI,OAAIR,EAAQsE,iBAAmB9D,EAAK+D,oBAGvDX,I,uCAGgBA,EAAe5D,GAEgD,IAAD,EAArF,OAAIsD,EAA6B5C,SAASV,EAAQO,UAAYjB,KAAKgC,kBAE7D,UAACtB,EAAQwE,gBAAT,aAAC,EAAkB9D,SAAS/L,EAAW4D,WAGlCqL,EAFAA,EAAMvD,QAAO,SAAAG,GAAI,OAAIA,EAAKG,SAAWhM,EAAW4D,YAOvDyH,EAAQwE,SACHZ,EAAMvD,QAAO,SAAAG,GAAI,uBAAIR,EAAQwE,gBAAZ,aAAI,EAAkB9D,SAASF,EAAKG,WAErDiD,EAAMvD,QAAO,SAAAG,GAAI,OAAI6C,EAAyB3C,SAASF,EAAKG,a,oCAIjDiD,EAAe5D,GAEnC,OAAIsD,EAA6B5C,SAASV,EAAQO,UAAYjB,KAAKgC,iBAC1DsC,EAGL5D,EAAQyE,QACHb,EAAMvD,QAAO,SAAAG,GAAI,QAAMA,EAAKyD,OAG9BL,I,6BAGMA,EAAe5D,GAC5B,IAAKA,EAAQ0E,QAEX,OAAOd,EAAMT,MAAK,SAACD,EAAGyB,GAAJ,OAAUzB,EAAE0B,SAAWD,EAAEC,YAG7C,OAAQ5E,EAAQ0E,SACd,KAAK5F,EAAU+F,QACb,OAAOjB,EAAMT,MAAK,SAACD,EAAGyB,GAAO,IAAD,EACH,CAACzB,EAAEpB,KAAKgD,cAAeH,EAAE7C,KAAKgD,eACrD,OAF0B,WAEF,EAAI,KAEhC,KAAKhG,EAAUiG,SACb,OAAOnB,EAAMT,MAAK,SAACD,EAAGyB,GAAO,IAAD,EACH,CAACzB,EAAEpB,KAAKgD,cAAeH,EAAE7C,KAAKgD,eACrD,OAF0B,UAEH,GAAK,KAEhC,KAAKhG,EAAUkG,SACb,OAAOpB,EAAMT,MAAK,SAACD,EAAGyB,GAAJ,OAAUzB,EAAE0B,SAAWD,EAAEC,YAC7C,KAAK9F,EAAUmG,UACb,OAAOrB,EAAMT,MAAK,SAACD,EAAGyB,GAAJ,QAAYzB,EAAE0B,SAAWD,EAAEC,aAC/C,QACE,OAAOhB,K,0CAIgD,IAAD,OAE1D,OAAOtE,KAAKxH,MAAMsK,QAAO,SAACC,EAAsCjC,GAK9D,OAJAiC,EAAKjC,GAAQ8E,kBAAQ,EAAK1B,mBAAmB,SAAA1L,GAAK,OAChDA,EAAM4I,SAASN,MAGViC,IACN,M,2BA5HH,OAAO/C,KAAKL,OAAOa,O,4BAInB,OAAIR,KAAKL,OAAOwB,OACPnB,KAAKQ,KAAK8D,MAGZ,K,sCAIP,OAAOtE,KAAKJ,WAAW,K,kCAIvB,OAAOI,KAAKkE,kBAAkBlE,KAAKgC,iBAAiB,O,KC/FnCtC,E,WAOnB,WAAYC,GAAiB,yBANbA,YAMY,OALpBI,kBAKoB,OAJrB8F,aAIqB,OAHrBC,WAGqB,OAFrBC,oBAEqB,EAC1B/F,KAAKL,OAASA,EACdK,KAAK6F,QAAU,CAACzQ,EAAe0G,QAAS1G,EAAemH,UAAWnH,EAAe4H,OAAQ5H,EAAeqI,SACxGuC,KAAK8F,MAAQzG,EAAcvJ,GAC3BkK,KAAK+F,eAAiB/K,EACtBgF,KAAKD,aAAe,IAAIE,IAAW,CACjCC,QAAS,OACTC,OAAQ,CAAC,OAAQ,QAAS,OAAQ,OAAQ,UAAW,SAAU,eAC/DC,YAAa,CAAC,U,2DAKhBJ,KAAKD,aAAaO,YAClBN,KAAKD,aAAaQ,OAAOP,KAAKQ,KAAKwF,qB,0BAI1BtF,GACT,IAAIyB,EAASnC,KAAKmC,OAQlB,OANAA,EAASnC,KAAKY,eAAeuB,EAAQzB,GACrCyB,EAASnC,KAAKiG,qBAAqB9D,EAAQzB,GAC3CyB,EAASnC,KAAKkG,eAAe/D,EAAQzB,GACrCyB,EAASnC,KAAKmG,cAAchE,EAAQzB,K,2BAM1BqB,EAAcqE,GACxB,OAAIA,EACKpG,KAAKmC,OAAOG,MAAK,SAAAW,GAAK,OAAIA,EAAMlB,OAASA,GAAQkB,EAAMoD,QAAUD,EAAOC,UAAU,KAElFrG,KAAKmC,OAAOG,MAAK,SAAAW,GAAK,OAAIA,EAAMlB,OAASA,MAAS,O,iCAI3CS,GAChB,OAAOxC,KAAKQ,KAAK2B,OAAOG,MAAK,SAAAW,GAAK,OAAIA,EAAMT,KAAK8D,gBAAkB9D,EAAK8D,kBAAkB,O,0CAGjEtB,GACzB,IAAMuB,EAAavG,KAAK+F,eAAef,GACvC,OAAOuB,EAAaA,EAAW,GAAKzQ,EAAU0I,U,qCAyBzB2D,EAAiBzB,GACtC,GAAIA,EAAQiB,OAAQ,CAClB,IAAMC,EAAiB5B,KAAKD,aAAa4B,OAAOjB,EAAQiB,OAAQ,CAC9DE,QAAQ,EACRC,MAAO,KACN3N,KAAI,SAAA4C,GAAC,OAAIA,EAAEgL,QAEd,OAAOI,EAAOpB,QAAO,SAAAkC,GAAK,OAAIrB,EAAeR,SAAS6B,EAAMlB,SAG9D,OAAOI,I,2CAGoBA,EAAiBzB,GAC5C,GAA+B,QAA3BA,EAAQsE,gBAA6C,QAAjBtE,EAAQ8F,KAC9C,OAAOrE,EAEP,IAAM6C,EAAkBtE,EAAQsE,gBAAkBhF,KAAKyG,aACjDD,EAAQ9F,EAAQ8F,MAAQxG,KAAK0G,YAEnC,OAAOvE,EAAOpB,QAAO,SAAAkC,GAAK,OAAIA,EAAMoD,QAAUrB,GAAkB/B,EAAMuD,OAASA,O,qCAK5DrE,EAAiBzB,GACtC,OAAIA,EAAQiG,QAA6B,QAAnBjG,EAAQiG,OACrBxE,EAAOpB,QAAO,SAAAkC,GAAK,OAAIvC,EAAQiG,SAAW1D,EAAM0D,UAGlDxE,I,oCAGaA,EAAiBzB,GACrC,OAAIA,EAAQlI,MACH2J,EAAOpB,QAAO,SAAAkC,GAAK,aAAIA,EAAMnC,OAAN,UAAcJ,EAAQlI,aAAtB,aAAc,EAAe4I,SAAS6B,EAAMnC,UAGrEqB,I,2BA1DP,OAAOnC,KAAKL,OAAOa,O,mCAInB,OAAOR,KAAK6F,QAAQ,K,kCAIpB,OAAO7F,KAAK4G,oBAAoB5G,KAAKyG,gB,6BAKrC,OAAIzG,KAAKL,OAAOwB,OACPnB,KAAKQ,KAAK2B,OAGZ,O,KChEU0E,E,WAQnB,WAAYC,GAAmB,yBAPxBA,aAOuB,OANvBtG,UAMuB,OAJduG,WAIc,OAHdC,cAGc,OAFdC,YAEc,EAC5BjH,KAAK8G,QAAUA,EACf9G,KAAK+G,MAAQ,IAAI9C,EAAYjE,MAC7BA,KAAKgH,SAAW,IAAItH,EAAeM,MACnCA,KAAKiH,OAAS,IAAIC,EAAalH,M,iGAOR8G,G,oEACnBA,IAAY9G,KAAK8G,Q,uBACnB9G,KAAKQ,UAAO2G,EACZnH,KAAK8G,QAAUA,E,SACT9G,KAAKoH,W,kQAKM,MAAO,YAAUpH,KAAK8G,QAAtB,c,OAAnB9G,KAAKQ,K,OAAyD6G,QAC9DrH,KAAK+G,MAAMO,eACXtH,KAAKgH,SAASM,eACdtH,KAAKiH,OAAOK,e,mIAfZ,QAAStH,KAAKQ,S,sBC1BH+G,GAV8B,WAAO,IAC1CC,EAAaC,eAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,MCLM,SAASK,KAGtB,OAFeC,qBAAWtQ,GCKrB,SAASuQ,KAA+F,IAC7G,IACIC,EADEC,EAAwBH,qBAAWI,KADoE,mBAA9CC,EAA8C,yBAA9CA,EAA8C,gBAkB7G,OAdIA,GAAcA,EAAWC,QAC3BJ,EAAS,GACTG,EAAWE,SAAQ,SAACC,GAClB,IAAMC,EAAQN,EAAUK,GACxB,IAAKC,EACH,MAAM,IAAI3T,MAAJ,uDAA0D0T,IAGlEN,EAAOM,GAAaC,MAGtBP,EAASC,EAGJD,E,UC3BGQ,GCiCGC,GA/BmB,WAChC,OACE,4BAAQC,UAAU,YAChB,0BAAMA,UAAU,2BAAhB,iCAGA,0BAAMA,UAAU,uBAAhB,KACA,0BAAMA,UAAU,wBAAhB,cACa,0CADb,4BAEE,uBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,yCAHP,UAQF,0BAAMH,UAAU,uBAAhB,KACA,0BAAMA,UAAU,6BACd,uBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,uDAHP,kB,2BDrBIL,K,gCAAAA,E,oCAAAA,E,oCAAAA,E,kCAAAA,E,kCAAAA,E,sCAAAA,E,sCAAAA,E,oCAAAA,E,4BAAAA,E,YAAAA,E,YAAAA,E,gBAAAA,E,aAAAA,Q,KAgBZ,IA4BeM,GAlBwB,SAAC,GAAD,IACrC/T,EADqC,EACrCA,GACA2T,EAFqC,EAErCA,UACAlG,EAHqC,EAGrCA,KACAxM,EAJqC,EAIrCA,MACAC,EALqC,EAKrCA,OALqC,OAOrC,yBACE8S,aAAYvG,EACZwG,IAAG,WAnBU,sBAmBV,YAAkBxG,EAAlB,QACHxM,MAAOA,EACPC,OAAQA,EACRgT,IAAKzG,EACLzN,GAAIA,EACJ2T,UAAWA,K,aE1CHQ,GASAC,GC2EGC,GA/DoC,SAAC,GAO7C,IAAD,ECzBJC,EACAC,EDkBAvU,EAMI,EANJA,GACA2T,EAKI,EALJA,UACAa,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,SACI,EACoCC,oBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,OAEoCF,mBAASH,GAAgBC,EAAQ,GAAGK,OAFxE,mBAEGC,EAFH,KAEiBC,EAFjB,KAGEC,GAAoB,UAAAR,EAAQnH,MAAK,SAAA4H,GAAG,OAAIA,EAAIJ,QAAUC,YAAlC,eAAiDR,QAASC,EAC9EW,EAAcC,sBAIpB,OCjCAf,ED+BkBc,EC9BlBb,EDyEA,WACMM,GACFC,GAAgB,ICzEpBnC,qBAAU,WACR,SAAS2C,EAAmBC,GACtBjB,EAAQkB,UAAYlB,EAAQkB,QAAQC,SAASF,EAAM3B,SACrDW,EAASgB,GAMb,OADAG,SAASC,iBAAiB,YAAaL,GAChC,WAELI,SAASE,oBAAoB,YAAaN,MAE3C,CAAChB,EAASC,IDkBX,yBACEvU,GAAIA,EACJ2T,UAAS,qBAAgBA,GAAwB,IACjDkC,IAAKT,GAEL,yBAAKzB,UAAU,yBACb,yBACEA,UAAU,sBACVmC,QA4BR,WACEhB,GAAiBD,KA3BX,0BAAMlB,UAAU,6BAA6Ba,GAC7C,0BAAMb,UAAU,6BAA6BuB,GAC7C,yBAAKvB,UAAU,oBAAmB,kBAAC,GAAD,CAAMlG,KAAMgG,GAASsC,cAAe9U,MAAO,GAAIC,OAAQ,MAE3F,yBAAKyS,UAAS,8BAAyBkB,EAAe,OAAS,KAC5DH,EAAQtV,KAAI,WAAmB4W,GAAnB,IAAGjB,EAAH,EAAGA,MAAOP,EAAV,EAAUA,MAAV,OACX,0BACEhK,IAAG,mBAAcuK,EAAd,YAAuBiB,GAC1BrC,UAAS,6BAAwBoB,IAAUC,EAAe,WAAa,IACvEiB,aAAYlB,EACZe,QAAS,kBAUrB,SAAkBf,GAChBE,EAAgBF,GAChBD,GAAgB,GAChBH,EAASI,GAbgBmB,CAASnB,KAEvBP,U,mBD3DHL,K,cAAAA,E,YAAAA,E,oBAAAA,E,gBAAAA,E,cAAAA,E,yBAAAA,Q,cASAC,K,eAAAA,E,mBAAAA,E,qBAAAA,E,iBAAAA,E,qBAAAA,E,0BAAAA,Q,KAaL,IGpBK+B,G,GHoBCC,IAAgC,qBAC1ChC,GAAUpC,MAAQmC,GAAQnC,OADgB,eAE1CoC,GAAUiC,KAAOlC,GAAQkC,MAFiB,eAG1CjC,GAAUnC,SAAWkC,GAAQlC,UAHa,eAI1CmC,GAAUlC,OAASiC,GAAQjC,QAJe,eAK1CkC,GAAUkC,MAAQnC,GAAQmC,OALgB,eAM1ClC,GAAUmC,WAAapC,GAAQoC,YANW,K,SGpBjCJ,K,wBAAAA,Q,KCwBZ,IAAMK,IAA8D,qBACjEpC,GAAUpC,MAAQ,CAACtH,EAAY+L,QAAS/L,EAAYsH,QADa,eAEjEoC,GAAUiC,KAAO,IAFgD,eAGjEjC,GAAUnC,SAAW,CAACvH,EAAY+L,QAAS/L,EAAYuH,WAHU,eAIjEmC,GAAUlC,OAAS,CAACxH,EAAY+L,QAAS/L,EAAYwH,SAJY,eAKjEkC,GAAUkC,MAAQ,IAL+C,eAMjElC,GAAUmC,WAAa,CAAC7L,EAAY+L,UAN6B,IASrD,SAASC,GACsDC,GAE5E,IAAMC,EAAStM,EAAc8J,IACrByC,EAAiB7D,GAAkBmD,GAAUW,SAA7CD,aACFE,EAAUC,eACVC,EAAWvE,eAoBjB,OAjBAC,qBAAU,WACR,IAAMuE,EACJN,EAAOrJ,MAAK,SAAA4J,GAAK,OAAIC,aAAUH,EAASxE,SAAU,CAAEyE,KAAMC,QACvDF,EAASxE,SAGd4E,aAAQ,WACN,IAAMC,EAAiBd,GAA6BU,GAEhDI,EAAejE,OAAS,GAC1B0D,EAAQQ,QAAQ,CACd3K,OAAQiK,EAAaW,cAAcF,GAAkB,WAI1D,CAACL,EAASxE,WAEN,CAACoE,EAAalL,QAAQgL,GAG7B,SAAoBhL,GAElBkL,EAAa,MAAD,OAAOY,qBAAWd,GAAlB,YAAyChL,K,IChE7C+L,G,mBAAAA,O,qBAAAA,I,qBAAAA,I,sBAAAA,I,yBAAAA,Q,KAOZ,I,GCPYC,GDaGC,GANO,WACpB,MAAO,CACLC,aAAcC,yBAAc,CAAEC,MAAM,eAAD,OAAiBL,GAAWM,OAA5B,WEUjCC,I,MAA8B,CAClC,CAAEf,KAAM9C,GAAUpC,OAClB,CAAEkF,KAAM9C,GAAUnC,UAClB,CAAEiF,KAAM9C,GAAUlC,UAmHLgG,gBAhHmB,WAAO,IAC/BL,EAAiBD,KAAjBC,aACApF,EAAaC,eAAbD,SAF8B,EAGRiE,GAA2BhM,EAAY+L,SAH/B,mBAG/B9K,EAH+B,KAGtBwM,EAHsB,OAIUvD,oBAAS,GAJnB,mBAI/BwD,EAJ+B,KAIbC,EAJa,KAMtC,OAAIR,EAmDA,4BAAQlE,UAAU,YAChB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,kBAAd,gBAEF,yBAAKA,UAAU,kBAAkBmC,QAAS,kBAAMuC,GAAoB,KAClE,kBAAC,GAAD,CAAM5K,KAAMgG,GAAS6E,KAAMrX,MAAO,MAEpC,kBAAC,KAAD,CACE0S,UAAU,uBACV4E,KAAMH,EACNI,QAAS,kBAAMH,GAAoB,IACnCI,SAAS,EACTxX,MAAM,OACNyX,UAAW,SAEX,wBAAI/E,UAAU,8BACXsE,GAAgB7Y,KAAI,SAACuZ,GACpB,IAAMC,EAAuBxC,GAAkBuC,EAASzB,MAChDA,EAASyB,EAATzB,KACF2B,EAAYpG,IAAayE,EAE/B,OACE,wBACEvD,UAAS,oCAA+BkF,EAAY,UAAY,IAChErO,IAAKoO,GAEL,kBAAC,KAAD,CAAME,GAAI5B,EAAMpB,QAAS,kBAAMuC,GAAoB,KAASO,OAIlE,wBAAIjF,UAAS,oCAA+BlB,IAAa2B,GAAUmC,WAAa,UAAY,KAC1F,kBAAC,KAAD,CAAMuC,GAAI1E,GAAUmC,WAAYT,QAAS,kBAAMuC,GAAoB,KAASlE,GAAQoC,aAEtF,wBAAI5C,UAAU,mCACZ,kBAAC,GAAD,CACEa,MAAM,SACNC,aAAc9I,EAAQoN,MACtBrE,QAASsE,GAAQ5Z,KAAI,SAAA2Z,GAAK,MAAK,CAAEvE,MAAOuE,EAAOhE,MAAOgE,MACtDpE,SAAUsE,SAlFtB,4BAAQtF,UAAU,YAChB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,kBAAd,eACA,wBAAIA,UAAU,uBACXsE,GAAgB7Y,KAAI,SAACuZ,GACpB,IAAMC,EAAuBxC,GAAkBuC,EAASzB,MAChDA,EAASyB,EAATzB,KACF2B,EAAYpG,IAAayE,EAE/B,OACE,wBACEvD,UAAS,mCAA8BkF,EAAY,UAAY,IAC/DrO,IAAKoO,GAEL,kBAAC,KAAD,CAAME,GAAI5B,GAAO0B,SAM3B,wBAAIjF,UAAU,sBACZ,wBAAIA,UAAU,2BACZ,yBAAKA,UAAU,8BACb,kBAAC,GAAD,CACEa,MAAM,SACNC,aAAc9I,EAAQoN,MACtBrE,QAASsE,GAAQ5Z,KAAI,SAAA2Z,GAAK,MAAK,CAAEvE,MAAOuE,EAAOhE,MAAOgE,MACtDpE,SAAUsE,MAIhB,wBAAItF,UAAS,kCAA6BlB,IAAa2B,GAAUmC,WAAa,UAAY,KACxF,kBAAC,KAAD,CAAMuC,GAAI1E,GAAUmC,YAAapC,GAAQoC,gBA2DrD,SAAS0C,EAAcF,GACrBZ,EAAW,CAAEY,UACbV,GAAoB,OC5GTa,I,MAfiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEjD,OACE,yBAAKxF,UAAU,YACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACZwF,IAGL,kBAAC,GAAD,SCGSC,GAjBA,SAAC,GAGF,IAFZC,EAEW,EAFXA,MACA3L,EACW,EADXA,YAYA,OATkC,WAChC,OACE,kBAAC,IAAD,KACE,gDAAsB2L,GACtB,0BAAM5L,KAAK,cAAc6L,QAAS5L,OCuL3B6L,I,MA/L+B,WAAO,IAAD,EACpB7C,GAA2BhM,EAAY+L,SADnB,mBAC3C9K,EAD2C,KAG5C6N,GAH4C,KAGtCJ,GAAO,CACjBC,MAAO,aACP3L,YAAa,yEAGf,OACE,oCACE,kBAAC8L,EAAD,MACA,yBAAK7F,UAAU,gBACb,uBAAGA,UAAU,uBACX,uDACA,8EACkD,iDADlD,UACmF,uDADnF,wDACwK,+DADxK,4BAEE,6BAFF,yHAKA,kCACM,mDADN,8CACiF,qDADjF,IAC+G,6BAD/G,8EAKF,uBAAGA,UAAU,uBACX,iEACA,uBAAGA,UAAU,sBACX,0CADF,qBAC2C,6BAD3C,UAES,uBAAGG,KAAK,4EAAR,sBAFT,KAEoH,8BAAOnI,EAAQoN,MAAf,cAFpH,uEAE8N,6BAF9N,OAGM,uBAAGjF,KAAK,2EAAR,SAHN,+DAG6J,4CAH7J,uBAGwM,sCAHxM,WAGiO,qDAHjO,SAGuQ,6BAHvQ,qEAIoE,iDAJpE,QAIqG,mDAJrG,yBAMA,gDACoB,+CADpB,oEACiH,uBAAGA,KAAK,uDAAR,qBADjH,IACqM,6BADrM,8GAE6G,6BAAM,6BAFnH,uCAGsC,oDAHtC,gDAGoH,0CAHpH,gBAGwJ,8BAExJ,iCACK,oDADL,gCACmE,6BADnE,0IAGiC,uBAAGA,KAAK,4EAAR,UAHjC,iCAG4J,uBAAGA,KAAK,4EAAR,sBAH5J,KAKA,6EAGE,iCACG,6BADH,sBAEM,2CAAwB,6BAF9B,kCAGa,6BAHb,sBAIM,2CAAwB,6BAJ9B,kCAKa,6BALb,sBAMM,2CAAwB,6BAN9B,qCAOU,6CAA0B,6BAPpC,iEAQ2B,6BAR3B,4EASsC,6BATtC,4DAUsB,6BAVtB,8DAWwB,6BAXxB,yEAYmC,6BAZnC,6DAauB,6BAbvB,+DAcyB,6BAdzB,sEAegC,6BAfhC,0EAgBoC,6BAhBpC,qCAiBU,4CAAyB,6BAjBnC,wDAkB6B,6BAlB7B,qDAmB0B,6BAnB1B,8DAoBmC,6BApBnC,yCAqBc,2CAAwB,6BArBtC,gDAsBqB,6BAtBrB,sBAuBM,6CAA0B,6BAvBhC,uDAwB4B,6BAxB5B,qCAyBqB,6BAzBrB,uCA0BuB,6BA1BvB,6CA2B6B,6BA3B7B,8BA4Bc,6BA5Bd,kCA6BkB,8BAhCpB,0BAoCA,2BACE,wCADF,2DAE0D,wCAF1D,0CAEoH,6BAFpH,oDAGmD,sDAHnD,0DAG2I,6BAH3I,4EAI2E,iEAJ3E,6BAImJ,6BAJnJ,oFAKmF,uBAAGA,KAAK,kGAAR,sBALnF,IAKmN,6BAAM,6BALzN,6CAQE,iCACG,6BADH,sBAEM,2CAAwB,6BAF9B,qCAGU,6CAA0B,6BAHpC,qCAIU,4CAAyB,6BAJnC,sBAKM,2CAAwB,6BAL9B,qCAMU,6CAA0B,6BANpC,qCAOU,4CAAyB,6BAPnC,yBAQS,6BART,UAWA,gEAEE,4BACE,4BAAI,8BAAM,6CAAV,kHACA,4BACE,8BAAM,8CADR,4IACkL,6BADlL,4FAE2F,mDAF3F,uHAE6O,6BAF7O,4EAG2E,uBAAGA,KAAK,2EAAR,SAH3E,kBAGqL,4CAHrL,uBAGgO,sCAHhO,WAGyP,qDAHzP,aAQN,2BACE,wCADF,kKAKE,iCACG,6BADH,sBAEM,6CAA0B,6BAFhC,uDAG4B,6BAH5B,qCAIqB,6BAJrB,uCAKuB,6BALvB,6CAM6B,6BAN7B,kCAOkB,8BAElB,4BACE,4BACE,8BAAM,8CADR,wJAC8L,+CAD9L,gCAGA,4BACE,iDADF,2IAGA,4BACE,iDADF,QACmC,uDADnC,mCACqG,uBAAGA,KAAK,mEAAmED,IAAI,YAA/E,cADrG,gFAGA,4BACE,8CADF,yFAxBJ,wDA4BuD,uBAAGC,KAAK,2EAAR,SA5BvD,+BA8BA,2BACE,sCACA,uBAAGA,KAAK,4EAAR,QAFF,wEAEkK,6BAChK,kCACI,6BADJ,+BAEe,6BAFf,uCAGuB,6BAHvB,oCAIoB,6BAJpB,qCAKqB,6BALrB,gCAMgB,6BANhB,sBAOM,yCAAsB,6BAP5B,sBAQM,4CAAyB,6BAR/B,sBASM,0CAAuB,8BAE7B,4BACE,4BACE,8BAAM,0CADR,0EAGA,sCACS,8BAAM,6CADf,kHAC8J,wDAD9J,mBAGA,4BACE,2CADF,KAC0B,gDAD1B,KACuD,mDADvD,KACuF,iDADvF,2GAKJ,2BACE,0CADF,uGAGE,sQAHF,4OAO6I,qDAP7I,sCAOgN,uBAAGA,KAAK,iHAAR,UAPhN,QAOuV,uBAAGA,KAAK,kIAAR,YAPvV,KASA,2BACE,sCADF,iGAEgG,6BAFhG,2EAMA,4KACgJ,6BAC9I,uBAAGA,KAAK,+BAAR,iCAFF,kBAEwF,6BAAM,6BAF9F,6DCnLK2F,GANkC,WAC/C,OACE,kBAAC,GAAD,Q,SLJQ9B,K,4BAAAA,E,YAAAA,E,0BAAAA,E,kBAAAA,E,wBAAAA,E,4BAAAA,E,sBAAAA,E,4BAAAA,E,0BAAAA,E,2BAAAA,Q,KAaZ,IAAM+B,GAAY,qBAEZC,IAAwC,qBAC3ChC,GAAapX,aAD8B,UACZmZ,GADY,sCAE3C/B,GAAatB,KAF8B,UAEpBqD,GAFoB,+BAG3C/B,GAAajX,YAH8B,UAGbgZ,GAHa,oCAI3C/B,GAAaiC,QAJ8B,UAIjBF,GAJiB,8BAK3C/B,GAAakC,WAL8B,UAKdH,GALc,mCAM3C/B,GAAamC,aAN8B,UAMZJ,GANY,sCAO3C/B,GAAa5W,UAP8B,UAOf2Y,GAPe,kCAQ3C/B,GAAaoC,aAR8B,UAQZL,GARY,sCAS3C/B,GAAaqC,YAT8B,UASbN,GATa,qCAU3C/B,GAAasC,YAV8B,UAUbP,GAVa,0BAyC/BQ,GAnB4B,SAAC,GAAD,IACzCla,EADyC,EACzCA,GACA2T,EAFyC,EAEzCA,UACA5H,EAHyC,EAGzCA,KACA0B,EAJyC,EAIzCA,KACAxM,EALyC,EAKzCA,MACAC,EANyC,EAMzCA,OANyC,OAQzC,yBACE8S,aAAYvG,EACZwG,IAAG,WAAM0F,GAAW5N,GAAjB,YAA0B0B,EAAK8D,cAA/B,QACHtQ,MAAOA,EACPC,OAAQA,EACRgT,IAAKzG,EACLzN,GAAIA,EACJ2T,UAAWA,KM+DAwG,I,MArGuB,WAAO,IAAD,IAClCtC,EAAiBD,KAAjBC,aACF/F,EAASgB,KAF2B,EAGZ4D,GAA4BhM,EAAYuH,UAH5B,mBAGnCtG,EAHmC,KAG1BwM,EAH0B,OAKgCrG,EAAlEG,SAAYzD,EALsB,EAKtBA,kBAAmBvB,EALG,EAKHA,gBAAiBC,EALd,EAKcA,YAClDkN,EAAY,UAAIzO,EAAQO,gBAAZ,QAAwBe,EACpCoN,EAAQ,UAAI1O,EAAQI,YAAZ,QAAoBmB,EAPQ,EASM0H,mBAA0BwF,GAThC,mBASnCE,EATmC,KASjBC,EATiB,OAUF3F,mBAAsByF,GAVpB,mBAUnCG,EAVmC,KAUrBC,EAVqB,OAWM7F,oBAAS,GAXf,mBAWnCwD,EAXmC,KAWjBC,EAXiB,KAa1C,OAAIR,EAEA,kBAAC,KAAD,CACEU,KAAMH,EACNsC,cAAe,kBAAMrC,GAAqBD,IAC1CI,QAAS,kBAAMH,GAAoB,IACnC1E,UAAS,0CAAqC6G,EAAajJ,eAC3DtQ,MAAM,OACNyX,UAAW,QAEViC,KAIEA,IAGT,SAASC,EAAiB7O,EAAmB8O,GAC3C,OACE,wBAAIlH,UAAU,qCACXkH,EAAkBzb,KAAI,SAAA0b,GAAe,OACpC,wBACEtQ,IAAG,uBAAkBsQ,GACrBnH,UAAS,0CAAqC2G,IAAqBQ,EAAkB,WAAa,KAElG,0BACEnH,UAAU,sCACVmC,QAAS,kBAsDgCiF,EAtDQhP,EAuD3DwO,EADwBrO,EAtDkB4O,GAwD1C3C,EAAW,CAAEjM,WAAUH,KAAMgP,SAC7B1C,GAAoB,GAHtB,IAA0BnM,EAA2B6O,IApDxCD,IAAoBna,EAAgBiZ,QAAU,OAASkB,QAQpE,SAASH,IACP,OACE,wBAAIhH,UAAU,kBACXvU,cAAIoP,GAAoB,SAACwM,EAAcjP,GACtC,IAAMkP,EAAaT,IAAiBzO,EACpC,OACE,wBACEvB,IAAG,uBAAkBuB,GACrB4H,UAAS,+BAA0BsH,EAAa,WAAa,KAE7D,0BACEtH,UAAU,2BACVmC,QAAS,kBAwBvB,SAAsB/J,GACpB,IAAMmP,EAAyB1M,EAAkBzC,GAAM,GAEvD0O,EAAgB1O,GAChBwO,EAAoBW,GACpB/C,EAAW,CAAEpM,OAAMG,SAAUgP,IA7BFC,CAAapP,KAE5B,kBAAC,GAAD,CACE4H,UAAU,iCACV1S,MAAOga,EAAa,GAAK,EACzB/Z,OAAQ+Z,EAAa,EAAI,GACzBxN,KAAMwN,EAAaxH,GAASsC,cAAgBtC,GAAS2H,iBAEtDrP,EACD,kBAAC,GAAD,CACE4H,UAAU,gCACV5H,KAAM4L,GAAajX,YACnB+M,KAAM1B,EACN9K,MAAO,MAGV2Z,EAAiB7O,EAAMiP,WC1CvBK,I,MArCgC,SAAC,GAKzC,IAJL1H,EAII,EAJJA,UACA2H,EAGI,EAHJA,YACAvG,EAEI,EAFJA,MACAJ,EACI,EADJA,SACI,EACgCC,mBAASG,GADzC,mBACGwG,EADH,KACeC,EADf,KAGEC,EAAoBC,sBAAYC,oBAAS,SAACC,GAC9CjH,EAAShI,kBAAQiP,QAAOxJ,EAAYwJ,KACnC,KAAM,IAET,OACE,yBAAKjI,UAAS,mBAAcA,GAAwB,KAClD,2BACEA,UAAU,kBACV2H,YAAaA,EACbvP,KAAK,OACLgJ,MAAOwG,EACP5G,SAYN,SAAuB/U,GACrB4b,EAAc5b,EAAEgU,OAAOmB,OACvB0G,EAAkB7b,EAAEgU,OAAOmB,UAZzB,yBAAKpB,UAAU,2BACb,kBAAC,GAAD,CACEA,UAAU,iBACVlG,KAAMgG,GAAS4H,OACfpa,MAAO,SCbF6V,I,MAnBoB,WAAO,IAAD,EACTJ,GAA4BhM,EAAYuH,UAD/B,mBAChCtG,EADgC,KACvBwM,EADuB,KAGvC,OACE,yBAAKxE,UAAU,oBACb,kBAAC,GAAD,CACEA,UAAU,2BACV2H,YAAY,gDACZvG,MAAOpJ,EAAQiB,QAAU,GACzB+H,SAKN,SAAwB/H,GACtBuL,EAAW,CAAEvL,iB,oBCHFiP,I,OAX+B,SAAC,GAGxC,IAFLrH,EAEI,EAFJA,MACArT,EACI,EADJA,MAEA,OACE,wBAAIwS,UAAU,UAAUvS,MAAO,CAAE0a,gBAAiB3a,IAC/CqT,KCgMQoF,I,OA5L2B,SAAC,GAEpC,IADL3N,EACI,EADJA,QAEM6F,EAASgB,KACTiJ,EAAQ9P,EAAQC,WAAavL,EAAgBmE,IAE7CiH,EAAOgQ,EAAQrb,EAAYiD,MAAQsI,EAAQF,KAEjD,OACE,yBAAK4H,UAAU,aACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,mBACd,kBAAC,GAAD,CAAU5H,KAAM4L,GAAajX,YAAa+M,KAAM1B,EAAM9K,MAAO,MAE/D,yBAAK0S,UAAU,2BACb,wBAAIA,UAAU,0BACX1H,EAAQwB,MAEX,wBACEkG,UAAU,6BACVvS,MAAO,CAAED,MAAM,uBAAD,OAAyB6a,oBAAUjQ,GAAnC,OAEbgQ,EAAQrb,EAAYiD,MAAQoI,EAJ/B,OAMGE,EAAQC,WAAavL,EAAgBiZ,QAAU,OAAS3N,EAAQC,SANnE,cAUJ,yBAAKyH,UAAU,6BACZ1H,EAAQgQ,SAAWvN,eAAKzC,EAAQgQ,SAAS7c,KAAI,SAAA8c,GAAK,OACjD,0BACE1R,IAAG,kBAAayB,EAAQe,KAArB,kBAAmCkP,GACtCvI,UAAU,2BAEV,kBAAC,GAAD,CACEa,MAAO0H,EACP/a,MAAK,kCAA6B6a,oBAAUjQ,GAAvC,aAMf,yBAAK4H,UAAU,sBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,0BA4FvB,WACE,IAAIwI,EAAa,KAEXC,EAAiBC,KAAepQ,EAAQyB,YAAa,YAAY,SAAC4O,EAAGC,GACzE,OACE,0BACE/R,IAAG,cAASyB,EAAQe,KAAjB,oBAAiCf,EAAQwB,KAAzC,YAAiD8O,GACpD5I,UAAU,yCAFZ,QASJ,GAAI1H,EAAQmB,OAAQ,CAClB,IAAMoP,EAAiBH,KAAeD,EAAgB,kBAAkB,SAACK,EAAOF,EAAGG,GAAY,IAAD,EACtFzO,EAAU0O,SAASF,GACnBG,EAAS,UAAG9K,EAAOI,OAAO3E,KAAKU,UAAtB,aAAG,EAA6BR,KAE/C,OAAImP,EAEA,kBAAC,KAAD,CACEpS,IAAG,cAASyB,EAAQe,KAAjB,kBAA+BiB,EAA/B,YAA0CsO,EAA1C,YAA+CG,GAClD5D,GAAI1E,GAAUkC,MAAMiB,QAAQ,QAAStJ,EAAQ4O,YAC7ClJ,UAAU,wCAETiJ,GAKH,kBAAC,KAAD,CACEpS,IAAG,cAASyB,EAAQe,KAAjB,kBAA+BiB,EAA/B,YAA0CsO,EAA1C,YAA+CG,GAClD5D,GAAI1E,GAAUkC,MAAMiB,QAAQ,QAAStJ,EAAQ4O,YAC7ClJ,UAAU,gDAHZ,oBAWNwI,EAAaK,OAEbL,EAAaC,EAGf,OAAOD,EA1IEW,IAEH,yBAAKnJ,UAAU,qBA4BvB,WACE,GAAIoI,EACF,OACE,yBAAKpI,UAAU,iCACZoJ,EAAYzc,EAAWuD,MACvBkZ,EAAYzc,EAAWiD,WACvBwZ,EAAYzc,EAAWgD,WAK9B,OACE,oCACE,yBAAKqQ,UAAU,4BACZoJ,EAAYzc,EAAW2D,eACvB8Y,EAAYzc,EAAW0D,WACvB+Y,EAAYzc,EAAWyD,SAE1B,yBAAK4P,UAAU,4BACZoJ,EAAYzc,EAAWuD,MACvBkZ,EAAYzc,EAAWiD,WACvBwZ,EAAYzc,EAAWgD,YAhDrB0Z,KAGL,yBAAKrJ,UAAU,0BACb,wBAAIA,UAAU,8BAAd,sBAGA,4BACG1H,EAAQgR,UAAU7d,KAAI,SAAAmP,GAAQ,OAC7B,wBACE/D,IAAG,kBAAayB,EAAQe,KAArB,qBAAsCuB,GACzCoF,UAAU,uBAEV,kBAAC,KAAD,CAAMmF,GAAI,CACRrG,SAAU,SACV7F,OAAO,cAAD,OAAgB2B,EAAhB,0BAA0CuD,EAAOE,MAAM5C,iBAAiBb,MAE7EA,IAAa/N,EAASwF,KAAO,OAASuI,WAqCvD,SAASwO,EAAYzQ,GACnB,IAAM4Q,EAAQjR,EAAQuB,OAAOlB,GAE7B,OACE,yBAAK9B,IAAG,sBAAiB8B,GAAUqH,UAAU,oBAC3C,4BACEA,UAAU,0BACVvS,MAAO,CAAED,MAAM,oBAAD,OAAsB6a,oBAAU1P,GAAhC,OAEbA,GAEH,4BACE,wBAAIqH,UAAU,mBACZ,0BAAMA,UAAU,0BAAhB,cAGA,wBAAIA,UAAU,wBACXuJ,EAAMtP,QADT,MACqBsP,EAAMC,UAG7B,wBAAIxJ,UAAU,mBACZ,0BAAMA,UAAU,0BAAhB,gBAGA,wBAAIA,UAAU,wBACXuJ,EAAMpP,IADT,MACiBoP,EAAME,kB,kBC9IpB,SAASC,GAAqB5R,GAA0B,IAAf6R,EAAc,uDAAJ,GAAI,EAChC1I,mBAAgB2I,gBAAM9R,EAAM6R,IADI,mBAC7DE,EAD6D,KACjDC,EADiD,OAE1B7I,mBAAc4I,EAAW,IAFC,mBAE7DE,EAF6D,KAE9CC,EAF8C,KAUpE,OANAhL,qBAAU,WACR,IAAMiL,EAASL,gBAAM9R,EAAM6R,GAC3BG,EAAcG,GACdD,EAAiBC,EAAO,IAAM,MAC7B,CAACnS,EAAM6R,IAEH,CACLI,gBACAG,eAAgBC,KAGlB,SAASA,IAaP,OAZ4C,SAAC,GAAkB,IAAhB3E,EAAe,EAAfA,SAC7C,OACE,kBAAC,KAAD,CACE4E,WAAYL,EAAcrK,OAC1B2K,KAAMC,EACNC,QAASR,EAAcrK,OAAS5H,EAAK4H,OACrC8K,OAAQ,2CAEPhF,IAOT,SAAS8E,IACP,IAAMG,EAAeC,KAAKC,KAAKZ,EAAcrK,OAASiK,GAAW,EACjEK,EAAiB,GAAD,oBAAKD,GAAL,aAAuBF,EAAWY,EAAe,O,WCatDG,GAtCwB,SAAC,GAEjC,IADL3S,EACI,EADJA,SACI,EACuCyR,GAAoCzR,EAAU,IAAjF8R,EADJ,EACIA,cAAeG,EADnB,EACmBA,eAEvB,OACE,yBAAKlK,UAAU,kBACZ/H,EAASyH,OAAS,EACjB,oCACE,yBAAKM,UAAU,0BACb,yBAAKA,UAAU,iCACb,wBAAIA,UAAU,iCAAd,WAGA,wBAAIA,UAAU,iCAAd,aAKJ,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,4BACb,kBAACkK,EAAD,KACGH,EAActe,KAAI,SAAA6M,GAAO,OACxB,kBAAC,GAAD,CAASzB,IAAG,kBAAayB,EAAQe,MAAQf,QAASA,WAO5D,yBAAK0H,UAAU,6BAAf,mDCEOuE,I,OAAAA,aA3B6B,WAAO,IACzCrB,EAAiB7D,GAAkBmD,GAAUW,SAA7CD,aAGFjL,EAFSkH,KAiBCb,SAASuM,IAAI,CACzB5R,OAAQiK,EAAajL,SAASgB,OAC9Bb,KAAM8K,EAAajL,SAASG,KAC5BG,SAAU2K,EAAajL,SAASM,WAhBpC,OACE,oCACE,kBAAC,GAAD,MACA,yBAAKyH,UAAU,uBACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,oBACb,kBAAC,GAAD,CAAM/H,SAAUA,WCXX6S,GAdyB,WACtC,IAAMjF,EAAMJ,GAAO,CACjBC,MAAO,oBACP3L,YAAa,8DAGf,OACE,oCACE,kBAAC8L,EAAD,MACA,kBAAC,GAAD,QCiDSkF,I,OA7CgC,SAAC,GAKzC,IAAD,EAJJ/K,EAII,EAJJA,UACAgL,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACAzF,EACI,EADJA,SACI,EACgCvE,mBAASgK,GAAe,GADxD,mBACGC,EADH,KACeC,EADf,KAOJ,OAJAC,IAAMpM,WAAU,WACdmM,EAAcF,GAAe,KAC5B,CAACA,IAGF,yBAAKjL,UAAS,iBAAYA,GAAwB,KAChD,wBAAIA,UAAU,sBACXgL,EAASvf,KAAI,SAAC4f,EAAsBhJ,GAAvB,OACZ,wBACExL,IAAG,cAASwU,EAAQxK,MAAjB,YAA0BwB,GAC7BrC,UAAS,iCAA4BkL,IAAe7I,EAAQ,WAAa,IACzE5U,MAAO,CACL,qBAAsB4d,EAAQC,YAAcD,EAAQ7d,MACpDA,MAAO6d,EAAQ7d,MACf+d,YAAaF,EAAQE,aAAeF,EAAQ7d,OAE9C2U,QAAS,kBAenB,SAAoBE,GAClB8I,EAAc9I,GAhBSmJ,CAAWnJ,KAEzBgJ,EAAQxK,WAbjB,UAkBGuK,IAAMK,SAAShgB,IAAI+Z,GAAU,SAAAkG,GAAI,OAChC,yBAAK7U,IAAG,mBAAcqU,IACnBQ,aApBP,aAkBG,EAIGrT,QAAO,SAACsQ,EAAGC,GAAJ,OAAUA,IAAMsC,QC8FlBS,I,OAnIqC,SAAC,GAE9C,IADLvT,EACI,EADJA,KAGMhB,EADS+H,KACab,SAASsN,oBAAoBxT,GACnDyT,EAAyBzU,EAC7B7K,OAAOD,KAAKwf,iBAAO1U,GAAc,SAAA2U,GAAI,OAAIA,EAAKrM,OAAS,MACrD,GALA,EAOwCuB,mBAAyB,MAPjE,mBAOG+K,EAPH,KAOmBC,EAPnB,KASJ,OACE,yBAAKjM,UAAU,kBACZ5I,EACC,yBAAK4I,UAAU,2BACb,kBAAC,GAAD,CACEgL,SAAUa,EAAsBpgB,KAAI,SAAA2b,GAAW,MAAK,CAClDvG,MAAOuG,EACP5Z,MAAM,uBAAD,OAAyB4Z,EAAYxJ,cAArC,KACL2N,YAAanE,IAAgBra,EAAYgD,MACvC,iCADW,8BAEYqX,EAAYxJ,cAFxB,KAGb0N,WAAW,2BAAD,OAA6BlE,EAAYxJ,cAAzC,UAGXiO,EAAsBpgB,KAAI,SAAC2b,GAC1B,OACE,yBAAKvQ,IAAG,eAAUuQ,IAgBhC,SAA2BhP,GACzB,IAAKhB,EACH,OAAO,KAGT,OAAOA,EAAagB,GAAM3M,KAAI,SAAC6M,GAC7B,IAAMgP,GAA2B,OAAd0E,QAAc,IAAdA,OAAA,EAAAA,EAAgB3S,QAASf,EAAQe,KAEpD,OACE,yBACExC,IAAG,gBAAWuB,EAAX,YAAmBE,EAAQe,MAC9B2G,UAAS,wCAAmC5H,EAAKwF,cAAxC,YAAyD0J,EAAa,WAAa,KAE5F,0BACEtH,UAAU,+BACVmC,QAAS,kBAAM8J,EAAkB3E,EAAa,KAAOhP,KAEpDA,EAAQwB,MAEVwN,GACC,yBAAKtH,UAAU,iCACb,4BAAQA,UAAU,6CA8C9B,SAA2B1H,GACzB,IAAMmQ,EAAiBC,KAAepQ,EAAQyB,YAAa,YAAY,SAAC4O,EAAGC,GACzE,OACE,0BACE/R,IAAG,cAASyB,EAAQe,KAAjB,oBAAiCf,EAAQwB,KAAzC,YAAiD8O,GACpD5I,UAAU,oDAFZ,QAUAyI,GAAkByD,mBAASzD,EAAe,MAAQA,EAAe,GAAGK,MAAM,SAC5EL,EAAe,GAAf,YAAyBA,EAAe,KAG1C,OAAOA,EA9DMU,CAAkB7Q,IAEpB7M,cAAI6M,EAAQuB,QAAQ,SAAC0P,EAAO5Q,GAC3B,OAAIA,IAAWhM,EAAW4D,SACjB,KAIP,yBAAKsG,IAAG,sBAAiB8B,GAAUqH,UAAU,kCAC3C,4BACEA,UAAU,wCACVvS,MAAO,CAAED,MAAM,oBAAD,OAAsB6a,oBAAU1P,GAAhC,OAEbA,GAEH,4BACE,wBAAIqH,UAAU,iCACZ,0BAAMA,UAAU,wCAAhB,cAGA,wBAAIA,UAAU,sCACXuJ,EAAMtP,QADT,MACqBsP,EAAMC,UAG7B,wBAAIxJ,UAAU,iCACZ,0BAAMA,UAAU,wCAAhB,gBAGA,wBAAIA,UAAU,sCACXuJ,EAAMpP,IADT,MACiBoP,EAAME,kBAM9B0C,eAxEEC,CAAkBhF,SAQ7B,yBAAKpH,UAAU,wBACZ5H,EADH,4BCmGO2S,I,OAzIyB,WACtC,IAAM5M,EAASgB,KACT/H,EAAe+G,EAAOG,SAAS+N,uBAC/BR,EAAwB,CAAC9e,EAAYsD,WAHC,EAIA4Q,mBAAyB,MAJzB,mBAIrC+K,EAJqC,KAIrBC,EAJqB,KAM5C,OACE,yBAAKjM,UAAU,uBACb,yBAAKA,UAAU,gCACb,kBAAC,GAAD,CACEgL,SAAUa,EAAsBpgB,KAAI,SAAA2b,GAAW,MAAK,CAClDvG,MAAOuG,EACP5Z,MAAM,uBAAD,OAAyB4Z,EAAYxJ,cAArC,KACL2N,YAAanE,IAAgBra,EAAYgD,MACvC,iCADW,8BAEYqX,EAAYxJ,cAFxB,KAGb0N,WAAW,2BAAD,OAA6BlE,EAAYxJ,cAAzC,UAGXiO,EAAsBpgB,KAAI,SAAC2b,GAC1B,OACE,yBAAKvQ,IAAG,eAAUuQ,IAWrBhQ,EAAa3L,KAAI,SAAC6M,GACvB,IAAMgP,GAA2B,OAAd0E,QAAc,IAAdA,OAAA,EAAAA,EAAgB3S,QAASf,EAAQe,KAC9CkQ,EAAQjR,EAAQuB,OAAOlN,EAAW2D,eAExC,OACE,yBACEuG,IAAG,0BAAqByB,EAAQe,MAChC2G,UAAS,uDAAkDsH,EAAa,WAAa,KAErF,0BACEtH,UAAU,oCACVmC,QAAS,kBAAM8J,EAAkB3E,EAAa,KAAOhP,KAEpDA,EAAQwB,MAEVwN,GACC,yBAAKtH,UAAU,sCACb,4BAAQA,UAAU,kDAgC9B,SAA2B1H,GACzB,IAAIkQ,EAAa,KAEXC,EAAiBC,KAAepQ,EAAQyB,YAAa,YAAY,SAAC4O,EAAGC,GACzE,OACE,0BACE/R,IAAG,cAASyB,EAAQe,KAAjB,oBAAiCf,EAAQwB,KAAzC,YAAiD8O,GACpD5I,UAAU,yDAFZ,QASJ,GAAI1H,EAAQmB,OAAQ,CAClB,IAAMoP,EAAiBH,KAAeD,EAAgB,kBAAkB,SAACK,EAAOF,EAAGG,GAAY,IAAD,EACtFzO,EAAU0O,SAASF,GACnBG,EAAS,UAAG9K,EAAOI,OAAO3E,KAAKU,UAAtB,aAAG,EAA6BR,KAE/C,OAAImP,EAEA,kBAAC,KAAD,CACEpS,IAAG,cAASyB,EAAQe,KAAjB,kBAA+BiB,EAA/B,YAA0CsO,EAA1C,YAA+CG,GAClD5D,GAAI1E,GAAUkC,MAAMiB,QAAQ,QAAStJ,EAAQ4O,YAC7ClJ,UAAU,wDAETiJ,GAKH,kBAAC,KAAD,CACEpS,IAAG,cAASyB,EAAQe,KAAjB,kBAA+BiB,EAA/B,YAA0CsO,EAA1C,YAA+CG,GAClD5D,GAAI1E,GAAUkC,MAAMiB,QAAQ,QAAStJ,EAAQ4O,YAC7ClJ,UAAU,gEAHZ,oBAWNwI,EAAaK,OAEbL,EAAaC,EAQf,OAJID,GAAc0D,mBAAS1D,EAAW,MAAQA,EAAW,GAAGM,MAAM,SAChEN,EAAW,GAAX,YAAqBA,EAAW,KAG3BA,EAnFMW,CAAkB7Q,IAGrB,yBAAKzB,IAAG,4BAA+BmJ,UAAU,uCAC/C,4BACE,wBAAIA,UAAU,sCACZ,0BAAMA,UAAU,6CAAhB,cAGA,wBAAIA,UAAU,2CACXuJ,EAAMtP,QADT,MACqBsP,EAAMC,UAG7B,wBAAIxJ,UAAU,sCACZ,0BAAMA,UAAU,6CAAhB,gBAGA,wBAAIA,UAAU,2CACXuJ,EAAMpP,IADT,MACiBoP,EAAME,6BC9B5BsB,I,OArCgC,SAAC,GAEzC,IADLnQ,EACI,EADJA,SAIA,OAFyBqJ,KAAjBC,aAIJ,kBAAC,KAAD,CACElE,UAAS,qCACT1S,MAAM,OACNyX,UAAW,QAEX,yBAAK/E,UAAU,oCACb,yBAAKA,UAAU,yBAAf,qBAGCpF,IAAa/N,EAASwF,KACrB,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAmB+F,KAAMwC,MAQjC,yBAAKoF,UAAU,oCACZpF,IAAa/N,EAASwF,KACrB,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAmB+F,KAAMwC,OCmDlB0R,I,OAhFkC,SAAC,GAG3C,IAFL9T,EAEI,EAFJA,KACAF,EACI,EADJA,QAEA,OACE,wBAAI0H,UAAU,oBAMhB,WACE,IAAIwI,EAAa,KAEXC,EAAiBC,KAAepQ,EAAQyB,YAAa,YAAY,SAAC4O,EAAGC,GACzE,OACE,0BACE/R,IAAG,cAAS2B,EAAKa,KAAd,oBAA8Bf,EAAQwB,KAAtC,YAA8C8O,GACjD5I,UAAU,2BAgDZ1H,EAAQ0B,MAAQ1B,EAAQ4B,IAExB,wBAAI8F,UAAU,yBAAyB1H,EAAQ4B,KAI/C,wCACG,wBAAI8F,UAAU,yBAAyB1H,EAAQ0B,KADlD,IAC4D,wBAAIgG,UAAU,yBAAyB1H,EAAQ4B,KAD3G,SA/CJ,GAAI5B,EAAQmB,OAAQ,CAClB,IAAMoP,EAAiBH,KAAeD,EAAgB,kBAAkB,SAACK,EAAOF,EAAGG,GACjF,IAAMzO,EAAU0O,SAASF,GACnBG,EAAY3Q,EAAQmB,OAASnB,EAAQmB,OAAOa,GAAW,KAC7D,OAAI2O,EAEA,kBAAC,KAAD,CACEpS,IAAG,cAAS2B,EAAKa,KAAd,kBAA4BiB,EAA5B,YAAuCsO,EAAvC,YAA4CG,GAC/C5D,GAAI1E,GAAUkC,MAAMiB,QAAQ,QAAStJ,EAAQ4O,YAC7ClJ,UAAU,2BAETiJ,GAKH,kBAAC,KAAD,CACEpS,IAAG,cAAS2B,EAAKa,KAAd,kBAA4BiB,EAA5B,YAAuCsO,EAAvC,YAA4CG,GAC/C5D,GAAI1E,GAAUkC,MAAMiB,QAAQ,QAAStJ,EAAQ4O,YAC7ClJ,UAAU,kCAHZ,oBAWNwI,EAAaK,OAEbL,EAAaC,EAIXD,GAAc0D,mBAAS1D,EAAW,MAAQA,EAAW,GAAGM,MAAM,SAChEN,EAAW,GAAX,YAAqBA,EAAW,KAGlC,OAAOA,EAxDJ+D,MCmBQC,I,OA9B+B,SAAC,GAGxC,IAFLhU,EAEI,EAFJA,KACAiU,EACI,EADJA,YAEA,OACE,wBAAIzM,UAAU,iBAAd,IACG,wBAAIA,UAAU,wBAAwByM,EAAY5c,OADrD,OAkBO4c,EACJ3c,MACArE,KAZoB,SAAC2M,GAAD,OACrB,wBACEvB,IAAG,UAAK2B,EAAKa,KAAV,iBAAuBjB,GAC1B4H,UAAU,sBACVvS,MAAO,CAAED,MAAM,uBAAD,OAAyB4K,EAAKwF,cAA9B,OAEbxF,MAOFgC,QAAO,SAACsS,EAAMC,GAAP,MAAgB,CAACD,EAAM,OAAQC,MArBzC,OAGGF,EAAY5c,MAAQ,EAAI,WAAa,aC0D7B+c,I,OA7D2B,SAAC,GAGpC,IAFL3Q,EAEI,EAFJA,IAEI,IADJ4Q,oBACI,WACkC5L,mBAAS4L,GAD3C,mBACGC,EADH,KACgBC,EADhB,KAGJ,OACE,yBAAK/M,UAAU,aACb,yBACEA,UAAU,2BACVmC,QAAS,kBAAM4K,GAAgBD,KAFjC,QAIO,0BAAM9M,UAAU,mBAAmB/D,EAAInC,MAC5C,0BAAMkG,UAAS,kCAA6B8M,EAAc,GAAK,aAC5DA,EACC,kBAAC,GAAD,CAAMhT,KAAMgG,GAASkN,iBAAkB1f,MAAO,EAAGC,OAAQ,KAEzD,kBAAC,GAAD,CAAMuM,KAAMgG,GAASmN,gBAAiB3f,MAAO,GAAIC,OAAQ,MAI/D,yBAAKyS,UAAS,sCAAiC8M,EAAc,GAAK,aAChE,yBAAK9M,UAAU,sBACb,yBAAKA,UAAU,sBACb,4BAAQA,UAAU,gCACf/D,EAAInM,MAAMod,KAAK,OAElB,wBAAIlN,UAAU,8BACXvU,cAAIwQ,EAAIkR,SAAS,SAACC,EAAOC,GAAR,OAChB,wBACExW,IAAG,oBAAeoF,EAAI5C,KAAnB,YAA2BgU,GAC9BrN,UAAU,4BAEV,wBAAIA,UAAU,kCAAkCqN,EAAhD,KACCD,QAKT,wBAAIpN,UAAU,wBACX/D,EAAIL,MAAMnQ,KAAI,SAAA+M,GAAI,OACjB,wBACE3B,IAAG,oBAAeoF,EAAI5C,KAAnB,YAA2Bb,EAAKa,OAEnC,kBAAC,KAAD,CAAM8L,GAAI1E,GAAUiC,KAAKkB,QAAQ,QAASpL,EAAKa,KAAK6P,YAAalJ,UAAU,6BACxExH,EAAK8U,MACJ,kBAAC,GAAD,CAAUlV,KAAM4L,GAAatB,KAAM5I,KAAMtB,EAAK8U,KAAMhgB,MAAO,KAE7D,wBAAI0S,UAAU,kCACXxH,EAAKsB,iB,qDCkGX4I,GAnJwB,SAAC,GAEjC,IADLlK,EACI,EADJA,KAEM2F,EAASgB,KACToO,EAAeC,mBAAQ,kBAAMrP,EAAOG,SAASmP,qBAAqBjV,KAAO,CAACA,IAC1EkV,EAAcF,mBAAQ,kBAAMrP,EAAOE,MAAMsP,WAAWnV,KAAO,CAACA,IAC5D+D,EAAmB/D,EAAK+D,kBAAoB,YAElD,OACE,yBAAKyD,UAAU,iCACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,sCACb,0BAAMA,UAAU,4BACbxH,EAAK8U,MACJ,kBAAC,GAAD,CAAUlV,KAAM4L,GAAatB,KAAM5I,KAAMtB,EAAK8U,KAAMhgB,MAAO,MAG/D,yBAAK0S,UAAU,oCACb,wBACEA,UAAU,2BACVvS,MAAO,CAAED,MAAM,oBAAD,OAAsB6a,oBAAU7P,EAAKG,QAArC,OAEbH,EAAKsB,MAER,wBACEkG,UAAU,8BAGTxH,EAAKG,OAJR,IAIiBH,EAAKJ,QAI1B,yBAAK4H,UAAU,kCACb,wCACUxH,EAAKoE,UAEdL,EAJH,UAOF,yBAAKyD,UAAU,+BACZxH,EAAKuB,aACJ,yBAAKiG,UAAU,mCACZxH,EAAKuB,aAGTwT,GACC,yBAAKvN,UAAU,gCA2CzB,WAA+B,IAAD,IAC5B,OAAOuN,IAAgB,UAAAA,EAAaxU,oBAAb,eAA2B2G,QAAS,GACzD,wBAAIM,UAAU,sCAAd,UACGuN,EAAaxU,oBADhB,aACG,EAA2BtN,KAAI,SAAC6M,EAAS+J,GAAV,OAC9B,kBAAC,GAAD,CACExL,IAAG,UAAK2B,EAAKa,KAAV,kBAAwBgJ,GAC3B7J,KAAMA,EACNF,QAASA,QAjDNsV,IAGJF,GACC,yBAAK1N,UAAU,2BACb,0BAAMA,UAAU,gCAAhB,QAAqD0N,EAAY5T,MACjE,yBAAKkG,UAAU,+BACb,4BAAQA,UAAU,yCACf0N,EAAY5d,MAAMod,KAAK,OAE1B,wBAAIlN,UAAU,uCACXvU,cAAIiiB,EAAYP,SAAS,SAACC,EAAOC,GAAR,OACxB,wBACExW,IAAG,oBAAe6W,EAAYrU,KAA3B,YAAmCgU,GACtCrN,UAAU,qCAEV,wBAAIA,UAAU,2CAA2CqN,EAAzD,KACCD,SAOZG,GACC,yBAAKvN,UAAU,gCACb,yBAAKA,UAAU,gDA8B3B,WAAgC,IAAD,EACvBoI,EAAQ5P,EAAKD,WAAa3L,EAAauE,IAEvC0c,EAAiB,CAAC,iBAAkB,mBAAoB,yBAE9D,OAAON,GACL,wBAAIvN,UAAU,uCAAd,UACGuN,EAAa1U,qBADhB,aACG,EAA4BpN,KAAI,SAAC6M,EAAS+J,GAAV,OAC/B,kBAAC,WAAD,CAAUxL,IAAG,aAAQ2B,EAAKa,KAAb,kBAA2BgJ,IACrC+F,GAAS,0BAAMpI,UAAU,6CAA6C6N,EAAexL,IACtF,kBAAC,GAAD,CACE7J,KAAMA,EACN3B,IAAG,UAAK2B,EAAKa,KAAV,kBAAwBgJ,GAC3B/J,QAASA,SA1CNwV,GAkDf,WAAgC,IAAD,EAC7B,OAAOP,GACL,wBAAIvN,UAAU,uCAAd,UACGuN,EAAa3U,oBADhB,aACG,EAA2BnN,KAAI,SAACsiB,EAAM1L,GACrC,QAAS0L,EAAK9d,uBAAyB8d,EAAK9d,sBAAsByI,SAASF,EAAKD,YAC9E,kBAAC,GAAD,CACE1B,IAAG,UAAK2B,EAAKa,KAAV,kBAAwBgJ,GAC3B7J,KAAMA,EACNiU,YAAasB,OAIlB,CAAClhB,EAAS4D,KAAM5D,EAASwC,MAAOxC,EAASyC,OAAOoJ,SAASF,EAAKJ,OAC7D,wBAAI4H,UAAU,+CACZ,wBAAIA,UAAU,sDAAd,OADF,wBACkG,wBAAIvS,MAAO,CAAED,MAAO,+BAApB,SADlG,WACwK,wBAAIC,MAAO,CAAED,MAAO,8BAApB,UA/DjKwgB,KAINxV,EAAKyV,QACJ,yBAAKjO,UAAU,8BACZxH,EAAKyV,YC7BLC,I,OA5D2C,SAAC,GAEpD,IADL1V,EACI,EADJA,KAEM2V,EAAazM,sBADf,EAEgCT,oBAAS,GAFzC,mBAEGmN,EAFH,KAEeC,EAFf,KAGEC,ECVO,SAAgC5C,EAA8Bje,GAAsE,IAAD,EACxHwT,qBADwH,mBACzIsN,EADyI,KACnIC,EADmI,KAkBhJ,OAfAxP,qBAAU,WAERyP,YAAW,WACL/C,EAAK7J,SAEP6M,aAAOhD,EAAK7J,QAAS,CAAE8M,WAAY,EAAGlhB,UACnCzB,MAAK,SAACuiB,GACDA,GACFC,EAAQD,QAIf,OACF,CAAC7C,EAAMje,IAEH,SAACqM,EAAc8G,GAChB2N,IACFK,kBAAOL,EAAD,UAAUzU,EAAV,SACN8G,GAAYA,MDXCiO,CAAuBV,EAAY,CAAE5gB,OAAQ,OAAQuhB,QAAS,IAAKxhB,MAAO,SAa3F,OAXA0R,qBAAU,WACJoP,IACFE,EAAS9V,EAAKsB,MAAM,WAClBuU,GAAc,MAIhBI,YAAW,kBAAMJ,GAAc,KAAQ,SAKzC,0BAAMrO,UAAU,mBAAmB0F,MAAM,wBACtC0I,EACC,0BAAMpO,UAAU,0BACd,yBAAKvS,MAAO,CAAEshB,QAAS,SAAWjhB,MAAM,6BAA6BR,MAAM,KAAKC,OAAO,KAAKM,QAAQ,aAAaE,OAAO,WACtH,uBAAGC,KAAK,OAAOC,SAAS,WACtB,uBAAG+gB,UAAU,iBAAiB9gB,YAAY,KACxC,4BAAQ+gB,cAAc,KAAK9gB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC7C,0BAAM6gB,EAAE,+BACN,sCAAkB5gB,cAAc,YAAY8J,KAAK,SAAS+W,KAAK,UAAUhK,GAAG,YAAY3W,IAAI,KAAKK,YAAY,oBAOvH,0BAAMmR,UAAU,yBAAyBmC,QAAS,kBAAMkM,GAAc,KACpE,kBAAC,WAAD,CACE3I,MAAM,4BACNhY,SAAS,QACT0hB,OAAO,EACPC,SAAU,EACVtG,QAAS,GACTuG,KAAK,SAEL,yBAAK7hB,MAAO,CAAEshB,QAAS,SAAWjhB,MAAM,6BAA6BsQ,QAAQ,MAAMvQ,QAAQ,cAAc0hB,iBAAiB,kBAAkBjiB,MAAM,KAAKC,OAAO,MAC5J,2BACE,0BAAMS,KAAK,UAAUkhB,EAAE,0TAMhCd,GACC,yBAAKpO,UAAU,yBAAyBkC,IAAKiM,EAAY1gB,MAAO,CAAEF,OAAQ,IAAKuhB,QAAS,IAAKxhB,MAAO,MAClG,kBAAC,GAAD,CAAkBkL,KAAMA,QE4FnBkK,I,OApIwB,SAAC,GAGjC,IAFLlK,EAEI,EAFJA,KACAqU,EACI,EADJA,aAEM1O,EAASgB,KACToO,EAAeC,mBAAQ,kBAAMrP,EAAOG,SAASmP,qBAAqBjV,KAAO,CAACA,IAC1EkV,EAAcF,mBAAQ,kBAAMrP,EAAOE,MAAMsP,WAAWnV,KAAO,CAACA,IAC5D+D,EAAmB/D,EAAK+D,kBAAoB,YAGlD,OACE,yBAAKyD,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,gBACbxH,EAAK8U,MACJ,kBAAC,GAAD,CAAUlV,KAAM4L,GAAatB,KAAM5I,KAAMtB,EAAK8U,KAAMhgB,MAAO,MAG/D,yBAAK0S,UAAU,wBACb,wBAAIA,UAAU,gBACZ,kBAAC,KAAD,CAAMmF,GAAI1E,GAAUiC,KAAKkB,QAAQ,QAASpL,EAAKa,KAAK6P,YAAalJ,UAAU,6BACxExH,EAAKsB,MAER,kBAAC,GAAD,CAAgBtB,KAAMA,KAExB,wBACEwH,UAAU,iBACVvS,MAAO,CAAED,MAAM,oBAAD,OAAsB6a,oBAAU7P,EAAKG,QAArC,OAEbH,EAAKG,OAJR,IAIiBH,EAAKJ,QAI1B,yBAAK4H,UAAU,sBACb,kBAAC,GAAD,CACEa,MAAOtE,EACP/O,MAAK,4BAAuB6a,oBAAU9L,GAAjC,OAEP,sCACQ/D,EAAKoE,YAIjB,yBAAKoD,UAAU,mBACZxH,EAAKuB,aACJ,yBAAKiG,UAAU,uBACZxH,EAAKuB,aAGTwT,GACC,yBAAKvN,UAAU,oBAuBzB,WAA+B,IAAD,IAC5B,OAAOuN,IAAgB,UAAAA,EAAaxU,oBAAb,eAA2B2G,QAAS,GACzD,wBAAIM,UAAU,0BAAd,UACGuN,EAAaxU,oBADhB,aACG,EAA2BtN,KAAI,SAAC6M,EAAS+J,GAAV,OAC9B,kBAAC,GAAD,CACExL,IAAG,UAAK2B,EAAKa,KAAV,kBAAwBgJ,GAC3B7J,KAAMA,EACNF,QAASA,QA7BNsV,GACD,yBAAK5N,UAAU,oCAmC3B,WAAgC,IAAD,EACvBoI,EAAQ5P,EAAKD,WAAa3L,EAAauE,IAEvC0c,EAAiB,CAAC,iBAAkB,mBAAoB,yBAE9D,OAAON,GACL,wBAAIvN,UAAU,2BAAd,UACGuN,EAAa1U,qBADhB,aACG,EAA4BpN,KAAI,SAAC6M,EAAS+J,GAAV,OAC/B,kBAAC,WAAD,CAAUxL,IAAG,aAAQ2B,EAAKa,KAAb,kBAA2BgJ,IACrC+F,GAAS,0BAAMpI,UAAU,iCAAiC6N,EAAexL,IAC1E,kBAAC,GAAD,CACE7J,KAAMA,EACN3B,IAAG,UAAK2B,EAAKa,KAAV,kBAAwBgJ,GAC3B/J,QAASA,SA/CNwV,GAuDf,WAAgC,IAAD,EAC7B,OAAOP,GACL,wBAAIvN,UAAU,2BAAd,UACGuN,EAAa3U,oBADhB,aACG,EAA2BnN,KAAI,SAACsiB,EAAM1L,GACrC,QAAS0L,EAAK9d,uBAAyB8d,EAAK9d,sBAAsByI,SAASF,EAAKD,YAC9E,kBAAC,GAAD,CACE1B,IAAG,UAAK2B,EAAKa,KAAV,kBAAwBgJ,GAC3B7J,KAAMA,EACNiU,YAAasB,OAIlB,CAAClhB,EAAS4D,KAAM5D,EAASwC,MAAOxC,EAASyC,OAAOoJ,SAASF,EAAKJ,OAC7D,wBAAI4H,UAAU,mCACZ,wBAAIA,UAAU,0CAAd,OADF,wBACsF,wBAAIvS,MAAO,CAAED,MAAO,+BAApB,SADtF,WAC4J,wBAAIC,MAAO,CAAED,MAAO,8BAApB,UApErJwgB,KAINxV,EAAKyV,QACJ,yBAAKjO,UAAU,kBACZxH,EAAKyV,SAIXP,GACC,yBAAK1N,UAAU,eACb,kBAAC,GAAD,CAAS/D,IAAKyR,EAAab,aAAcA,SCtCtC2C,I,OAxCyB,WAAO,IACrCnW,EAASoW,eAATpW,KAEFb,EADS2G,KACKd,MAAMzE,KAAKoP,SAAS3P,IAClCwM,EAAMJ,GAAO,CACjBC,MAAOlN,EAAOA,EAAKsB,KAAO,iBAC1BC,YAAavB,EAAI,yCAAqCA,EAAKsB,MAAS,mBAGtE,OACE,oCACE,kBAAC+L,EAAD,MACA,yBAAK7F,UAAU,UACZxH,EACC,oCACE,yBAAKwH,UAAU,kBACb,kBAAC,KAAD,CAAMmF,GAAI1E,GAAUpC,OAClB,kBAAC,GAAD,CACE2B,UAAU,sBACV1S,MAAO,EACPC,OAAQ,GACRuM,KAAMgG,GAAS4P,kBALnB,mBASF,yBAAK1P,UAAU,qBACb,kBAAC,GAAD,CAAMxH,KAAMA,EAAMqU,cAAc,IAChC,kBAAC,GAAD,CAAcjS,SAAUpC,EAAKJ,SAIjC,yBAAK4H,UAAU,oBAAf,sBClCK2P,GAN4B,WACzC,OACE,kBAAC,GAAD,OC+GWnJ,I,OArGuB,WAAO,IAAD,IAClCtC,EAAiBD,KAAjBC,aACF/F,EAASgB,KAF2B,EAGZ4D,GAAyBhM,EAAYsH,OAHzB,mBAGnCrG,EAHmC,KAG1BwM,EAH0B,OAK6BrG,EAA/DE,MAAS7C,EALyB,EAKzBA,kBAAmBlC,EALM,EAKNA,gBAAiBC,EALX,EAKWA,YAC/CkN,EAAY,UAAIzO,EAAQO,gBAAZ,QAAwBe,EACpCoN,EAAQ,UAAI1O,EAAQI,YAAZ,QAAoBmB,EAPQ,EASM0H,mBAAuBwF,GAT7B,mBASnCE,EATmC,KASjBC,EATiB,OAUF3F,mBAAmByF,GAVjB,mBAUnCG,EAVmC,KAUrBC,EAVqB,OAWM7F,oBAAS,GAXf,mBAWnCwD,EAXmC,KAWjBC,EAXiB,KAa1C,OAAIR,EAEA,kBAAC,KAAD,CACEU,KAAMH,EACNsC,cAAe,kBAAMrC,GAAqBD,IAC1CI,QAAS,kBAAMH,GAAoB,IACnC1E,UAAS,gDAA2C2G,EAAiB/I,eACrEtQ,MAAM,OACNyX,UAAW,QAEV6K,KAIEA,IAGT,SAASC,EAAgBtX,EAAwB+Q,GAC/C,OACE,wBAAItJ,UAAU,+BACXsJ,EAAU7d,KAAI,SAAAmP,GAAQ,OACrB,wBACE/D,IAAG,oBAAe+D,GAClBoF,UAAS,qCAAgC6G,IAAiBjM,EAAW,WAAa,KAElF,0BACEoF,UAAU,iCACVmC,QAAS,kBAsDrB,SAA0B5J,EAAwBqC,GAChDkM,EAAgBlM,GAChB4J,EAAW,CAAEjM,WAAUH,KAAMwC,IAC7B8J,GAAoB,GAzDKoL,CAAiBvX,EAAUqC,KAEzCA,IAAa/N,EAASwF,KAAO,OAASuI,QAQnD,SAASgV,IACP,OACE,wBAAI5P,UAAU,oBACXvU,cAAI+P,GAAoB,SAAC8N,EAAW/Q,GACnC,IAAM+O,EAAaX,IAAqBpO,EACxC,OACE,wBACE1B,IAAG,wBAAmB0B,GACtByH,UAAS,qCAAgCsH,EAAa,WAAa,KAEnE,0BACEtH,UAAU,iCACVmC,QAAS,kBAwBvB,SAA0B5J,GACxB,IAAMwX,EAAkBvU,EAAkBjD,GAAU,GAEpDqO,EAAoBrO,GACpBuO,EAAgBiJ,GAChBvL,EAAW,CAAEjM,WAAUH,KAAM2X,IA7BFC,CAAiBzX,KAEhC,kBAAC,GAAD,CACEyH,UAAU,uCACV1S,MAAOga,EAAa,GAAK,EACzB/Z,OAAQ+Z,EAAa,EAAI,GACzBxN,KAAMwN,EAAaxH,GAASsC,cAAgBtC,GAAS2H,iBAEtDlP,EACD,kBAAC,GAAD,CACEyH,UAAU,sCACV5H,KAAM4L,GAAapX,aACnBkN,KAAMvB,EACNjL,MAAO,MAGVuiB,EAAgBtX,EAAU+Q,WC3C1B2G,I,OAtCgD,SAAC,GAOzD,IANLjQ,EAMI,EANJA,UACAkQ,EAKI,EALJA,SACArP,EAII,EAJJA,MACAO,EAGI,EAHJA,MACA5T,EAEI,EAFJA,MACAwT,EACI,EADJA,SACI,EACgCC,mBAASiP,GADzC,mBACG5I,EADH,KACe6I,EADf,KAEEC,EAAe9I,EAAa,CAChC9Z,MAAOA,EACP6iB,WAAW,iBAAD,OAAmB7iB,IAC3B,GACE8iB,EAAehJ,EAAa,CAChCa,gBAAiB3a,EACjB+iB,UAAU,YAAD,OAAc/iB,EAAd,uBAAkCA,IACzC,GAEJ,OACE,yBAAKwS,UAAS,2BAAsBA,GAAwB,KAC1D,yBACEnJ,IAAG,+BAA0BuK,GAC7BpB,UAAS,kCAA6BsH,EAAa,WAAa,IAChEnF,QASN,WACEgO,GAAe7I,GACftG,GAAUsG,IAVN7Z,MAAO2iB,GAENvP,EACD,0BAAMb,UAAU,gCAAgCvS,MAAO6iB,QCsBhDE,I,OA3C0C,SAAC,GAKnD,IAJLxQ,EAII,EAJJA,UACAyQ,EAGI,EAHJA,cACA1P,EAEI,EAFJA,QACAC,EACI,EADJA,SACI,EAC0CC,mBAAmBwP,GAD7D,mBACGC,EADH,KACoBC,EADpB,KAGJ,OACE,yBAAK3Q,UAAS,wBAAmBA,GAAwB,KACtDe,EAAQtV,KAAI,SAACmlB,GACZ,IAAMtJ,EAAaoJ,EAAgBhY,SAASkY,EAAOxP,OAC7CgP,EAAe9I,EAAa,CAChC9Z,MAAOojB,EAAOpjB,MACd6iB,WAAW,iBAAD,OAAmBO,EAAOpjB,QAClC,GACE8iB,EAAehJ,EAAa,CAChCa,gBAAiByI,EAAOpjB,MACxB+iB,UAAU,YAAD,OAAcK,EAAOpjB,MAArB,uBAAyCojB,EAAOpjB,QACvD,GAEJ,OACE,yBACEqJ,IAAG,6BAAwB+Z,EAAOxP,OAClCpB,UAAS,gCAA2BsH,EAAa,WAAa,IAC9DnF,QAAS,kBAWnB,SAAuByO,GACrB,IAAMC,EAAqBC,cAAIJ,EAAiB,CAACE,EAAOxP,QACxDuP,EAAmBE,GACnB7P,EAAS6P,GAdcE,CAAcH,IAC7BnjB,MAAO2iB,GAENQ,EAAO/P,MACR,0BAAMb,UAAU,qCAAqCvS,MAAO6iB,WCgCzDnN,I,OA/DoB,WAAO,IAAD,EACTJ,GAAyBhM,EAAYsH,OAD5B,mBAChCrG,EADgC,KACvBwM,EADuB,KAGjCwM,EAAuCra,EAAchK,GAAYlB,KAAI,SAAAkN,GAAM,MAAK,CACpFkI,MAAOlI,EACPyI,MAAOzI,EACPnL,MAAM,oBAAD,OAAsB6a,oBAAU1P,GAAhC,SAGDsY,EAAeta,EAAcjK,GAAgBjB,KAAI,SAAAylB,GAAS,MAAK,CACnErQ,MAAOqQ,IAAcxkB,EAAe6F,IAAM,cAAgB2e,EAC1D9P,MAAO8P,MAGT,OACE,yBAAKlR,UAAU,iBACb,kBAAC,GAAD,CACEA,UAAU,wBACV2H,YAAY,8CACZvG,MAAOpJ,EAAQiB,QAAU,GACzB+H,SAsCN,SAAwB/H,GACtBuL,EAAW,CAAEvL,cArCX,kBAAC,GAAD,CACE+G,UAAU,8BACVyQ,cAAezY,EAAQwE,SAAWxE,EAAQwE,SAAWnB,EACrD0F,QAASiQ,EACThQ,SAoBN,SAA0BxE,GACxBgI,EAAW,CAAEhI,gBAnBX,kBAAC,GAAD,CACEwD,UAAU,6BACVkQ,SAAUlY,EAAQyE,UAAW,EAC7BoE,MAAM,YACNO,MAAM,MACN5T,MAAK,wBACLwT,SAgBN,SAAqBsG,GACnB9C,EAAW,CAAE/H,QAAS6K,OAfpB,kBAAC,GAAD,CACEtH,UAAU,+BACVa,MAAM,GACNC,aAAc9I,EAAQsE,gBAAkB5P,EAAe6F,IACvDwO,QAASkQ,EACTjQ,SAaN,SAAuB1E,GACrBkI,EAAW,CAAElI,yBC9CF6U,I,OAhB8B,SAAC,GAIvC,IAHLC,EAGI,EAHJA,aACAvQ,EAEI,EAFJA,MACAG,EACI,EADJA,SAEA,OACE,0BAAMhB,UAAU,eAAemC,QAASnB,GACrCH,EACD,0BAAMb,UAAU,sBACd,0BAAMA,UAAS,gCAA4C,QAAjBoR,EAAyB,WAAa,MAChF,0BAAMpR,UAAS,kCAA8C,SAAjBoR,EAA0B,WAAa,UCgC5E7M,I,OAAAA,aA1CmB,WAAO,IAAD,EACRxB,GAAyBhM,EAAYsH,OAD7B,mBAC/BrG,EAD+B,KACtBwM,EADsB,KAElC6M,EAAuC,KACvCC,EAAwC,KAU5C,OARItZ,EAAQ0E,SAAW,CAAC5F,EAAU+F,QAAS/F,EAAUiG,UAAUrE,SAASV,EAAQ0E,WAC9E2U,EAAgBrZ,EAAQ0E,UAAY5F,EAAU+F,QAAU,MAAQ,QAG9D7E,EAAQ0E,SAAW,CAAC5F,EAAUkG,SAAUlG,EAAUmG,WAAWvE,SAASV,EAAQ0E,WAChF4U,EAAiBtZ,EAAQ0E,UAAY5F,EAAUkG,SAAW,MAAQ,QAIlE,yBAAKgD,UAAU,YACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,mBACZ,kBAAC,GAAD,CACEa,MAAM,OACNuQ,aAAcC,EACdrQ,SAAU,kBAAMtE,EAAQ1E,EAAQ0E,UAAY5F,EAAU+F,QAAU/F,EAAUiG,SAAWjG,EAAU+F,aAGnG,wBAAKmD,UAAU,uBACb,kBAAC,GAAD,CACEa,MAAM,OACNuQ,aAAcE,EACdtQ,SAAU,kBAAMtE,EAAQ1E,EAAQ0E,UAAY5F,EAAUkG,SAAWlG,EAAUmG,UAAYnG,EAAUkG,eAIvG,yBAAKgD,UAAU,sBACb,wBAAIA,UAAU,mBAAd,uBAKN,SAAStD,EAAQA,GACf8H,EAAW,CAAE9H,iBCLFkO,I,OA7BwB,SAAC,GAAe,IAAD,EAAZhP,EAAY,EAAZA,MAClC2V,EAAW,UAAG3V,EAAM,UAAT,aAAG,EAAUxD,KADsB,EAETsR,GAAiC9N,EAAO,IAA3EmO,EAF4C,EAE5CA,cAAeG,EAF6B,EAE7BA,eAEvB,OACE,yBAAKlK,UAAU,eACZpE,EAAM8D,OAAS,EACd,oCACE,kBAAC,GAAD,MACA,yBAAKM,UAAU,0BACb,yBAAKA,UAAU,sBACb,kBAACkK,EAAD,KACGH,EAActe,KAAI,SAAA+M,GAAI,OACrB,kBAAC,GAAD,CAAM3B,IAAG,eAAU2B,EAAKa,MAAQb,KAAMA,SAI5C,kBAAC,GAAD,CAAcoC,SAAU2W,MAI5B,yBAAKvR,UAAU,uBAAf,iDCcOuE,I,OAAAA,aA/B0B,WAAO,IACtCrB,EAAiB7D,GAAkBmD,GAAUW,SAA7CD,aAGFtH,EAFSuD,KAiBCd,MAAMwM,IAAI,CACtB5R,OAAQiK,EAAatH,MAAM3C,OAC3BV,SAAU2K,EAAatH,MAAMrD,SAC7BH,KAAM8K,EAAatH,MAAMxD,KACzBkE,eAAgB4G,EAAatH,MAAMU,eACnCE,SAAU0G,EAAatH,MAAMY,SAC7BE,QAASwG,EAAatH,MAAMc,QAC5BD,QAASyG,EAAatH,MAAMa,UApBhC,OACE,oCACE,kBAAC,GAAD,MACA,yBAAKuD,UAAU,oBACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAMpE,MAAOA,WCXR4V,GAd6B,WAC1C,IAAM3L,EAAMJ,GAAO,CACjBC,MAAO,iBACP3L,YAAa,2DAGf,OACE,oCACE,kBAAC8L,EAAD,MACA,kBAAC,GAAD,Q,oBCEA4L,I,OAAwB,6BACxBC,GAA8B,gCAC9BC,GAAwB,2DACxBC,GAAwB,qCACxBC,GAAuB,WAMvBC,GAAiBnb,EAAczJ,GAsZtByV,GAxYyB,SAAC,GAElC,IADLpI,EACI,EADJA,MAGMwX,EAAQ,UAAMxX,EAAMlB,KAAZ,YAAoBkB,EAAMoD,MAAMC,eACxCO,EAASgB,KAEf,OACE,yBAAKa,UAAU,WACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,iBACbzF,EAAM+S,MACL,kBAAC,GAAD,CACElV,KAAMmC,EAAMuD,OAAS1Q,EAAU0I,QAAUkO,GAAamC,aAAenC,GAAakC,WAClFpM,KAAMS,EAAM+S,KACZhgB,MAAO,MAIb,yBAAK0S,UAAU,yBACb,wBAAIA,UAAU,wBACXgS,EAAgB,CACf3Y,KAAMkB,EAAMlB,KACZsM,QAASpL,EAAMT,KACfoX,UAAW3W,EAAMoD,MACjBqC,UAAW,gCAGf,wBAAIA,UAAU,4BACZ,4BAAQvS,MAAO,CAAED,MAAM,2BAAD,OAA6B6a,oBAAU9N,EAAMoG,SAA7C,OACnBpG,EAAMoG,SAFX,YAKE,0BAAMX,UAAU,wBACbzF,EAAMnC,KAAOmC,EAAMnC,KAAOmC,EAAMuD,MAElCvD,EAAM0D,QACL,gDAEE,0BACE+B,UAAU,yBACVvS,MAAO,CAAED,MAAM,2BAAD,OAA6B6a,oBAAU9N,EAAMoG,SAA7C,OAEbpG,EAAM0D,YAOnB,yBAAK+B,UAAU,wBACb,0BAAMA,UAAU,iCACd,0BAAMA,UAAU,8BACd,kBAAC,WAAD,CACE0F,MAAOnL,EAAMoD,MACbjQ,SAAS,SACT0hB,OAAO,EACPC,SAAU,EACVtG,OAAQ,EACRuG,KAAK,SAEL,kBAAC,GAAD,CACElX,KAAM4L,GAAaoC,aACnBtM,KAAMS,EAAMoD,MAAMC,cAClBrQ,OAAQ,OAId,0BAAMyS,UAAU,6BACd,kBAAC,WAAD,CACE0F,MAAOnL,EAAMuD,KACbpQ,SAAS,SACT0hB,OAAO,EACPC,SAAU,GACVtG,OAAQ,EACRuG,KAAK,SAEL,kBAAC,GAAD,CACElX,KAAM4L,GAAa5W,UACnB0M,KAAMS,EAAMuD,KAAKF,cAAcgG,QAAQ,MAAO,IAC9CrW,OAAQ,UAOpB,yBAAKyS,UAAU,oBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,wBAuGvB,WACE,IAAIwI,EAAa,KACbyJ,EAAqB,EAmJzB,OAjJAzJ,EAAaE,KAAenO,EAAMR,YAAa0X,IAAuB,SAAC3I,EAAOF,EAAGG,GAAY,IAAD,EAC1FkJ,IACA,IAAMhJ,EAAYH,EAAMlF,QAAQ,MAAO,IACjCtJ,EAAO,UAAG6D,EAAOI,OAAO2T,WAAWjJ,UAA5B,aAAG,EAAqC5P,KAErD,OAAIiB,EAEA,kBAAC,KAAD,CACE6K,GAAI1E,GAAUkC,MAAMiB,QAAQ,QAAStJ,EAAQ4O,YAC7CrS,IAAG,cAASkb,EAAT,kBAA2BzX,EAA3B,YAAsCsO,EAAtC,YAA2CG,GAC9C/I,UAAU,oCAETiJ,GAII6I,GAAepZ,SAASuQ,GAG/B,kBAAC,KAAD,CACE9D,GAAI,CAAErG,SAAU2B,GAAUlC,OAAQtF,OAAO,iBAAD,OAAmBgQ,IAC3DpS,IAAG,cAASkb,EAAT,kBAA2BzX,EAA3B,YAAsCsO,EAAtC,YAA2CG,GAC9C/I,UAAU,2CAETiJ,GAII9b,EAAU8b,GAGjB,kBAAC,KAAD,CACE9D,GAAI,CAAErG,SAAU2B,GAAUlC,OAAQtF,OAAO,gBAAD,OAAkBgQ,IAC1DpS,IAAG,cAASkb,EAAT,kBAA2BzX,EAA3B,YAAsCsO,EAAtC,YAA2CG,GAC9C/I,UAAU,yCAETiJ,GAKH,wBACEpS,IAAG,cAASkb,EAAT,kBAA2BzX,EAA3B,YAAsCsO,EAAtC,YAA2CG,GAC9C/I,UAAU,4CAETiJ,MAMTT,EAAaE,KAAeF,EAAYkJ,IAA6B,SAAC5I,EAAOF,EAAGG,GAC9EkJ,IACA,IAAME,EAAerJ,EAAMlL,cAE3B,OACE,0BACE/G,IAAG,oBAAekb,EAAf,eAA8BI,EAA9B,YAA8CvJ,EAA9C,YAAmDG,EAAnD,YAA6DkJ,GAChExkB,MAAO,CAAED,MAAM,2BAAD,OAA6B2kB,EAA7B,MACdnS,UAAU,yCAET8I,MAKPN,EAAaE,KAAeF,EAAYmJ,IAAuB,SAAC7I,EAAOF,EAAGG,GACxEkJ,IACA,IAAMG,EAAYtJ,EAAMlL,cAClB/G,EAAG,oBAAgBkb,EAAhB,iBAAiCK,EAAjC,YAA8CxJ,EAA9C,YAAmDG,EAAnD,YAA6DkJ,GAGhExjB,EAAiC8L,EAAM6X,IAAc,GAU3D,MAPkB,WAAdA,GAA4C,IAAlB3jB,EAAOiR,OACnCjR,EAAOqM,KAjSQ,GAkSY,IAAlBrM,EAAOiR,QAEhBjR,EAAOqM,KArSe,IAyStB,0BACEjE,IAAKA,EACLmJ,UAAU,qCAETvR,EAAOiR,OAAS,EAqFzB,SAAqBjR,GACnB,IAAMuL,EAAMkS,mBAASzd,EAAO,IAAMua,SAASva,EAAO,IAAMA,EAAO,GAC3DyL,EAAMzL,EAAOA,EAAOiR,OAAS,GAGjC,OAFAxF,EAAMgS,mBAAShS,GAAO8O,SAAS9O,GAAOA,EAElCF,IAAQE,EAER,wBAAI8F,UAAU,6CAA6C9F,GAI3D,wCAEE,wBAAI8F,UAAU,6CAA6ChG,GAF7D,IAIE,wBAAIgG,UAAU,6CAA6C9F,GAJ7D,KAhGuBkP,CAAY3a,GA6DzC,SAAsBA,EAAgCoI,GACpD,IAAMwb,EAAa5jB,EAAOhD,KAAqB,SAAC2V,EAAOiB,GACrD,IAAM4F,EAAMiE,mBAAS9K,GAAS4H,SAAS5H,GAASA,EAChD,OACE,wBAAIvK,IAAG,UAAKA,EAAL,YAAYuK,EAAZ,YAAqBiB,GAASrC,UAAU,oCAC5CiI,MAKP,OAA0B,IAAtBoK,EAAW3S,OACN2S,EAGL,wCAEGA,EAAWjY,QAAO,SAACsS,EAAMC,GAAP,MAAgB,CAACD,EAAM,MAAOC,MAFnD,KA3E6C2F,CAAa7jB,EAAQoI,OAKtE2R,EAAaE,KAAeF,EAAY,aAAU,SAACM,EAAOF,EAAGG,GAG3D,OAFAkJ,IAGE,4BACEpb,IAAG,oBAAekb,EAAf,gBAA+BnJ,EAA/B,YAAoCG,EAApC,YAA8CkJ,GACjDjS,UAAU,oCAEV,6BAJF,WASJwI,EAAaE,KAAeF,EAAYoJ,IAAuB,SAAC9I,EAAOF,EAAGG,GAGxE,OAFAkJ,IAGE,4BACEpb,IAAG,oBAAekb,EAAf,wBAAuCnJ,EAAvC,YAA4CG,EAA5C,YAAsDkJ,GACzDjS,UAAU,0CAET8I,MAKPN,EAAaE,KAAeF,EAAYqJ,IAAsB,SAAC/I,EAAOF,EAAGG,GAIvE,OAHAkJ,IAIE,wBACEpb,IAAG,oBAAekb,EAAf,wBAAuCnJ,EAAvC,YAA4CG,EAA5C,YAAsDkJ,GACzDjS,UAAU,0CAET8I,MAKPN,EAAaE,KAAeF,EAAY,YAAY,SAACM,EAAOF,EAAGG,GAG7D,OAFAkJ,IAGE,4BACEpb,IAAG,oBAAekb,EAAf,qBAAoCnJ,EAApC,YAAyCG,EAAzC,YAAmDkJ,GACtDjS,UAAU,uCAFZ,oCAlPKmJ,KAGL,yBAAKnJ,UAAU,wBACb,wBAAIA,UAAU,yBACXzF,EAAMgY,iBAAiB7S,OAAS,GAC/B,4BACE,0BAAMM,UAAU,+BAAhB,gBAGA,0BAAMA,UAAU,4CAwDrBtG,kBACLa,EAAMgY,iBAAiB9mB,KAAqB,SAAC6O,GAC3C,IAAMkY,EAAWrU,EAAOI,OAAO3E,KAAKU,EAAS,CAAEqD,MAAOpD,EAAMoD,QAC5D,OAAO6U,EACL,0BACExS,UAAU,uBACVnJ,IAAG,qBAAgBkb,EAAhB,YAA4BzX,IAE/B,kBAAC,WAAD,CACEoL,MAAO8M,EAAS1Y,KAChBpM,SAAS,SACT0hB,OAAO,EACPC,SAAU,GACVtG,OAAQ,EACRuG,KAAK,SAEJ0C,EAAgB,CACf3Y,KAAMmZ,EAASnZ,KACf6X,UAAWsB,EAAS7U,MACpBgI,QACE,kBAAC,GAAD,CACEvN,KAAMoa,EAAS1U,OAAS1Q,EAAU0I,QAAUkO,GAAamC,aAAenC,GAAakC,WACrFpM,KAAM0Y,EAASlF,MAAQ,UACvBhgB,MAAO,SAOf,SAEN8M,QAAO,SAACsS,EAAMC,GAAP,MAAgB,CAACD,EAAM,OAAQC,QAnFhC,4BACE,0BAAM3M,UAAU,+BAAhB,YAGA,0BAAMA,UAAU,uCACbzF,EAAMkY,UAGVlY,EAAMmY,UACL,4BACE,0BAAM1S,UAAU,+BAAhB,YAGA,0BAAMA,UAAU,wCACbzF,EAAMmY,WAIZnY,EAAMoY,SACL,4BACE,0BAAM3S,UAAU,+BAAhB,aAGA,0BAAMA,UAAU,oCACbzF,EAAMoY,cAWvB,SAASX,EAAT,GAAwF,IAA7D3Y,EAA4D,EAA5DA,KAAMsM,EAAsD,EAAtDA,QAASuL,EAA6C,EAA7CA,UAAWlR,EAAkC,EAAlCA,UAAWnJ,EAAuB,EAAvBA,IAC9D,OACE,kBAAC,KAAD,CACEsO,GAAI,CACFrG,SAAU2B,GAAUkC,MAAMiB,QAAQ,QAASvK,EAAK6P,YAChDjQ,OAAQiY,EAAS,+BAA2BA,GAAc,IAE5DlR,UAAWA,EACXnJ,IAAKA,GAEJ8O,KCpIMiN,I,OA3C0B,WAAO,IACtCvZ,EAASoW,eAATpW,KACFiK,EAAWvE,eACX8T,EAAcC,KAAGC,MAAMzP,EAASrK,QAChC+Z,EAAcha,kBAAQ6Z,QAA8EpU,EAA/D,CAAEd,MAAOkV,EAAYI,qBAG1D1Y,EADS4E,KACMZ,OAAO3E,KAAKoP,SAAS3P,GAAO2Z,GAC3CnN,EAAMJ,GAAO,CACjBC,MAAOnL,EAAQA,EAAMT,KAAO,kBAC5BC,YAAaQ,EAAK,yCAAqCA,EAAMT,MAAS,oBAGxE,OACE,oCACE,kBAAC+L,EAAD,MACA,yBAAK7F,UAAU,WACZzF,EACC,oCACE,yBAAKyF,UAAU,mBACb,kBAAC,KAAD,CAAMmF,GAAI1E,GAAUlC,QAClB,kBAAC,GAAD,CACEyB,UAAU,uBACV1S,MAAO,EACPC,OAAQ,GACRuM,KAAMgG,GAAS4P,kBALnB,oBASF,yBAAK1P,UAAU,sBACb,kBAAC,GAAD,CAAOzF,MAAOA,MAIlB,yBAAKyF,UAAU,qBAAf,uBCxCKkT,GAN6B,WAC1C,OACE,kBAAC,GAAD,OCmHW1M,I,OAxGuB,WAAO,IAAD,IAClCtC,EAAiBD,KAAjBC,aACF/F,EAASgB,KAF2B,EAGZ4D,GAA0BhM,EAAYwH,QAH1B,mBAGnCvG,EAHmC,KAG1BwM,EAH0B,OAKwBrG,EAA1DI,OAAUlB,EALwB,EAKxBA,eAAgBU,EALQ,EAKRA,aAAcC,EALN,EAKMA,YAC1CmV,EAAS,UAAInb,EAAQsE,sBAAZ,QAA8ByB,EACvCqV,EAAQ,UAAIpb,EAAQ8F,YAAZ,QAAoBE,EAPQ,EASAiD,mBAAyBkS,GATzB,mBASnCE,EATmC,KASpBC,EAToB,OAUFrS,mBAAoBmS,GAVlB,mBAUnCG,EAVmC,KAUrBC,EAVqB,OAWMvS,oBAAS,GAXf,mBAWnCwD,EAXmC,KAWjBC,EAXiB,KAa1C,OAAIR,EAEA,kBAAC,KAAD,CACEU,KAAMH,EACNsC,cAAe,kBAAMrC,GAAqBD,IAC1CI,QAAS,kBAAMH,GAAoB,IACnC1E,UAAS,2CAAsCqT,EAAczV,eAC7DtQ,MAAM,OACNyX,UAAW,QAEV6K,KAIEA,IAGT,SAAS6D,EAAiBnX,EAAgCoX,GACxD,OACE,wBAAI1T,UAAU,8BACX0T,EAAWjoB,KAAI,SAAAkoB,GAAS,OACvB,wBACE9c,IAAG,qBAAgB8c,GACnB3T,UAAS,oCAA+BuT,IAAiBI,EAAY,WAAa,KAElF,0BACE3T,UAAU,gCACVmC,QAAS,kBAyDrB,SAA2B7F,EAAgCqX,GACzDH,EAAgBG,GAChBnP,EAAW,CAAElI,iBAAgBwB,KAAM6V,IACnCjP,GAAoB,GA5DKkP,CAAkBtX,EAAgBqX,KAEhDA,QAQb,SAAS/D,IACP,OACE,wBAAI5P,UAAU,kBACXvU,cAAI4R,GAAiB,SAACqW,EAAYpX,GACjC,IAAMgL,EAAa+L,IAAkB/W,EAErC,OAAKoX,EAGH,wBACE7c,IAAG,sBAAiByF,GACpB0D,UAAS,gCAA2BsH,EAAa,WAAa,KAE9D,0BACEtH,UAAU,4BACVmC,QAAS,kBAwBvB,SAAuB7F,GACrB,IAAMuX,EAAmB1V,EAAOI,OAAOL,oBAAoB5B,GAE3DgX,EAAiBhX,GACjBkX,EAAgBK,GAChBrP,EAAW,CAAElI,iBAAgBwB,KAAM+V,IA7BRC,CAAcxX,KAE7B,kBAAC,GAAD,CACE0D,UAAU,kCACV1S,MAAOga,EAAa,GAAK,EACzB/Z,OAAQ+Z,EAAa,EAAI,GACzBxN,KAAMwN,EAAaxH,GAASsC,cAAgBtC,GAAS2H,iBAEtDnL,EACD,kBAAC,GAAD,CACE0D,UAAU,iCACV5H,KAAM4L,GAAaqC,YACnBvM,KAAMwC,EAAesB,cACrBtQ,MAAO,MAGVmmB,EAAiBnX,EAAgBoX,IAzBZ,YCTrBvQ,I,OApDoB,WAAO,IAAD,EACTJ,GAA0BhM,EAAYwH,QAD7B,mBAChCvG,EADgC,KACvBwM,EADuB,KAEjCuP,EAAapd,EAAcxJ,GAE3B6mB,EAAoCD,EAAWtoB,KAAI,SAAA2M,GAAI,MAAK,CAChEyI,MAAOzI,EACPgJ,MAAOhJ,EACP5K,MAAM,kCAGFymB,EAAoB,CAAC,OAAL,oBAAgBtd,EAAczJ,KAAczB,KAAI,SAAAwS,GAAM,MAAK,CAC/E4C,MAAkB,QAAX5C,EAAmB,aAAeA,EACzCmD,MAAOnD,MAGT,OACE,yBAAK+B,UAAU,kBACb,kBAAC,GAAD,CACEA,UAAU,yBACV2H,YAAY,8CACZvG,MAAOpJ,EAAQiB,QAAU,GACzB+H,SA0BN,SAAwB/H,GACtBuL,EAAW,CAAEvL,cAzBX,kBAAC,GAAD,CACE+G,UAAU,6BACVyQ,cAAezY,EAAQlI,MAAQkI,EAAQlI,MAAQikB,EAC/ChT,QAASiT,EACThT,SAYN,SAAuBlR,GACrB0U,EAAW,CAAE1U,aAXX,kBAAC,GAAD,CACEkQ,UAAU,iCACVa,MAAM,GACNC,aAAc9I,EAAQiG,QAAU,MAChC8C,QAASkT,EACTjT,SASN,SAAwB/C,GACtBuG,EAAW,CAAEvG,iBClCFiW,I,OAjBmB,WAEhC,OACE,yBAAKlU,UAAU,YACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mBAAd,SAGA,wBAAKA,UAAU,4BAAf,YC2BO4K,I,OA3BwB,SAAC,GAAgB,IAAdnR,EAAa,EAAbA,OAAa,EACViQ,GAAkCjQ,EAAQ,IAA7EsQ,EAD6C,EAC7CA,cAAeG,EAD8B,EAC9BA,eAEvB,OACE,yBAAKlK,UAAU,gBACZvG,EAAOiG,OAAS,EACf,oCACE,kBAAC,GAAD,MACA,yBAAKM,UAAU,2BACb,yBAAKA,UAAU,wBACb,kBAACkK,EAAD,KACGH,EAActe,KAAI,SAAA8O,GAAK,OACtB,kBAAC,GAAD,CAAO1D,IAAG,gBAAW0D,EAAMlB,KAAjB,YAAyBkB,EAAMoD,OAASpD,MAAOA,WAOnE,yBAAKyF,UAAU,yBAAf,kDCeOuE,I,OAAAA,aA7B2B,WAAO,IACvCrB,EAAiB7D,GAAkBmD,GAAUW,SAA7CD,aAGFzJ,EAFS0F,KAiBCZ,OAAOsM,IAAI,CACvB5R,OAAQiK,EAAazJ,OAAOR,OAC5B6E,KAAMoF,EAAazJ,OAAOqE,KAC1BhO,MAAOoT,EAAazJ,OAAO3J,MAC3BwM,eAAgB4G,EAAazJ,OAAO6C,eACpC2B,OAAQiF,EAAazJ,OAAOwE,SAlBhC,OACE,oCACE,kBAAC,GAAD,MACA,yBAAK+B,UAAU,qBACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CAAMvG,OAAQA,WCXTqR,GAdyB,WACtC,IAAMjF,EAAMJ,GAAO,CACjBC,MAAO,kBACP3L,YAAa,+CAGf,OACE,oCACE,kBAAC8L,EAAD,MACA,kBAAC,GAAD,QC+DStB,gBAlDkB,WAC/B,IAAMtN,EAASkI,KACP+D,EAAiB7D,GAAkBmD,GAAUW,SAA7CD,aACFE,EAAU+Q,iBAAOC,gBAHc,EAIGnT,mBAAShK,EAAOwB,QAJnB,mBAI9B4b,EAJ8B,KAIhBC,EAJgB,KAoBrC,OAdAtV,qBAAU,WAER0E,aAAQ,WACN4Q,GAAgB,IACXrd,EAAOwB,QAAUyK,EAAaqR,aAEjCtd,EAAOyH,WAAW1S,MAAK,kBAAMsoB,GAAgB,MAG7Crd,EAAOud,YAAYtR,EAAaqR,cAAcvoB,MAAK,kBAAMyiB,YAAW,kBAAM6F,GAAgB,KAAO,aAGpG,IAGD,kBAAC,KAAD,CAAQlR,QAASA,EAAQvB,SACvB,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO0B,KAAK,KACR8Q,EAGA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOI,OAAK,EAAClR,KAAM9C,GAAUpC,MAAOqW,UAAWlD,KAC/C,kBAAC,KAAD,CAAOiD,OAAK,EAAClR,KAAM9C,GAAUiC,KAAMgS,UAAW/E,KAC9C,kBAAC,KAAD,CAAO8E,OAAK,EAAClR,KAAM9C,GAAUnC,SAAUoW,UAAW5J,KAClD,kBAAC,KAAD,CAAO2J,OAAK,EAAClR,KAAM9C,GAAUlC,OAAQmW,UAAWC,KAChD,kBAAC,KAAD,CAAOF,OAAK,EAAClR,KAAM9C,GAAUkC,MAAO+R,UAAWxB,KAC/C,kBAAC,KAAD,CAAOuB,OAAK,EAAClR,KAAM9C,GAAUmC,WAAY8R,UAAW5O,KAEpD,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAUX,GAAI1E,GAAUpC,UAX5B,kBAAC,EAAD,CAAQ/Q,MAAO,IAAKC,OAAQ,IAAKC,MAAM,uC,wDCnCxConB,IAAb,cAcE,aAAe,sKACb,IAAMxQ,EAAQ0O,KAAGC,MAAMzP,SAASrK,QAE1B4b,EAAcxP,GAAQA,GAAQ3F,OAAS,GAIvCoV,EAAe1Q,EAAMgB,OACvBC,GAAQ3M,SAAS0L,EAAMgB,OACrBhB,EAAMgB,MAERyP,EAEJvd,KAAKyd,QAAU,CACb3P,MAAO0P,GAGTxd,KAAKsE,MAAQ,CACX3C,OAAQmL,EAAM4Q,YACdzc,SAAU6L,EAAM6Q,cAChB7c,KAAMgM,EAAM8Q,UACZ5Y,eAAgB8H,EAAM+Q,oBACtB3Y,SAAU4H,EAAMgR,cAChB1Y,QAAS0H,EAAMiR,aACf5Y,QAAS2H,EAAMkR,aAAsC,SAAvBlR,EAAMkR,kBAA0B7W,GAGhEnH,KAAKW,SAAW,CACdgB,OAAQmL,EAAMmR,eACdnd,KAAMgM,EAAMoR,aACZjd,SAAU6L,EAAMqR,kBAGlBne,KAAKmC,OAAS,CACZR,OAAQmL,EAAMsR,aACdpZ,eAAgB8H,EAAMuR,qBACtB7X,KAAMsG,EAAMwR,WACZ9lB,MAAOsU,EAAMyR,YACb5X,OAAQmG,EAAM0R,cApDpB,8DAyD2B9d,GACvBV,KAAKyd,QAAUgB,gBAAMze,KAAKyd,QAAS/c,KA1DvC,sCA8DyBA,GACrBV,KAAKsE,MAAQma,gBAAMze,KAAKsE,MAAO5D,GAG3BA,EAAQwE,WACVlF,KAAKsE,MAAMY,SAAWxE,EAAQwE,UAI5BwZ,cAAIhe,EAAS,WAAagB,kBAAQhB,EAAQiB,UAC5C3B,KAAKsE,MAAM3C,YAASwF,KAxE1B,yCA6E4BzG,GACxBV,KAAKW,SAAW8d,gBAAMze,KAAKW,SAAUD,GAGjCge,cAAIhe,EAAS,WAAagB,kBAAQhB,EAAQiB,UAC5C3B,KAAKW,SAASgB,YAASwF,KAlF7B,uCAuF0BzG,GACtBV,KAAKmC,OAASsc,gBAAMze,KAAKmC,OAAQzB,GAG7Bge,cAAIhe,EAAS,WAAagB,kBAAQhB,EAAQiB,UAC5C3B,KAAKmC,OAAOR,YAASwF,KA5F3B,oCA+GuBwX,GACnB,IAAM7R,EAAQ8R,KACZC,aAAQC,eAAK9e,KAAKU,QAASie,GAAe,IAS5C,OALIA,EAAavd,SAAS3B,EAAY+L,WACpCsB,EAAMgB,MAAQhB,EAAMiS,oBACbjS,EAAMiS,cAGRvD,KAAGwD,UAAUlS,KA1HxB,8BAkGI,MAAO,CACL2Q,QAASzd,KAAKyd,QACdnZ,MAAOtE,KAAKsE,MACZ3D,SAAUX,KAAKW,SACfwB,OAAQnC,KAAKmC,UAtGnB,mCA4GI,OAAOnC,KAAKyd,QAAQ3P,UA5GxB,6CACGmR,KADH,oGAIGA,KAJH,uGAOGA,KAPH,qGAUGA,KAVH,6GAwDGC,KAxDH,6HA6DGA,KA7DH,8HA4EGA,KA5EH,+HAsFGA,KAtFH,oHAgGGC,KAhGH,gHA0GGA,KA1GH,+E,SC8BeC,K,8EAAf,sBAAAxb,EAAA,8FAGKsH,GAAUW,QAAU,IAAIyR,KAH7B,4C,sBAQe+B,OA5CgB,WAAO,IAAD,EACJ1V,mBAAwB,MADpB,mBAC5B3B,EAD4B,KACpBsX,EADoB,OAEP3V,mBAAwB,MAFjB,mBAE5BhK,EAF4B,KAEpB4f,EAFoB,KAMnC,OAFAC,aAAS,kBAJ0B,0CAIpBC,KAAqB,IAE/BzX,GAAWrI,EAKd,kBAAC,IAAD,KACE,kBAAC,IAAaqI,EACZ,kBAAC,EAAc0X,SAAf,CAAwB5V,MAAOnK,GAC7B,kBAAC,GAAD,SAPC,kBAAC,EAAD,CAAQ3J,MAAO,IAAKC,OAAQ,IAAKC,MAAM,UAPb,4CA4BnC,4BAAA0N,EAAA,sEAC6Bwb,KAD7B,OACQO,EADR,OAEEL,EAAaK,GACbJ,EAAU,IAAI1Y,EAAO8Y,EAAazU,GAAUW,SAASoR,eAHvD,4CA5BmC,wBCCtB2C,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBprB,MAAK,YAAkD,IAA/CqrB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,mCCQdO,YAAU,CAAEC,eAAgB,aAE5BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF/V,SAASgW,eAAe,SAM1Bb,Q","file":"static/js/main.b553b687.chunk.js","sourcesContent":["var map = {\n\t\"./1.10.2/extracts\": [\n\t\t157,\n\t\t3\n\t],\n\t\"./1.10.4/extracts\": [\n\t\t158,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 73;\nmodule.exports = webpackAsyncContext;","export enum CharacterClass {\n  All = 'All',\n  Templar = 'Templar',\n  Berserker = 'Berserker',\n  Warden = 'Warden',\n  Warlock = 'Warlock',\n}\n","import { CharacterClass } from 'types/Character.types';\n\nexport interface Item {\n  uuid: number,\n  name: string,\n  icon: string | null,\n  flavor?: string,\n  description?: string,\n  category: ItemCategory,\n  type: ItemType,\n  rarity: ItemRarity,\n  classRestriction: CharacterClass | null;\n  minLevel: number;\n  set: SetUuid | null;\n  baseEnchants: number[];\n  fixedEnchants: number[];\n}\n\nexport interface ItemSet {\n  uuid: SetUuid;\n  name: string;\n  itemIds: number[];\n  bonuses: Record<number, string>;\n}\n\nexport enum ItemRarity {\n  Ordinary = 'Ordinary',\n  Enchanted = 'Enchanted',\n  Rare = 'Rare',\n  Unique = 'Unique',\n  Legendary = 'Legendary',\n  TrueLegendary = 'True Legendary',\n  Mythical = 'Mythical'\n}\n\nexport enum ItemCategory {\n  Helmet = 'Helmet',\n  Armor = 'Armor',\n  Boots = 'Boots',\n  Weapon = 'Weapon',\n  Offhand = 'Offhand',\n  Ring = 'Ring',\n  Amulet = 'Amulet',\n  Accessory = 'Accessory',\n  Consumables = 'Consumables',\n  Gem = 'Gem',\n  Misc = 'Misc',\n  Craft = 'Craft'\n}\n\nexport enum ItemType {\n  Helm = 'Helm',\n  Armor = 'Armor',\n  Bow = 'Bow',\n  Sword = 'Sword',\n  Staff = 'Staff',\n  Fists = 'Fists',\n  Boots = 'Boots',\n  Accessory = 'Accessory',\n  Ring = 'Ring',\n  Amulet = 'Amulet',\n  Claw = 'Claw',\n  Arrow = 'Arrow',\n  Spellbook = 'Spellbook',\n  Shield = 'Shield',\n  Key = 'Key',\n  Tome = 'Tome',\n  Elixir = 'Elixir',\n  QuestItem = 'Quest Item',\n  SpecialItem = 'Special Item',\n  Scroll = 'Scroll',\n  Potion = 'Potion',\n  Container = 'Container',\n  CraftingMaterial = 'Crafting Material',\n  UnknownItem = 'Unknown Item',\n  Bag = 'Bag',\n  CubeGem = 'Cube Gem',\n  SphereGem = 'Sphere Gem',\n  StarGem = 'Star Gem',\n  Relic = 'Relic',\n  Rune = 'Item'\n}\n\nexport enum SetUuid {\n  SunAndMoon = 'sunandmoon',\n  Seeker = 'seeker',\n  Bond = 'bond',\n  AllForOne = 'element1',\n  OneForAll = 'element2',\n  Scout = 'scout',\n  Summoner = 'summoner',\n  Thief = 'thiefs',\n  Harverst = 'harvest',\n  WrathfulRevenge = 'thorns',\n  FuriousRetaliation = 'thorns2',\n  Challenger = 'challenger',\n  Valkyrie = 'valkyrie',\n  Reckoning = 'reckoning',\n  ThunderingArmy = 'thunderingarmy',\n  ThunderCharged = 'thundercharge',\n  Caines = 'caines',\n  Wargod = 'wargod',\n  Soulpurger = 'soulpurger',\n  Ayeela = 'ayeela',\n  Bloodsoak = 'bloodsoak',\n  Cataclysm = 'cataclysm',\n  Skysoul = 'soulsky',\n  SpiritualGarb = 'spiritgarb',\n  Volcanic = 'volcano',\n  Dragonfire = 'dragonfire',\n  NothernRage = 'northernrage',\n  FrostWyrm = 'frostwyrm',\n  BloodBinder = 'bloodbinder',\n  PlagueMage = 'plaguemage',\n  Coldhearted = 'coldhearted',\n  Deathbringer = 'deathbringers',\n  DemonLord = 'demonlord',\n  BurningHells = 'burninghell',\n  Desecrator = 'desecrators',\n  Masochist = 'masochists',\n  HighRanger = 'highranger',\n  Windcaller = 'windcaller',\n  ShroomTender = 'shroomtender',\n  Everspring = 'everspring',\n  Stormcaller = 'stormcaller',\n  WispMother = 'wispmother',\n  Torrential = 'torrent',\n  Snowstorm = 'snowstorm',\n  Christmas = 'xmas',\n  Master = 'masters',\n}\n","import { ItemRarity, ItemCategory, ItemType } from './Item.types';\n\nexport interface Enchant {\n  uuid: number;\n  name: string;\n  category: EnchantCategory;\n  type: EnchantType;\n  affixes?: string[];\n  description: string;\n  ranges: EnchantRanges;\n  items: number[];\n  itemTypes: ItemType[];\n  skills?: number[];\n}\n\nexport interface EnchantRanges {\n  [ItemRarity.Ordinary]: EnchantRangeBoundary;\n  [ItemRarity.Enchanted]: EnchantRangeBoundary;\n  [ItemRarity.Rare]: EnchantRangeBoundary;\n  [ItemRarity.Unique]: EnchantRangeBoundary;\n  [ItemRarity.Legendary]: EnchantRangeBoundary;\n  [ItemRarity.TrueLegendary]: EnchantRangeBoundary;\n  [ItemRarity.Mythical]: EnchantRangeBoundary;\n}\n\nexport interface EnchantRangeBoundary {\n  minimum: number;\n  maximum: number;\n  cap: number;\n  greaterCap: number;\n}\n\nexport enum EnchantType {\n  Minor = 'Minor',\n  Major = 'Major',\n  Epic = 'Epic',\n  Legendary = 'Legendary'\n}\n\nexport enum EnchantCategory {\n  Power = 'Power',\n  Enchant = 'Enchant',\n  Gem = 'Gem',\n  Rune = 'Rune'\n}\n\nexport interface SimpleEnchant {\n  uuid: number;\n  name: string;\n  description: string;\n  min: number;\n  max: number;\n  skills?: Record<number, string>;\n}\n\nexport interface ItemEnchantSlot{\n  count: number;\n  types: EnchantType[]; // If multiple element it's an OR\n  categoriesRestriction?: ItemCategory[];\n}\n\nexport interface ItemEnchantSlots {\n  baseEnchants: SimpleEnchant[];\n  fixedEnchants: SimpleEnchant[];\n  enchantSlots?: ItemEnchantSlot[];\n}\n\nexport type CraftableEnchantTypes = EnchantType.Epic | EnchantType.Major | EnchantType.Minor;\nexport type EnchantPoolType = Record<CraftableEnchantTypes, number[]>;\nexport type EnchantsPool = Record<ItemType, EnchantPoolType>\n","import { CharacterClass } from './Character.types';\n\nexport interface Skill {\n  uuid: number;\n  name: string;\n  icon: string | null,\n  tree: SkillTree;\n  type?:  SkillType;\n  family?: SkillFamily;\n  class: CharacterClass;\n  minLevel: number;\n  maxRank: number;\n  cooldown?: number;\n  skillRequirement: number[];\n  effect: string[];\n  duration: number[];\n  x: number;\n  y: number;\n  damage: string[];\n  range: number[];\n  range2: number[];\n  element: DamageElement;\n  value: number[];\n  proc: number[];\n  description: string;\n  description_next?: string;\n  cost?: number;\n  cost100?: number;\n}\n\nexport enum DamageElement {\n  Ethereal = 'Ethereal',\n  Fire = 'Fire',\n  Frost = 'Frost',\n  Holy = 'Holy',\n  Lightning = 'Lightning',\n  Physical = 'Physical',\n  Poison = 'Poison',\n  Shadow = 'Shadow',\n}\n\nexport enum SkillFamily {\n  Archery = 'Archery',\n  Bane = 'Bane',\n  Brawl = 'Brawl',\n  Curse = 'Curse',\n  Dragon = 'Dragon',\n  Magic = 'Magic',\n  Nature = 'Nature',\n  Shield = 'Shield',\n  Shout = 'Shout',\n  Sorcery = 'Sorcery',\n  Storm = 'Storm',\n  Sword = 'Sword',\n  Utility = 'Utility'\n  // None = 'None',\n}\n\nexport enum SkillType {\n  Active = 'Active Skill',\n  Passive = 'Passive Skill',\n  Aura = 'Aura Skill',\n  Companion = 'Companion Skill',\n  Heritage = 'Heritage Skill',\n  Ritual = 'Ritual Skill',\n  Ultimate = 'Ultimate Skill'\n}\n\nexport enum SkillTree {\n  Mastery = 'Mastery',\n  Conviction = 'Conviction',\n  Corruptor = 'Corruptor',\n  Demonologist = 'Demonologist',\n  Dragonkin = 'Dragonkin',\n  Druid = 'Druid',\n  Frostborn = 'Frostborn',\n  Guardian = 'Guardian',\n  Lich = 'Lich',\n  Reaper = 'Reaper',\n  Redemption = 'Redemption',\n  SkyLord = 'Sky Lord',\n  StormCaller = 'Storm Caller',\n  Vengeance = 'Vengeance',\n  WindRanger = 'Wind Ranger',\n  WinterHerald = 'Winter Herald',\n  Wrath = 'Wrath'\n}\n","import React, { FunctionComponent } from 'react';\n\ninterface Props {\n  width: number;\n  height: number;\n  color: string;\n}\n\nconst Loader: FunctionComponent<Props> = ({\n  width,\n  height,\n  color,\n}) => {\n  return (\n    <div style={{ position: 'absolute', top: `calc(45% - ${height / 2}px)`, left: `calc(50% - ${width / 2}px)` }}>\n      <svg width={`${width}`} height={`${height}`} viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\" stroke={color}>\n        <g fill=\"none\" fillRule=\"evenodd\" strokeWidth=\"2\">\n          <circle cx=\"22\" cy=\"22\" r=\"1\">\n            <animate attributeName=\"r\"\n              begin=\"0s\" dur=\"1.8s\"\n              values=\"1; 20\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.165, 0.84, 0.44, 1\"\n              repeatCount=\"indefinite\" />\n            <animate attributeName=\"stroke-opacity\"\n              begin=\"0s\" dur=\"1.8s\"\n              values=\"1; 0\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.3, 0.61, 0.355, 1\"\n              repeatCount=\"indefinite\" />\n          </circle>\n          <circle cx=\"22\" cy=\"22\" r=\"1\">\n            <animate attributeName=\"r\"\n              begin=\"-0.9s\" dur=\"1.8s\"\n              values=\"1; 20\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.165, 0.84, 0.44, 1\"\n              repeatCount=\"indefinite\" />\n            <animate attributeName=\"stroke-opacity\"\n              begin=\"-0.9s\" dur=\"1.8s\"\n              values=\"1; 0\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.3, 0.61, 0.355, 1\"\n              repeatCount=\"indefinite\" />\n          </circle>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default Loader;","import { createContext } from 'react';\n\nimport Engine from 'engine/Engine';\n\n/* Ugly but the engine context will be set for sure in the App and it is not supposed to be null\n * We could create a new Engine() to discard it right afterwards but that'd be worse in term of memory\n */\nconst EngineContext = createContext<Engine>(null as unknown as Engine);\n\nexport default EngineContext;\n","import { CharacterClass } from '../../types/Character.types';\nimport { EnchantType, ItemEnchantSlot } from '../../types/Enchant.types';\nimport { ItemCategory, SetUuid, ItemType, ItemRarity } from '../../types/Item.types';\nimport { SkillTree } from '../../types/Skill.types';\n\nexport const EpicEnchantableCategories: ItemCategory[] = [ItemCategory.Ring, ItemCategory.Amulet];\nexport const EnchantableCategories: ItemCategory[] = [\n  ItemCategory.Ring,\n  ItemCategory.Amulet,\n  ItemCategory.Accessory,\n  ItemCategory.Armor,\n  ItemCategory.Boots,\n  ItemCategory.Helmet,\n  ItemCategory.Offhand,\n  ItemCategory.Weapon,\n];\n\nexport const ENCHANT_SLOTS_BY_RARITY: Record<ItemRarity, ItemEnchantSlot[]> = {\n  [ItemRarity.Ordinary]: [],\n  [ItemRarity.Enchanted]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor, EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n  ],\n  [ItemRarity.Rare]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Unique]: [\n    {\n      count: 1,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Legendary]: [\n    {\n      count: 2,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.TrueLegendary]: [\n    {\n      count: 2,\n      types: [EnchantType.Minor],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 2,\n      types: [EnchantType.Major],\n      categoriesRestriction: EnchantableCategories,\n    },\n    {\n      count: 1,\n      types: [EnchantType.Epic],\n      categoriesRestriction: EpicEnchantableCategories,\n    },\n  ],\n  [ItemRarity.Mythical]: [],\n};\n\nexport const ITEM_TYPES_BY_CATEGORIES: Record<ItemCategory, ItemType[]> = {\n  [ItemCategory.Helmet]: [ItemType.Helm],\n  [ItemCategory.Armor]: [ItemType.Armor],\n  [ItemCategory.Boots]: [ItemType.Boots],\n  [ItemCategory.Weapon]: [\n    ItemType.Bow,\n    ItemType.Sword,\n    ItemType.Staff,\n    ItemType.Fists,\n  ],\n  [ItemCategory.Offhand]: [\n    ItemType.Spellbook,\n    ItemType.Shield,\n    ItemType.Tome,\n    ItemType.Claw,\n    ItemType.Arrow,\n  ],\n  [ItemCategory.Ring]: [ItemType.Ring],\n  [ItemCategory.Amulet]: [ItemType.Amulet],\n  [ItemCategory.Accessory]: [ItemType.Accessory],\n  [ItemCategory.Gem]: [\n    ItemType.CubeGem,\n    ItemType.StarGem,\n    ItemType.SphereGem,\n  ],\n  [ItemCategory.Consumables]: [\n    ItemType.Elixir,\n    ItemType.Potion,\n    ItemType.Scroll,\n    ItemType.Relic,\n  ],\n  [ItemCategory.Misc]: [\n    ItemType.Key,\n    ItemType.QuestItem,\n    ItemType.SpecialItem,\n    ItemType.Container,\n    ItemType.UnknownItem,\n    ItemType.Bag,\n  ],\n  [ItemCategory.Craft]: [\n    ItemType.CraftingMaterial,\n    ItemType.Rune,\n  ],\n};\n\nexport const SETS_BY_CLASS: Record<CharacterClass, SetUuid[]> = {\n  [CharacterClass.All]: [\n    SetUuid.Scout,\n    SetUuid.WrathfulRevenge,\n    SetUuid.Seeker,\n    SetUuid.Challenger,\n    SetUuid.Thief,\n    SetUuid.Bond,\n    SetUuid.Harverst,\n    SetUuid.Summoner,\n    SetUuid.SunAndMoon,\n    SetUuid.FuriousRetaliation,\n    SetUuid.AllForOne,\n    SetUuid.OneForAll,\n  ],\n  [CharacterClass.Templar]: [\n    SetUuid.Reckoning,\n    SetUuid.Valkyrie,\n    SetUuid.ThunderCharged,\n    SetUuid.ThunderingArmy,\n    SetUuid.Caines,\n    SetUuid.Wargod,\n    SetUuid.Ayeela,\n    SetUuid.Soulpurger,\n  ],\n  [CharacterClass.Berserker]: [\n    SetUuid.Bloodsoak,\n    SetUuid.Cataclysm,\n    SetUuid.SpiritualGarb,\n    SetUuid.Skysoul,\n    SetUuid.Dragonfire,\n    SetUuid.Volcanic,\n    SetUuid.NothernRage,\n    SetUuid.FrostWyrm,\n  ],\n  [CharacterClass.Warden]: [\n    SetUuid.HighRanger,\n    SetUuid.Windcaller,\n    SetUuid.Everspring,\n    SetUuid.ShroomTender,\n    SetUuid.Stormcaller,\n    SetUuid.WispMother,\n    SetUuid.Torrential,\n    SetUuid.Snowstorm,\n  ],\n  [CharacterClass.Warlock]: [\n    SetUuid.BloodBinder,\n    SetUuid.PlagueMage,\n    SetUuid.Coldhearted,\n    SetUuid.Deathbringer,\n    SetUuid.DemonLord,\n    SetUuid.BurningHells,\n    SetUuid.Desecrator,\n    SetUuid.Masochist,\n  ],\n};\n\nexport const ITEM_ID_BY_SETS: Record<SetUuid, number[]> = {\n  [SetUuid.SunAndMoon]: [504, 505],\n  [SetUuid.Seeker]: [331, 332, 333],\n  [SetUuid.Bond]: [496, 497],\n  [SetUuid.AllForOne]: [502, 503],\n  [SetUuid.OneForAll]: [500, 501],\n  [SetUuid.Scout]:  [151, 327, 328],\n  [SetUuid.Summoner]: [510, 511, 512, 513],\n  [SetUuid.Thief]: [494, 495],\n  [SetUuid.Harverst]:  [498, 499],\n  [SetUuid.WrathfulRevenge]: [329, 330, 149],\n  [SetUuid.FuriousRetaliation]: [506, 507, 508, 509],\n  [SetUuid.Challenger]: [334, 335, 336],\n  [SetUuid.Valkyrie]: [547, 548, 549, 550],\n  [SetUuid.Reckoning]: [376, 377, 378, 379],\n  [SetUuid.ThunderingArmy]: [539, 540, 541, 542],\n  [SetUuid.ThunderCharged]: [123, 134, 318, 326],\n  [SetUuid.Caines]: [372, 373, 374, 375],\n  [SetUuid.Wargod]: [543, 544, 545, 546],\n  [SetUuid.Soulpurger]: [535, 536, 537, 538],\n  [SetUuid.Ayeela]: [124, 323, 324, 325],\n  [SetUuid.Bloodsoak]: [91, 100, 337, 556],\n  [SetUuid.Cataclysm]: [552, 553, 554, 555],\n  [SetUuid.Skysoul]: [557, 558, 559, 560],\n  [SetUuid.SpiritualGarb]: [380, 381, 382, 383],\n  [SetUuid.Volcanic]: [562, 563, 564, 565],\n  [SetUuid.Dragonfire]: [102, 339, 340, 561],\n  [SetUuid.NothernRage]: [384, 385, 386, 566],\n  [SetUuid.FrostWyrm]: [567, 568, 569, 570],\n  [SetUuid.BloodBinder]: [368, 369, 370, 594],\n  [SetUuid.PlagueMage]: [598, 599, 600, 601],\n  [SetUuid.Coldhearted]: [113, 321, 322, 596],\n  [SetUuid.Deathbringer]: [606, 607, 608, 609],\n  [SetUuid.DemonLord]: [112, 118, 319, 595],\n  [SetUuid.BurningHells]: [602, 603, 604, 605],\n  [SetUuid.Desecrator]: [364, 365, 366, 597],\n  [SetUuid.Masochist]: [610, 611, 612, 613],\n  [SetUuid.HighRanger]: [142, 341, 342, 343],\n  [SetUuid.Windcaller]: [576, 577, 578, 579],\n  [SetUuid.ShroomTender]: [585, 586, 587, 588],\n  [SetUuid.Everspring]: [388, 389, 390, 391],\n  [SetUuid.Stormcaller]: [74, 139, 140, 580],\n  [SetUuid.WispMother]: [581, 582, 583, 584],\n  [SetUuid.Torrential]: [590, 591, 592, 593],\n  [SetUuid.Snowstorm]: [392, 393, 394, 589],\n  [SetUuid.Christmas]: [716, 717, 718, 719, 720],\n  [SetUuid.Master]: [776, 616],\n};\n\nexport const SKILLTREES_BY_CLASSES: Partial<Record<CharacterClass, SkillTree[]>> = {\n  [CharacterClass.Templar]: [\n    SkillTree.Vengeance,\n    SkillTree.Wrath,\n    SkillTree.Conviction,\n    SkillTree.Redemption,\n    SkillTree.Mastery,\n  ],\n  [CharacterClass.Berserker]: [\n    SkillTree.Guardian,\n    SkillTree.SkyLord,\n    SkillTree.Dragonkin,\n    SkillTree.Frostborn,\n    SkillTree.Mastery,\n  ],\n  [CharacterClass.Warden]: [\n    SkillTree.WindRanger,\n    SkillTree.Druid,\n    SkillTree.StormCaller,\n    SkillTree.WinterHerald,\n    SkillTree.Mastery,\n  ],\n  [CharacterClass.Warlock]: [\n    SkillTree.Corruptor,\n    SkillTree.Lich,\n    SkillTree.Demonologist,\n    SkillTree.Reaper,\n    SkillTree.Mastery,\n  ],\n};\n","export function enumToObject<T extends Record<string, unknown>, V>(enumObject: T, value: V) {\n  const obj: Partial<Record<keyof T, V>> = {};\n\n  Object.keys(enumObject).forEach((key) => {\n    obj[key as keyof T] = value;\n  });\n\n  return obj as Record<keyof T, V>;\n}\n\nexport function allEnumValues<T>(enumObject: Record<string, T>): T[] {\n  return Object\n    .keys(enumObject)\n    .map(key => enumObject[key]);\n}\n\nexport function allEnumKeys(enumObject: Record<string, string>): string[] {\n  return Object\n    .keys(enumObject);\n}\n\nexport function isInEnum<T>(enumObject: Record<string, T>, value: T): boolean {\n  return Object.values(enumObject).includes(value);\n}\n\nexport type DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};","export enum SortOrder {\n  NameAsc = 'nameAsc',\n  NameDesc = 'nameDesc',\n  LevelAsc = 'levelAsc',\n  LevelDesc = 'levelDesc',\n}\n\nexport interface GeneralFilters {\n  patch: string;\n}\n\nexport interface ItemsFilters {\n  search?: string;\n  category?: string;\n  type?: string;\n  characterClass?: string;\n  rarities?: string[];\n  onlySet?: boolean;\n  orderBy?: SortOrder;\n}\n\nexport interface EnchantsFilters {\n  search?: string;\n  type?: string;\n  category?: string;\n}\n\nexport interface SkillsFilters {\n  search?: string;\n  characterClass?: string;\n  tree?: string;\n  types?: string[];\n  family?: string;\n}\n\nexport interface Filters {\n  general: GeneralFilters;\n  items: ItemsFilters;\n  enchants: EnchantsFilters;\n  skills: SkillsFilters;\n}\n\n/* Flattened filters */\nexport type QueryFiltersInterface = {\n  patch: string;\n  itemsSearch?: string;\n  itemsCategory?: string;\n  itemsType?: string;\n  itemsCharacterClass?: string;\n  itemsRarities?: string[];\n  itemsOnlySet?: string;\n  itemsOrderBy?: string;\n  enchantsSearch?: string;\n  enchantsType?: string;\n  enchantsCategory?: string;\n  skillsSearch?: string;\n  skillsCharacterClass: string;\n  skillsTree: string;\n  skillsTypes: string[];\n  skillsFamily: string;\n}\n\nexport enum FiltersType {\n  General = 'general',\n  Items = 'items',\n  Enchants = 'enchants',\n  Skills = 'skills'\n}\n","import { compact, isEmpty, reduce, uniq } from 'lodash';\nimport Minisearch from 'minisearch';\n\nimport { ENCHANT_SLOTS_BY_RARITY } from 'engine/data/dataMappings';\nimport EnchantsPoolData from 'engine/data/enchantsPool.json';\nimport { sortObject } from 'helpers/objectUtils';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport {\n  ItemEnchantSlots,\n  SimpleEnchant,\n  EnchantType,\n  Enchant,\n  EnchantCategory,\n  CraftableEnchantTypes,\n  EnchantsPool,\n  EnchantPoolType,\n} from 'types/Enchant.types';\nimport { EnchantsFilters } from 'types/Filters.types';\nimport { ItemRarity, Item, ItemType } from 'types/Item.types';\n\nimport Engine, { DataInterface } from './Engine';\n\ntype HydratedPoolType = Record<CraftableEnchantTypes, Enchant[]>\ntype HydratedEnchantsPool = Record<ItemType, HydratedPoolType>;\n\nexport default class EngineEnchants {\n  public readonly engine: Engine;\n  public categories: EnchantCategory[];\n  public types: EnchantType[];\n  private _categoriesByTypes?: Record<EnchantType, EnchantCategory[]>;\n  private enchantsPool!: HydratedEnchantsPool;\n  private searchEngine: Minisearch;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.categories = allEnumValues(EnchantCategory);\n    this.types = allEnumValues(EnchantType);\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: ['name', 'category', 'description', 'itemTypes', 'itemCategories'],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.enchantsPool = this.hydrateEnchantsPool();\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.enchantsSearchIndex);\n  }\n\n  /* Methods */\n  public all(filters: EnchantsFilters): Enchant[] {\n    let enchants = this.enchants;\n\n    enchants = this.filterBySearch(enchants, filters);\n    enchants = this.filterByTypeAndCategory(enchants, filters);\n\n    return enchants;\n  }\n  public getTypeEnchantsPool(type: ItemType): HydratedPoolType | null {\n    return this.enchantsPool[type] || null;\n  }\n\n  public getRunesEnchantsPool(): Enchant[] {\n    return this.enchants.filter(enchant => enchant.category === EnchantCategory.Rune);\n  }\n\n  public getItemEnchantsSlots(item: Item): ItemEnchantSlots | null {\n    if (this.engine.loaded && ![ItemRarity.Mythical].includes(item.rarity)) {\n      const enchantSlots = ENCHANT_SLOTS_BY_RARITY[item.rarity];\n      const fixedEnchants = this.enchantsToRawEnchants(item.rarity, item.fixedEnchants);\n      const baseEnchants = this.enchantsToRawEnchants(item.rarity, item.baseEnchants);\n\n      if (isEmpty(enchantSlots) && isEmpty(fixedEnchants) && isEmpty(baseEnchants)) {\n        return null;\n      } else {\n        return {\n          enchantSlots,\n          fixedEnchants,\n          baseEnchants,\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  private get enchants(): Enchant[] {\n    if (this.engine.loaded) {\n      return this.data.enchants;\n    }\n\n    return [];\n  }\n\n  public get defaultType(): EnchantType {\n    return Object.keys(this.categoriesByTypes)[0] as EnchantType;\n  }\n\n  public get defaultCategory(): EnchantCategory {\n    return this.categoriesByTypes[this.defaultType][0];\n  }\n\n  // TODO: Move this to a parser ?\n  public get categoriesByTypes(): Record<EnchantType, EnchantCategory[]> {\n    if (!this._categoriesByTypes) {\n      const enchants = this.enchants.reduce((memo: Record<string, string[]>, enchant: Enchant) => {\n        if (enchant.type === 'Gem' as EnchantType) {\n          return memo;\n        }\n\n        if (memo[enchant.type]) {\n          memo[enchant.type].push(enchant.category);\n          memo[enchant.type] = uniq(memo[enchant.type]);\n        } else {\n          memo[enchant.type] = [];\n        }\n\n        return memo;\n      }, {});\n\n      enchants[EnchantType.Major].push(EnchantCategory.Gem);\n      this._categoriesByTypes = sortObject(enchants, (a) => {\n        if (a === EnchantType.Minor) {\n          return 1;\n        }\n        return -1;\n      }) as Record<EnchantType, EnchantCategory[]>;\n    }\n\n    return this._categoriesByTypes;\n  }\n\n  /* Private */\n  private filterBySearch(enchants: Enchant[], filters: EnchantsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine.search(filters.search, {\n        prefix: true,\n        fuzzy: 0.2,\n      }).map(r => r.uuid);\n\n      return enchants.filter(enchant => resultingUuids.includes(enchant.uuid));\n    }\n\n    return enchants;\n  }\n\n  private filterByTypeAndCategory(enchants: Enchant[], filters: EnchantsFilters) {\n    if (filters.category === 'Any' || filters.type === 'Any') {\n      return enchants;\n    } else {\n      const category = (filters.category || this.defaultCategory) as EnchantCategory;\n      const type = (category === EnchantCategory.Gem ? 'Gem' : (filters.type || this.defaultType)) as EnchantType;\n\n      return enchants.filter(enchant => enchant.type === type && enchant.category === category);\n    }\n  }\n\n  /* Private utils */\n  private enchantsToRawEnchants(rarity: ItemRarity, enchantsIds: number[]): SimpleEnchant[] {\n    const { skills } = this.data;\n\n    return compact(\n      enchantsIds.map(enchantId => this.enchants.find(e => e.uuid === enchantId))\n    ).map((enchant) => {\n      const ranges = enchant.ranges[rarity];\n\n      return {\n        uuid: enchant.uuid,\n        name: enchant.name,\n        description: enchant.description,\n        min: ranges.minimum,\n        max: ranges.cap,\n        skills: enchant.skills?.reduce((memo: Record<number, string>, skillId) => {\n          const skill = skills.find(s => s.uuid === skillId);\n          memo[skillId] = skill?.name || 'Unknown Skill';\n          return memo;\n        }, {}),\n      };\n    });\n  }\n\n  private hydrateEnchantsPool(): HydratedEnchantsPool {\n    const enchantsPool = EnchantsPoolData as unknown as EnchantsPool;\n\n    // @ts-ignore\n    return reduce(enchantsPool, (hydratedPool: HydratedEnchantsPool, poolByEnchantType: EnchantPoolType, itemType: ItemType) => {\n      hydratedPool[itemType] = {\n        [EnchantType.Epic]: compact(poolByEnchantType[EnchantType.Epic].map(uuid => this.enchants.find(e => e.uuid === uuid))),\n        [EnchantType.Major]: compact(poolByEnchantType[EnchantType.Major].map(uuid => this.enchants.find(e => e.uuid === uuid))),\n        [EnchantType.Minor]: compact(poolByEnchantType[EnchantType.Minor].map(uuid => this.enchants.find(e => e.uuid === uuid))),\n      };\n      return hydratedPool;\n    }, {});\n  }\n}\n","export function sortObject<T extends Record<string, unknown>>(obj: T, sortFunction: (a: string, b: string) => number): T {\n  return Object.keys(obj).sort(sortFunction).reduce((result: Record<string, unknown>, key) => {\n    result[key] = obj[key];\n    return result;\n  }, {}) as T;\n}","import { compact, findKey } from 'lodash';\nimport Minisearch from 'minisearch';\n\nimport { ITEM_TYPES_BY_CATEGORIES } from 'engine/data/dataMappings';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport { CharacterClass } from 'types/Character.types';\nimport { ItemsFilters, SortOrder } from 'types/Filters.types';\nimport { ItemCategory, ItemType, Item, ItemRarity, ItemSet } from 'types/Item.types';\n\nimport Engine, { DataInterface } from './Engine';\n\nexport interface ItemSetData extends ItemSet {\n  items: Item[];\n  types: ItemType[];\n}\n\nexport const DEFAULT_RARITIES_FILTERS = [\n  ItemRarity.Unique,\n  ItemRarity.Legendary,\n  ItemRarity.TrueLegendary,\n];\n\nconst FILTER_UNAFFECTED_CATEGORIES = [\n  'Any',\n  ItemCategory.Consumables,\n  ItemCategory.Craft,\n  ItemCategory.Gem,\n  ItemCategory.Misc,\n];\n\nexport default class EngineItems {\n  public readonly engine: Engine;\n  public categories: ItemCategory[];\n  public types: ItemType[];\n  public typesByCategories: Record<ItemCategory, ItemType[]>;\n  public categoriesByType: Record<ItemType, ItemCategory>;\n  private searchEngine: Minisearch;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.types = allEnumValues(ItemType);\n    this.categories = allEnumValues(ItemCategory);\n    this.typesByCategories = ITEM_TYPES_BY_CATEGORIES;\n    this.categoriesByType = this._categoriesByType();\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: ['name', 'classRestriction', 'enchants', 'setName', 'setBonuses'],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.itemsSearchIndex);\n  }\n\n  /* Methods */\n  public all(filters: ItemsFilters): Item[] {\n    let items = this.items;\n\n    items = this.filterBySearch(items, filters);\n    items = this.filterByTypeAndCategory(items, filters);\n    items = this.filterByClass(items, filters);\n    items = this.filterByRarities(items, filters);\n    items = this.filterOnlySet(items, filters);\n    items = this.sortBy(items, filters);\n\n    return items;\n  }\n\n  public find(uuid: number): Item | null {\n    return this.items.find(item => item.uuid === uuid) || null;\n  }\n\n  public getSetData(item: Item): ItemSetData | null {\n    if (item.set) {\n      const set = this.data.sets.find(set => set.uuid === item.set);\n\n      if (set) {\n        const setItems = compact(set.itemIds.map(itemId => this.items.find(item => item.uuid === itemId)));\n        return {\n          ...set,\n          items: setItems,\n          types: setItems.map(item => item.type),\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  private get items(): Item[] {\n    if (this.engine.loaded) {\n      return this.data.items;\n    }\n\n    return [];\n  }\n\n  public get defaultCategory(): ItemCategory {\n    return this.categories[0];\n  }\n\n  public get defaultType(): ItemType {\n    return this.typesByCategories[this.defaultCategory][0];\n  }\n\n  /* Private */\n  private filterBySearch(items: Item[], filters: ItemsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine.search(filters.search, {\n        prefix: true,\n        fuzzy: 0.2,\n      }).map(r => r.uuid);\n\n      return items.filter(item => resultingUuids.includes(item.uuid));\n    }\n\n    return items;\n  }\n\n  private filterByTypeAndCategory(items: Item[], filters: ItemsFilters) {\n    if (filters.category === 'Any' || filters.type === 'Any') {\n      return items;\n    } else {\n      const category = (filters.category || this.defaultCategory) as ItemCategory;\n      const type = (filters.type || this.defaultType) as ItemType;\n\n      return items.filter(item => item.type === type && item.category === category);\n    }\n  }\n\n  private filterByClass(items: Item[], filters: ItemsFilters) {\n    // If we have a category and it's a category that should not be affected by rarity\n    if (filters.category && FILTER_UNAFFECTED_CATEGORIES.includes(filters.category)) {\n      return items;\n    }\n\n    // For all others categories, filter by rarity\n    if (filters.characterClass && filters.characterClass !== CharacterClass.All) {\n      return items.filter(item => filters.characterClass === item.classRestriction);\n    }\n\n    return items;\n  }\n\n  private filterByRarities(items: Item[], filters: ItemsFilters) {\n    // Don't use this filter for unaffected categories\n    if (FILTER_UNAFFECTED_CATEGORIES.includes(filters.category || this.defaultCategory)) {\n      // Don't return mythical items anyway if it is unselected\n      if (!filters.rarities?.includes(ItemRarity.Mythical)) {\n        return items.filter(item => item.rarity !== ItemRarity.Mythical);\n      } else {\n        return items;\n      }\n    }\n\n    // For all others categories, filter by rarity\n    if (filters.rarities) {\n      return items.filter(item => filters.rarities?.includes(item.rarity));\n    } else {\n      return items.filter(item => DEFAULT_RARITIES_FILTERS.includes(item.rarity));\n    }\n  }\n\n  private filterOnlySet(items: Item[], filters: ItemsFilters) {\n    // Don't use this filter for unaffected categories\n    if (FILTER_UNAFFECTED_CATEGORIES.includes(filters.category || this.defaultCategory)) {\n      return items;\n    }\n\n    if (filters.onlySet) {\n      return items.filter(item => !!item.set);\n    }\n\n    return items;\n  }\n\n  private sortBy(items: Item[], filters: ItemsFilters) {\n    if (!filters.orderBy) {\n      // Default sort is LevelDesc\n      return items.sort((a, b) => a.minLevel - b.minLevel);\n    }\n\n    switch (filters.orderBy) {\n      case SortOrder.NameAsc:\n        return items.sort((a, b) => {\n          const [nameA, nameB] = [a.name.toUpperCase(), b.name.toUpperCase()];\n          return nameA < nameB ? -1 : 1;\n        });\n      case SortOrder.NameDesc:\n        return items.sort((a, b) => {\n          const [nameA, nameB] = [a.name.toUpperCase(), b.name.toUpperCase()];\n          return nameA < nameB ? 1 : -1;\n        });\n      case SortOrder.LevelAsc:\n        return items.sort((a, b) => a.minLevel - b.minLevel);\n      case SortOrder.LevelDesc:\n        return items.sort((a, b) => -(a.minLevel - b.minLevel));\n      default:\n        return items;\n    }\n  }\n\n  private _categoriesByType(): Record<ItemType, ItemCategory> {\n    // @ts-ignore\n    return this.types.reduce((memo: Record<ItemType, ItemCategory>, type) => {\n      memo[type] = findKey(this.typesByCategories, types =>\n        types.includes(type)\n      ) as ItemCategory;\n\n      return memo;\n    }, {});\n  }\n}\n","import Minisearch from 'minisearch';\n\nimport { allEnumValues } from 'helpers/typeUtils';\nimport { CharacterClass } from 'types/Character.types';\nimport { SkillsFilters } from 'types/Filters.types';\nimport { Skill, SkillTree } from 'types/Skill.types';\n\nimport { SKILLTREES_BY_CLASSES } from './data/dataMappings';\nimport Engine, { DataInterface } from './Engine';\n\ninterface FindParams {\n  class: CharacterClass;\n}\n\nexport default class EngineEnchants {\n  public readonly engine: Engine;\n  private searchEngine: Minisearch;\n  public classes: CharacterClass[];\n  public trees: SkillTree[];\n  public treesByClasses: Partial<Record<CharacterClass, SkillTree[]>>;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n    this.classes = [CharacterClass.Templar, CharacterClass.Berserker, CharacterClass.Warden, CharacterClass.Warlock];\n    this.trees = allEnumValues(SkillTree);\n    this.treesByClasses = SKILLTREES_BY_CLASSES;\n    this.searchEngine = new Minisearch({\n      idField: 'uuid',\n      fields: ['name', 'class', 'tree', 'type', 'element', 'family', 'description'],\n      storeFields: ['uuid'],\n    });\n  }\n\n  public onDataLoaded() {\n    this.searchEngine.removeAll();\n    this.searchEngine.addAll(this.data.skillsSearchIndex);\n  }\n\n  /* Methods */\n  public all(filters: SkillsFilters): Skill[] {\n    let skills = this.skills;\n\n    skills = this.filterBySearch(skills, filters);\n    skills = this.filterByClassAndTree(skills, filters);\n    skills = this.filterByFamily(skills, filters);\n    skills = this.filterByTypes(skills, filters);\n    // skills = this.sortBy(skills, filters);\n\n    return skills;\n  }\n\n  public find(uuid: number, params?: FindParams): Skill | null {\n    if (params) {\n      return this.skills.find(skill => skill.uuid === uuid && skill.class === params.class) || null;\n    } else {\n      return this.skills.find(skill => skill.uuid === uuid) || null;\n    }\n  }\n\n  public findByName(name: string): Skill | null {\n    return this.data.skills.find(skill => skill.name.toLowerCase() === name.toLowerCase()) || null;\n  }\n\n  public defaultTreeForClass(characterClass: CharacterClass): SkillTree {\n    const classTrees = this.treesByClasses[characterClass];\n    return classTrees ? classTrees[0] : SkillTree.Mastery;\n  }\n\n  /* Getters */\n  private get data(): DataInterface {\n    return this.engine.data as DataInterface;\n  }\n\n  public get defaultClass(): CharacterClass {\n    return this.classes[0];\n  }\n\n  public get defaultTree(): SkillTree {\n    return this.defaultTreeForClass(this.defaultClass);\n  }\n\n  /* Private */\n  private get skills(): Skill[] {\n    if (this.engine.loaded) {\n      return this.data.skills;\n    }\n\n    return [];\n  }\n\n  private filterBySearch(skills: Skill[], filters: SkillsFilters) {\n    if (filters.search) {\n      const resultingUuids = this.searchEngine.search(filters.search, {\n        prefix: true,\n        fuzzy: 0.2,\n      }).map(r => r.uuid);\n\n      return skills.filter(skill => resultingUuids.includes(skill.uuid));\n    }\n\n    return skills;\n  }\n\n  private filterByClassAndTree(skills: Skill[], filters: SkillsFilters) {\n    if (filters.characterClass === 'All' || filters.tree === 'Any') {\n      return skills;\n    } else {\n      const characterClass = (filters.characterClass || this.defaultClass) as CharacterClass;\n      const tree = (filters.tree || this.defaultTree) as SkillTree;\n\n      return skills.filter(skill => skill.class === characterClass && skill.tree === tree);\n    }\n  }\n\n\n  private filterByFamily(skills: Skill[], filters: SkillsFilters) {\n    if (filters.family && filters.family !== 'All') {\n      return skills.filter(skill => filters.family === skill.family);\n    }\n\n    return skills;\n  }\n\n  private filterByTypes(skills: Skill[], filters: SkillsFilters) {\n    if (filters.types) {\n      return skills.filter(skill => skill.type && filters.types?.includes(skill.type));\n    }\n\n    return skills;\n  }\n}\n","import { CharacterClass } from 'types/Character.types';\nimport { Enchant } from 'types/Enchant.types';\nimport { Item, ItemSet } from 'types/Item.types';\nimport { Skill, SkillTree } from 'types/Skill.types';\n\nimport EngineEnchants from './EngineEnchants';\nimport EngineItems from './EngineItems';\nimport EngineSkills from './EngineSkills';\n\ntype Version = string;\n\nexport interface DataInterface {\n  items: Item[];\n  enchants: Enchant[];\n  sets: ItemSet[];\n  skills: Skill[];\n  skillsByClass: Record<CharacterClass, Record<SkillTree, Skill[]>>;\n  itemsSearchIndex: Record<string, string | number>[];\n  enchantsSearchIndex: Record<string, string | number>[];\n  skillsSearchIndex: Record<string, string | number>[];\n}\n\n/* Singleton */\nexport default class Engine {\n  public version!: Version;\n  public data?: DataInterface;\n\n  public readonly Items!: EngineItems;\n  public readonly Enchants!: EngineEnchants;\n  public readonly Skills!: EngineSkills;\n\n  constructor(version: Version) {\n    this.version = version;\n    this.Items = new EngineItems(this);\n    this.Enchants = new EngineEnchants(this);\n    this.Skills = new EngineSkills(this);\n  }\n\n  public get loaded(): boolean {\n    return !!this.data;\n  }\n\n  public async loadVersion(version: Version) {\n    if (version !== this.version) {\n      this.data = undefined;\n      this.version = version;\n      await this.loadData();\n    }\n  }\n\n  public async loadData() {\n    this.data = (await import(`./data/${this.version}/extracts`)).default;\n    this.Items.onDataLoaded();\n    this.Enchants.onDataLoaded();\n    this.Skills.onDataLoaded();\n  }\n}","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nconst ScrollToTop: React.FunctionComponent = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import { useContext } from 'react';\n\nimport EngineContext from 'engine/context';\nimport Engine from 'engine/Engine';\n\nexport default function useEngine(): Engine {\n  const engine = useContext(EngineContext);\n\n  return engine;\n}","import { useContext } from 'react';\n\nimport { MobXProviderContext } from 'mobx-react';\n\nimport { Stores } from 'types/DataStore.types';\n\n/**\n * Use MobX stores provided by the MobX context\n *\n * @param {DataStore} [storeNames] list of DataStores to be returned. Values can be taken from the `DataStore` enum. If left empty all available stores are returned\n */\nexport function useStores<StoresData extends Partial<Stores>>(...storeNames: (keyof StoresData)[]): StoresData {\n  const allStores: StoresData = useContext(MobXProviderContext) as StoresData;\n  let stores: StoresData;\n\n  if (storeNames && storeNames.length) {\n    stores = {} as StoresData;\n    storeNames.forEach((storeName) => {\n      const store = allStores[storeName];\n      if (!store) {\n        throw new Error(`Attempting to get an in-existant MobX store: ${storeName}`);\n      }\n\n      stores[storeName] = store;\n    });\n  } else {\n    stores = allStores;\n  }\n\n  return stores;\n}\n","import React, { FunctionComponent } from 'react';\n\nexport enum IconName {\n  ArrowDownBlue = 'arrow_down_blue',\n  ArrowDownPurple = 'arrow_down_purple',\n  ArrowDownYellow = 'arrow_down_yellow',\n  ArrowDownWhite = 'arrow_down_white',\n  ArrowRightBlue = 'arrow_right_blue',\n  ArrowRightPurple = 'arrow_right_purple',\n  ArrowRightYellow = 'arrow_right_yellow',\n  ArrowRightWhite = 'arrow_right_white',\n  ArrowUpBlue = 'arrow_up_blue',\n  Copy = 'copy',\n  Link = 'link',\n  Search = 'search',\n  Menu = 'menu'\n}\n\nconst SVG_PATH = 'assets/images/icons';\n\nexport interface Props {\n  id?: string;\n  className?: string;\n  name: IconName;\n  width?: number;\n  height?: number;\n}\n\nconst Icon: FunctionComponent<Props> = ({\n  id,\n  className,\n  name,\n  width,\n  height,\n}) =>  (\n  <img\n    aria-label={name}\n    src={`/${SVG_PATH}/${name}.svg`}\n    width={width}\n    height={height}\n    alt={name}\n    id={id}\n    className={className}\n  />\n);\n\nexport default Icon;\n","import React, { FunctionComponent } from 'react';\n\nimport './Footer.scss';\n\nconst Footer: FunctionComponent = () => {\n  return (\n    <footer className=\"o-footer\">\n      <span className=\"o-footer-item made-with\">\n        Made with&nbsp;&nbsp;❤️\n      </span>\n      <span className=\"o-footer__separator\">|</span>\n      <span className=\"o-footer-item issues\">\n        Noticed an <strong>issue?</strong> Tell me all about it&nbsp;\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.reddit.com/r/ChroniconDB/\"\n        >\n          here.\n        </a>\n      </span>\n      <span className=\"o-footer__separator\">|</span>\n      <span className=\"o-footer-item source-code\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/gabriel-dehan/chronicondb-client\"\n        >\n          Source code\n        </a>\n      </span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export enum RouteId {\n  Items = 'items',\n  Item = 'item',\n  Enchants  = 'enchants',\n  Skills = 'skills',\n  Skill = 'skill',\n  Developers = 'developers',\n}\n\nexport enum RoutePath {\n  Items = '/items',\n  Item = '/item/:uuid',\n  Enchants = '/enchants',\n  Skills = '/skills',\n  Skill = '/skill/:uuid',\n  Developers = '/developers',\n}\n\ninterface RoutesMapping {\n  [key: string]: RouteId;\n}\n\nexport const ROUTES_ID_MAPPING: RoutesMapping = {\n  [RoutePath.Items]: RouteId.Items,\n  [RoutePath.Item]: RouteId.Item,\n  [RoutePath.Enchants]: RouteId.Enchants,\n  [RoutePath.Skills]: RouteId.Skills,\n  [RoutePath.Skill]: RouteId.Skill,\n  [RoutePath.Developers]: RouteId.Developers,\n};\n","import React, { FunctionComponent, useState, createRef } from 'react';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nimport './Dropdown.scss';\n\nexport interface DropdownOption {\n  label: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  id?: string;\n  className?: string;\n  label: string;\n  defaultValue?: string;\n  options: DropdownOption[];\n  onChange: (value: string) => void;\n}\n\nconst Dropdown: FunctionComponent<DropdownProps> = ({\n  id,\n  className,\n  label,\n  defaultValue,\n  options,\n  onChange,\n}) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [currentValue, setCurrentValue] = useState(defaultValue || options[0].value);\n  const currentValueLabel = options.find(opt => opt.value === currentValue)?.label || defaultValue;\n  const dropdownRef = createRef<HTMLDivElement>();\n\n  useOnClickOutside(dropdownRef, onClickOutside);\n\n  return (\n    <div\n      id={id}\n      className={`a-dropdown ${className ? className : ''}`}\n      ref={dropdownRef}\n    >\n      <div className=\"a-dropdown__container\">\n        <div\n          className=\"a-dropdown__trigger\"\n          onClick={toggleDropdown}\n        >\n          <span className=\"a-dropdown__trigger-label\">{label}</span>\n          <span className=\"a-dropdown__trigger-value\">{currentValueLabel}</span>\n          <div className=\"a-dropdown__icon\"><Icon name={IconName.ArrowDownBlue} width={16} height={8} /></div>\n        </div>\n        <div className={`a-dropdown__options ${showDropdown ? 'open' : ''}`}>\n          {options.map(({ value, label }, index) => (\n            <span\n              key={`dropdown-${value}-${index}`}\n              className={`a-dropdown__option ${value === currentValue ? 'selected' : ''}`}\n              data-value={value}\n              onClick={() => onSelect(value)}\n            >\n              {label}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  function onSelect(value: string) {\n    setCurrentValue(value);\n    setShowDropdown(false);\n    onChange(value);\n  }\n\n  function toggleDropdown() {\n    setShowDropdown(!showDropdown);\n  }\n\n  function onClickOutside() {\n    if (showDropdown) {\n      setShowDropdown(false);\n    }\n  }\n};\n\nexport default Dropdown;","import { useEffect, RefObject } from 'react';\n\nexport default function useOnClickOutside(\n  element: RefObject<HTMLElement>,\n  callback: (event: MouseEvent) => void\n) {\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (element.current && !element.current.contains(event.target as Node)) {\n        callback(event);\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [element, callback]);\n}","import { FiltersStore } from 'stores/FiltersStore';\n\nexport enum DataStore {\n  Filters = 'filtersStore'\n}\n\nexport interface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { useHistory, useLocation, matchPath } from 'react-router-dom';\n\nimport { capitalize } from 'lodash';\nimport { autorun } from 'mobx';\n\nimport { allEnumValues } from 'helpers/typeUtils';\nimport { useStores } from 'hooks/useStores';\nimport { RoutePath } from 'routes';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\nimport {\n  GeneralFilters,\n  ItemsFilters,\n  EnchantsFilters,\n  SkillsFilters,\n  FiltersType,\n} from 'types/Filters.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\ntype useFiltersInterface<T> = [T, (params: T) => void];\n\nconst AVAILABLE_FILTERS_FOR_ROUTES: Record<RoutePath, FiltersType[]> = {\n  [RoutePath.Items]: [FiltersType.General, FiltersType.Items],\n  [RoutePath.Item]: [],\n  [RoutePath.Enchants]: [FiltersType.General, FiltersType.Enchants],\n  [RoutePath.Skills]: [FiltersType.General, FiltersType.Skills],\n  [RoutePath.Skill]: [],\n  [RoutePath.Developers]: [FiltersType.General],\n};\n\nexport default function useFilters\n  <T extends GeneralFilters | ItemsFilters | EnchantsFilters | SkillsFilters>(filtersType: FiltersType)\n  : useFiltersInterface<T>  {\n  const routes = allEnumValues(RoutePath);\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const history = useHistory();\n  const location = useLocation();\n\n  // When the change location change and on first render, observe the filters store\n  useEffect(() => {\n    const path = (\n      routes.find(route => matchPath(location.pathname, { path: route }))\n      || location.pathname\n    ) as RoutePath;\n\n    autorun(() => {\n      const filtersForPath = AVAILABLE_FILTERS_FOR_ROUTES[path];\n\n      if (filtersForPath.length > 0) {\n        history.replace({\n          search: filtersStore.toQueryString(filtersForPath || []),\n        });\n      }\n    });\n  }, [location.pathname]);\n\n  return [filtersStore.filters[filtersType] as T, setFilters];\n\n  /* A bit too metaprogramming for typescript */\n  function setFilters(filters: T) {\n    // @ts-ignore\n    filtersStore[`set${capitalize(filtersType)}Filters`](filters);\n  }\n}","import { useMediaQuery } from 'react-responsive';\n\nexport enum Breakpoint {\n  Mobile = 480,\n  Tablet = 860,\n  Laptop = 1024,\n  Desktop = 1280,\n}\n\nconst useResponsive = () => {\n  return {\n    isUpToTablet: useMediaQuery({ query: `(max-width: ${Breakpoint.Tablet}px)` }),\n  };\n};\n\nexport default useResponsive;","import React, { FunctionComponent } from 'react';\n\nexport enum GameIconType {\n  ItemCategory = 'itemCategory',\n  Item = 'item',\n  EnchantType = 'enchantType',\n  Enchant = 'enchant',\n  SkillSpell = 'skillSpell',\n  SkillMastery = 'skillMastery',\n  SkillTree =  'skillTree',\n  ClassProfile =  'classProfile',\n  ClassHeader =  'classHeader',\n  ClassBanner =  'classBanner'\n}\n\nconst BASE_PATH = 'assets/images/game';\n\nconst ICONS_PATH: Record<GameIconType, string> = {\n  [GameIconType.ItemCategory]: `${BASE_PATH}/items/categories/`,\n  [GameIconType.Item]: `${BASE_PATH}/items/all/`,\n  [GameIconType.EnchantType]: `${BASE_PATH}/enchants/types/`,\n  [GameIconType.Enchant]: `${BASE_PATH}/enchants/`,\n  [GameIconType.SkillSpell]: `${BASE_PATH}/skills/skills/`,\n  [GameIconType.SkillMastery]: `${BASE_PATH}/skills/masteries/`,\n  [GameIconType.SkillTree]: `${BASE_PATH}/skills/trees/`,\n  [GameIconType.ClassProfile]: `${BASE_PATH}/classes/profiles/`,\n  [GameIconType.ClassHeader]: `${BASE_PATH}/classes/headers/`,\n  [GameIconType.ClassBanner]: `${BASE_PATH}/classes/banners/`,\n};\n\nexport interface Props {\n  id?: string;\n  className?: string;\n  type: GameIconType;\n  name: string;\n  width?: number;\n  height?: number;\n}\n\nconst GameIcon: FunctionComponent<Props> = ({\n  id,\n  className,\n  type,\n  name,\n  width,\n  height,\n}) =>  (\n  <img\n    aria-label={name}\n    src={`/${ICONS_PATH[type]}/${name.toLowerCase()}.png`}\n    width={width}\n    height={height}\n    alt={name}\n    id={id}\n    className={className}\n  />\n);\n\nexport default GameIcon;\n","\n\nimport React, { FunctionComponent, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { observer } from 'mobx-react';\nimport Drawer from 'rc-drawer';\n\nimport Dropdown from 'components/atoms/Dropdown/Dropdown';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport patches from 'engine/data/patches.json';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { RouteId, RoutePath, ROUTES_ID_MAPPING } from 'routes';\nimport { GeneralFilters, FiltersType } from 'types/Filters.types';\n\nimport './Header.scss';\n\ntype MenuItem = Record<string, RoutePath>;\n\nconst MAIN_MENU_ITEMS: MenuItem[] = [\n  { path: RoutePath.Items },\n  { path: RoutePath.Enchants },\n  { path: RoutePath.Skills },\n];\n\nconst Header: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const { pathname } = useLocation();\n  const [filters, setFilters] = useFilters<GeneralFilters>(FiltersType.General);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return renderMobileHeader();\n  }\n\n  return renderDesktopHeader();\n\n  function renderDesktopHeader() {\n    return (\n      <header className=\"o-header\">\n        <div className=\"o-header__container\">\n          <div className=\"o-header__left\">\n            <h1 className=\"o-header__logo\">ChroniconDB</h1>\n            <ul className=\"o-header__main-menu\">\n              {MAIN_MENU_ITEMS.map((menuItem) => {\n                const menuRouteId: RouteId = ROUTES_ID_MAPPING[menuItem.path];\n                const { path } = menuItem;\n                const isCurrent = pathname === path;\n\n                return (\n                  <li\n                    className={`o-header__main-menu-item ${isCurrent ? 'current' : ''}`}\n                    key={menuRouteId}\n                  >\n                    <Link to={path}>{menuRouteId}</Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <ul className=\"o-header__sub-menu\">\n            <li className=\"o-header__sub-menu-item\">\n              <div className=\"o-header__sub-menu-patches\">\n                <Dropdown\n                  label=\"Patch:\"\n                  defaultValue={filters.patch}\n                  options={patches.map(patch => ({ label: patch, value: patch }))}\n                  onChange={onPatchChange}\n                />\n              </div>\n            </li>\n            <li className={`o-header__sub-menu-item ${pathname === RoutePath.Developers ? 'current' : ''}`}>\n              <Link to={RoutePath.Developers}>{RouteId.Developers}</Link>\n            </li>\n          </ul>\n        </div>\n      </header>\n    );\n  }\n\n  function renderMobileHeader() {\n    return (\n      <header className=\"o-header\">\n        <div className=\"o-header__container\">\n          <div className=\"o-header__left\">\n            <h1 className=\"o-header__logo\">ChroniconDB</h1>\n          </div>\n          <div className=\"o-header__right\" onClick={() => setIsMobileMenuOpen(true)}>\n            <Icon name={IconName.Menu} width={28} />\n          </div>\n          <Drawer\n            className=\"o-header__menuMobile\"\n            open={isMobileMenuOpen}\n            onClose={() => setIsMobileMenuOpen(false)}\n            handler={false}\n            width=\"50vw\"\n            placement={'right'}\n          >\n            <ul className=\"o-header__menuMobile-items\">\n              {MAIN_MENU_ITEMS.map((menuItem) => {\n                const menuRouteId: RouteId = ROUTES_ID_MAPPING[menuItem.path];\n                const { path } = menuItem;\n                const isCurrent = pathname === path;\n\n                return (\n                  <li\n                    className={`o-header__menuMobile-item ${isCurrent ? 'current' : ''}`}\n                    key={menuRouteId}\n                  >\n                    <Link to={path} onClick={() => setIsMobileMenuOpen(false)}>{menuRouteId}</Link>\n                  </li>\n                );\n              })}\n              <li className={`o-header__menuMobile-item ${pathname === RoutePath.Developers ? 'current' : ''}`}>\n                <Link to={RoutePath.Developers} onClick={() => setIsMobileMenuOpen(false)}>{RouteId.Developers}</Link>\n              </li>\n              <li className=\"o-header__menuMobile-item patch\">\n                <Dropdown\n                  label=\"Patch:\"\n                  defaultValue={filters.patch}\n                  options={patches.map(patch => ({ label: patch, value: patch }))}\n                  onChange={onPatchChange}\n                />\n              </li>\n            </ul>\n          </Drawer>\n        </div>\n      </header>\n    );\n  }\n\n  function onPatchChange(patch: string) {\n    setFilters({ patch });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default observer(Header);\n","import React, { FunctionComponent } from 'react';\n\n\nimport Footer from 'components/organisms/Footer/Footer';\nimport Header from 'components/organisms/Header/Header';\n\nimport './Default.scss';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst DefaultLayout: FunctionComponent<Props> = ({ children }) => {\n\n  return (\n    <div className=\"p-layout\">\n      <Header />\n      <div className=\"p-wrapper\">\n        <div className=\"p-content\">\n          {children}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n","import React, { FunctionComponent } from 'react';\nimport { Helmet } from 'react-helmet-async';\n\ninterface Props {\n  title: string,\n  description: string,\n}\n\nconst useSeo = ({\n  title,\n  description,\n}: Props) => {\n\n  const SeoTag: FunctionComponent = () => {\n    return (\n      <Helmet>\n        <title>ChroniconDB - {title}</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n    );\n  };\n\n  return SeoTag;\n};\n\nexport default useSeo;","import React, { FunctionComponent } from 'react';\n\nimport Item from 'components/organisms/Items/Item/Item';\nimport useFilters from 'hooks/useFilters';\nimport useSeo from 'hooks/useSeo';\nimport { GeneralFilters, FiltersType } from 'types/Filters.types';\n\nimport './DevelopersTemplate.scss';\n\nconst DevelopersTemplate: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<GeneralFilters>(FiltersType.General);\n\n  const Seo = useSeo({\n    title: 'Developers',\n    description: \"Want some juicy data to create your own application? It's all here!\",\n  });\n\n  return (\n    <>\n      <Seo />\n      <div className=\"t-developers\">\n        <p className=\"t-developers__block\">\n          <h1>So, you have an idea...</h1>\n          <p>\n            ...for a Chronicon related application, maybe a <em>Character Planner</em> or an <em>Item crafting simulator</em>, but what you're missing dearly are some fat, juicy <strong>pieces of (up to date) data</strong> to supplement your idea?\n            <br />\n          - \"What about those items?\", you think? \"Where will I ever find properly formatted data for those hundreds of items?\"\n          </p>\n          <p>\n            But <strong>don't you worry</strong> lad(y), for we've got you covered here at <strong>ChroniconDB™</strong>.<br />\n            All the data you ever wished for is now at your finger tips 👌!\n          </p>\n        </p>\n        <p className=\"t-developers__block\">\n          <h1>Stop talking and gieb data please</h1>\n          <p className=\"t-developers__tldr\">\n            <strong>TL;DR:</strong> Clone everything.<br />\n            In the <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/engine\">Engine data folder</a>, <code>{filters.patch}/extracts/</code> contains almost all the data in JSON format for the latest version.<br />\n            The <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/types\">Types</a> will help you make sense of those json files: for instance <code>items.json</code> has it's interface <code>Item</code> in the <code>types/Item.types.ts</code> file.<br />\n            The rest of the non-versioned data, is in the Engine data folder: <code>dataMappings.ts</code> and <code>enchantsPool.json</code> are the most useful.\n          </p>\n          <p>\n            ChroniconDB is an <strong>open source</strong> React/Typescript application and everything can be found in the <a href=\"https://github.com/gabriel-dehan/chronicondb-client\">Github Repository</a>.<br />\n            Rest assured that even if you don't know Typescript you should still be able to use the data provided here.<br /><br />\n            The main issue on our hands is that <strong>I did the coding</strong>. It has - therefore and inevitably - become <strong>a mess</strong>. Believe me.<br />\n          </p>\n          <p>\n            So <strong>let me guide you</strong> through this ungodly jungle:<br />\n            If you're not interested in the display intricacies (a.k.a the front-end) but want some data and logic,\n            everything can be found in the <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/engine\">Engine</a>, or more specifically in the <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/engine\">Engine data folder</a>.\n          </p>\n          <p>\n            In here you'll find the following architecture:\n\n            <pre>\n              .<br />\n              ├── <strong>1.10.5/</strong><br />\n              │   ├── ...<br />\n              ├── <strong>1.10.4/</strong><br />\n              │   ├── ...<br />\n              ├── <strong>1.10.2/</strong><br />\n              │   ├── <strong>extracts/</strong><br />\n              │   │   ├── enchants.json<br />\n              │   │   ├── enchantsSearchIndex.json<br />\n              │   │   ├── index.ts<br />\n              │   │   ├── items.json<br />\n              │   │   ├── itemsSearchIndex.json<br />\n              │   │   ├── sets.json<br />\n              │   │   ├── skills.json<br />\n              │   │   ├── skillsByClass.json<br />\n              │   │   └── skillsSearchIndex.json<br />\n              │   └── <strong>sources/</strong><br />\n              │       ├── enchantlist.txt<br />\n              │       ├── itemlist.txt<br />\n              │       ├── skilldata_1.10.2.json<br />\n              │       └── <strong>locale/</strong><br />\n              │           └── ...<br />\n              ├── <strong>injected/</strong><br />\n              │   └── gemenchantlist.txt<br />\n              ├── dataMappings.ts<br />\n              ├── enchantsPool.json<br />\n              ├── enchantsPoolByName.json<br />\n              ├── index.ts<br />\n              └── patches.json<br />\n            </pre>\n            Let's start, shall we?\n          </p>\n          <p>\n            <h2>VERSIONS</h2>\n            Those folders, aptly named by their respective versions <code>x.y.z/</code>, contain most of the data you'll need.<br />\n            They are automatically created using the command <code>yarn parse:all x.y.z</code> whenever I see that a new version of Chronicon is out.<br />\n            If you can't see a folder for the latest version, it probably means that <strong>I've been ran over by a Moose</strong>, an unfortunate accident.<br />\n            But don't fret, you can still generate everything you need yourself by following <a href=\"https://github.com/gabriel-dehan/chronicondb-client#how-to-get-up-to-date-item-and-skills-data\">those instructions</a>.<br /><br />\n\n            So we have something that looks like this.\n            <pre>\n              .<br />\n              ├── <strong>1.10.4/</strong><br />\n              │   ├── <strong>extracts/</strong><br />\n              │   └── <strong>sources/</strong><br />\n              ├── <strong>1.10.2/</strong><br />\n              │   ├── <strong>extracts/</strong><br />\n              │   └── <strong>sources/</strong><br />\n              ├── ...<br />\n              │\n            </pre>\n            <p>\n              There are two folders per version:\n              <ul>\n                <li><code><strong>sources/</strong></code>, contains all the data extracted from the game itself, mainly CSV (sort of) and locales (translations) files.</li>\n                <li>\n                  <code><strong>extracts/</strong></code>, is where it gets spicy, as it contains all the data parsed and formatted, both from versioned data, and manually extracted data (sigh.)<br />\n                  Everything inside the folder is pretty self explanatory, just don't pay attention to the <code>*SearchIndex.json</code> files, they are used internally. But if you need indexes for your own search engine, please feel free to use those.<br />\n                  To help make sense of those files, do not hesitate to take a peak at the <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/types\">Types</a>: for instance <code>items.json</code> has it's interface <code>Item</code> in the <code>types/Item.types.ts</code> file.\n                </li>\n              </ul>\n            </p>\n          </p>\n          <p>\n            <h2>DATAMAPS</h2>\n            A fancy word for everything I had to map-out by hand (pepega) because it could not be extracted from the game directly.\n            I am talking about the following files:\n\n            <pre>\n              .<br />\n              ├── <strong>injected/</strong><br />\n              │   └── gemenchantlist.txt<br />\n              ├── dataMappings.ts<br />\n              ├── enchantsPool.json<br />\n              ├── enchantsPoolByName.json<br />\n              └── patches.json<br />\n            </pre>\n            <ul>\n              <li>\n                <code><strong>injected/</strong></code>, does not contain much apart from my tears and blood, and a manually extracted list of gem enchants. Those are automatically baked in the versioned <code>enchants.json</code> so you can forget about it.\n              </li>\n              <li>\n                <code>dataMappings.ts</code> contains most of the data mappings, mainly which item goes in which set, all the sets ids, what item type is in which category, etc...\n              </li>\n              <li>\n                <code>enchantsPool.ts</code> and <code>enchantsPoolByName.ts</code> are pretty much extracted from <a href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=835123683\" rel=\"nofollow\">this guide</a>, they should help you identify which enchants goes with which type of item.\n              </li>\n              <li>\n                <code>patches.json</code> contains all the patches known to the application. Not very useful to you, I guess.\n              </li>\n            </ul>\n            As said before, to help make sense of this mess, the <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/types\">Types</a> are a breath of fresh air.\n          </p>\n          <p>\n            <h2>ENGINE</h2>\n            <a href=\"https://github.com/gabriel-dehan/chronicondb-client/tree/main/src/engine\">This</a> is a bit application specific, but could probably be used elsewhere.<br />\n            <pre>\n              . <br/>\n              ├── Engine.ts<br/>\n              ├── EngineEnchants.ts<br/>\n              ├── EngineItems.ts<br/>\n              ├── EngineSkills.ts<br/>\n              ├── context.ts<br/>\n              ├── <strong>data/</strong><br/>\n              ├── <strong>parsers/</strong><br/>\n              └── <strong>utils/</strong><br/>\n            </pre>\n            <ul>\n              <li>\n                <code><strong>data/</strong></code>, you know this one. I just can't seem to be able to shut up about it.\n              </li>\n              <li>\n                In the <code><strong>parsers/</strong></code> folder you'll find the code that generates the versioned JSON extracts. The code that is called when you do a <code>yarn parse:all VERSION</code>, yup, the one.\n              </li>\n              <li>\n                <code>Engine.ts</code>, <code>EngineItems.ts</code>, <code>EngineEnchants.ts</code>, <code>EngineSkills.ts</code>, contain a lot of logic code, as well as finders, filters, and helper methods to work with the data.\n              </li>\n            </ul>\n          </p>\n          <p>\n            <h2>TEMPLATING</h2>\n            If you look at the enchants and skills, you'll notice that their descriptions are looking like that:\n            <pre>\n              Using a |Shield¥ skill increases |Sword¥ skill damage by EFFECT% for DURATION seconds, stacking VALUE times. Using a |Sword¥ skill increases |Shield¥ skill damage by EFFECT% for DURATION seconds, stacking VALUE times.\n            </pre>\n            This is called a templating string and actual values are usually inserted into it at runtime.\n            The templating system in Chronicon is a bit convoluted but if you want to see how it's integrated in ChroniconDB, feel free to look at the <code>renderDescription()</code> functions in the following files: <a href=\"https://github.com/gabriel-dehan/chronicondb-client/blob/main/src/components/organisms/Skills/Skill/Skill.tsx\">Skills</a> and <a href=\"https://github.com/gabriel-dehan/chronicondb-client/blob/main/src/components/molecules/Items/AppliedEnchant/AppliedEnchant.tsx\">Enchants</a>.\n          </p>\n          <p>\n            <h2>ASSETS</h2>\n            If you've read up to here, I believe you'll be able to find them yourselves in the repository.<br />\n            Think of it as your homework if you will. Hint: it's not in the Engine.\n          </p>\n\n          <p>\n            Use the data as you like, the same goes for the code. If you want to take out the parsers and use them directly into your own projects, do it.<br />\n            <a href=\"http://www.wtfpl.net/about/\">Do whatever the fuck you want</a> with all this.<br /><br />\n            That's all I could think of for now, hope it helped.\n          </p>\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default DevelopersTemplate;","import React, { FunctionComponent } from 'react';\n\nimport DevelopersTemplate from 'components/templates/Developers/DevelopersTemplate';\n\nexport const DevelopersPage: FunctionComponent = () => {\n  return (\n    <DevelopersTemplate />\n  );\n};\n\nexport default DevelopersPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport { map } from 'lodash';\nimport Drawer from 'rc-drawer';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useEngine from 'hooks/useEngine';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { EnchantCategory, EnchantType } from 'types/Enchant.types';\nimport { EnchantsFilters, FiltersType } from 'types/Filters.types';\n\nimport './Categories.scss';\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<EnchantsFilters>(FiltersType.Enchants);\n\n  const { Enchants: { categoriesByTypes, defaultCategory, defaultType } } = Engine;\n  const baseCategory = (filters.category ?? defaultCategory) as EnchantCategory;\n  const baseType = (filters.type ?? defaultType) as EnchantType;\n\n  const [selectedCategory, setSelectedCategory] = useState<EnchantCategory>(baseCategory);\n  const [selectedType, setSelectedType] = useState<EnchantType>(baseType);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-enchantTypes__menuMobile type-${selectedType.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderTypeMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderTypeMenu();\n  }\n\n  function renderCategories(type: EnchantType, enchantCategories: EnchantCategory[]) {\n    return (\n      <ul className=\"o-enchantTypes__enchantCategories\">\n        {enchantCategories.map(enchantCategory => (\n          <li\n            key={`enchant-type-${enchantCategory}`}\n            className={`o-enchantTypes__enchantCategory ${selectedCategory === enchantCategory ? 'selected' : ''}`}\n          >\n            <span\n              className=\"o-enchantTypes__enchantCategoryName\"\n              onClick={() => onCategorySelect(enchantCategory, type)}\n            >\n              {enchantCategory === EnchantCategory.Enchant ? 'Item' : enchantCategory}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderTypeMenu() {\n    return (\n      <ul className=\"o-enchantTypes\">\n        {map(categoriesByTypes, ((enchantTypes, type: EnchantType) => {\n          const isSelected = selectedType === type;\n          return (\n            <li\n              key={`enchant-type-${type}`}\n              className={`o-enchantTypes__type ${isSelected ? 'selected' : ''}`}\n            >\n              <span\n                className=\"o-enchantTypes__typeName\"\n                onClick={() => onTypeSelect(type)}\n              >\n                <Icon\n                  className=\"o-enchantTypes__typeName-arrow\"\n                  width={isSelected ? 14 : 6}\n                  height={isSelected ? 7 : 12}\n                  name={isSelected ? IconName.ArrowDownBlue : IconName.ArrowRightBlue}\n                />\n                {type}\n                <GameIcon\n                  className=\"o-enchantTypes__typeName-icon\"\n                  type={GameIconType.EnchantType}\n                  name={type}\n                  width={28}\n                />\n              </span>\n              {renderCategories(type, enchantTypes)}\n            </li>\n          );\n        }))}\n      </ul>\n    );\n  }\n\n  function onTypeSelect(type: EnchantType) {\n    const defaultEnchantCategory = categoriesByTypes[type][0];\n\n    setSelectedType(type);\n    setSelectedCategory(defaultEnchantCategory);\n    setFilters({ type, category: defaultEnchantCategory });\n  }\n\n  function onCategorySelect(category: EnchantCategory, enchantType: EnchantType) {\n    setSelectedCategory(category);\n    setFilters({ category, type: enchantType });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default Categories;","import React, { FunctionComponent, useState, useCallback } from 'react';\n\nimport { isEmpty, debounce } from 'lodash';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\n\nimport './Search.scss';\n\ninterface SearchProps {\n  className?: string;\n  placeholder?: string;\n  value: string;\n  onChange: (value?: string) => void;\n}\n\nconst Search: FunctionComponent<SearchProps> = ({\n  className,\n  placeholder,\n  value,\n  onChange,\n}) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const onDebouncedChange = useCallback(debounce((val) => {\n    onChange(isEmpty(val) ? undefined : val);\n  }, 500), []);\n\n  return (\n    <div className={`a-search ${className ? className : ''}`}>\n      <input\n        className=\"a-search__input\"\n        placeholder={placeholder}\n        type=\"text\"\n        value={inputValue}\n        onChange={onInputChange}\n      />\n      <div className=\"a-search__iconContainer\">\n        <Icon\n          className=\"a-search__icon\"\n          name={IconName.Search}\n          width={18}\n        />\n      </div>\n    </div>\n  );\n\n  function onInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setInputValue(e.target.value);\n    onDebouncedChange(e.target.value);\n  }\n};\n\nexport default Search;","import React, { FunctionComponent } from 'react';\n\nimport Search from 'components/atoms/Search/Search';\nimport useFilters from 'hooks/useFilters';\nimport { EnchantsFilters, FiltersType } from 'types/Filters.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<EnchantsFilters>(FiltersType.Enchants);\n\n  return (\n    <div className=\"o-enchantFilters\">\n      <Search\n        className=\"o-enchantFilters__search\"\n        placeholder=\"Search anything: Health, Movement, Weapons...\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n    </div>\n  );\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React from 'react';\n\nimport './Badge.scss';\n\ninterface Props {\n  label: string;\n  color: string;\n}\n\nconst Badge: React.FunctionComponent<Props> = ({\n  label,\n  color,\n}) => {\n  return (\n    <em className=\"a-badge\" style={{ backgroundColor: color }}>\n      {label}\n    </em>\n  );\n};\n\nexport default Badge;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { camelCase, uniq } from 'lodash';\n\nimport Badge from 'components/atoms/Badge/Badge';\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\nimport { Enchant as EnchantInterfacee, EnchantCategory, EnchantType } from 'types/Enchant.types';\nimport { ItemRarity, ItemType } from 'types/Item.types';\n\nimport './Enchant.scss';\n\ninterface Props {\n  enchant: EnchantInterfacee,\n}\n\nconst Enchant: FunctionComponent<Props> = ({\n  enchant,\n}) => {\n  const Engine = useEngine();\n  const isGem = enchant.category === EnchantCategory.Gem;\n  // We put Gems enchants as Major Enchants\n  const type = isGem ? EnchantType.Major : enchant.type;\n\n  return (\n    <div className=\"o-enchant\">\n      <div className=\"o-enchant__header\">\n        <div className=\"o-enchant__header-content\">\n          <span className=\"o-enchant__icon\">\n            <GameIcon type={GameIconType.EnchantType} name={type} width={32} />\n          </span>\n          <div className=\"o-enchant__header-title\">\n            <h2 className=\"o-enchant__header-name\">\n              {enchant.name}\n            </h2>\n            <h3\n              className=\"o-enchant__header-category\"\n              style={{ color: `var(--color-enchant-${camelCase(type)})` }}\n            >\n              {isGem ? EnchantType.Major : type}\n              &nbsp;\n              {enchant.category === EnchantCategory.Enchant ? 'Item' : enchant.category} Enchant\n            </h3>\n          </div>\n        </div>\n        <div className=\"o-enchant__header-affixes\">\n          {enchant.affixes && uniq(enchant.affixes).map(affix => (\n            <span\n              key={`enchant-${enchant.uuid}-affix-${affix}`}\n              className=\"o-enchant__header-affix\"\n            >\n              <Badge\n                label={affix}\n                color={`var(--color-enchant-dim-${camelCase(type)})`}\n              />\n            </span>\n          ))}\n        </div>\n      </div>\n      <div className=\"o-enchant__content\">\n        <div className=\"o-enchant__content-main\">\n          <div className=\"o-enchant__description\">\n            {renderDescription()}\n          </div>\n          <div className=\"o-enchant__ranges\">\n            {renderRanges()}\n          </div>\n        </div>\n        <div className=\"o-enchant__content-sub\">\n          <h3 className=\"o-enchant__itemTypes-title\">\n            Can be applied to:\n          </h3>\n          <ul>\n            {enchant.itemTypes.map(itemType => (\n              <li\n                key={`enchant-${enchant.uuid}-itemType-${itemType}`}\n                className=\"o-enchant__itemType\"\n              >\n                <Link to={{\n                  pathname: '/items',\n                  search: `?itemsType=${itemType}&itemsCategory=${Engine.Items.categoriesByType[itemType]}`,\n                }}>\n                  {itemType === ItemType.Rune ? 'Rune' : itemType}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderRanges() {\n    if (isGem) {\n      return (\n        <div className=\"o-enchant__ranges-column full\">\n          {renderRange(ItemRarity.Rare)}\n          {renderRange(ItemRarity.Enchanted)}\n          {renderRange(ItemRarity.Ordinary)}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"o-enchant__ranges-column\">\n          {renderRange(ItemRarity.TrueLegendary)}\n          {renderRange(ItemRarity.Legendary)}\n          {renderRange(ItemRarity.Unique)}\n        </div>\n        <div className=\"o-enchant__ranges-column\">\n          {renderRange(ItemRarity.Rare)}\n          {renderRange(ItemRarity.Enchanted)}\n          {renderRange(ItemRarity.Ordinary)}\n        </div>\n      </>\n    );\n  }\n\n  function renderRange(rarity: ItemRarity) {\n    const rolls = enchant.ranges[rarity];\n\n    return (\n      <div key={`epool-rolls-${rarity}`} className=\"o-enchant__rolls\">\n        <strong\n          className=\"o-enchant__rolls-rarity\"\n          style={{ color: `var(--color-item-${camelCase(rarity)})` }}\n        >\n          {rarity}\n        </strong>\n        <ul>\n          <li className=\"o-enchant__roll\">\n            <span className=\"o-enchant__roll-header\">\n                Roll range\n            </span>\n            <em className=\"o-enchant__roll-roll\">\n              {rolls.minimum} - {rolls.maximum}\n            </em>\n          </li>\n          <li className=\"o-enchant__roll\">\n            <span className=\"o-enchant__roll-header\">\n                Augment caps\n            </span>\n            <em className=\"o-enchant__roll-roll\">\n              {rolls.cap} - {rolls.greaterCap}\n            </em>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  // TODO: Refactor with AppliedEnchant and enchant page\n  function renderDescription() {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"o-enchant__description-enchant-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i, offset) => {\n        const skillId = parseInt(match);\n        const skillName = Engine.Skills.find(skillId)?.name;\n\n        if (skillName) {\n          return (\n            <Link\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"o-enchant__description-enchant-skill\"\n            >\n              {skillName}\n            </Link>\n          );\n        } else {\n          return (\n            <Link\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"o-enchant__description-enchant-skill unknown\"\n            >\n              Unknown Skill\n            </Link>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    return finalNodes;\n  }\n};\n\nexport default Enchant;","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { chunk } from 'lodash';\n\nexport default function useInfiniteScroll<T>(data: T[], perPage = 10) {\n  const [dataChunks, setDataChunks] = useState<T[][]>(chunk(data, perPage));\n  const [paginatedData, setPaginatedData] = useState<T[]>(dataChunks[0]);\n\n  useEffect(() => {\n    const chunks = chunk(data, perPage);\n    setDataChunks(chunks);\n    setPaginatedData(chunks[0] || []);\n  }, [data, perPage]);\n\n  return {\n    paginatedData,\n    InfiniteScroll: getTag(),\n  };\n\n  function getTag() {\n    const InfiniteScroller: FunctionComponent = ({ children }) => {\n      return (\n        <InfiniteScroll\n          dataLength={paginatedData.length}\n          next={fetchNextData}\n          hasMore={paginatedData.length < data.length}\n          loader={<h4>Loading...</h4>}\n        >\n          {children}\n        </InfiniteScroll>\n      );\n    };\n    return InfiniteScroller;\n  }\n\n  function fetchNextData() {\n    const currentChunk = Math.ceil(paginatedData.length / perPage) - 1;\n    setPaginatedData([...paginatedData, ...dataChunks[currentChunk + 1]]);\n  }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport Enchant from 'components/organisms/Enchants/Enchant/Enchant';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\nimport { Enchant as EnchantInterface } from 'types/Enchant.types';\n\nimport './List.scss';\n\ninterface Props {\n  enchants: EnchantInterface[];\n}\n\n// TODO: Header should be a reusable component between lists\nconst List: FunctionComponent<Props> = ({\n  enchants,\n}) => {\n  const { paginatedData, InfiniteScroll } =  useInfiniteScroll<EnchantInterface>(enchants, 10);\n\n  return (\n    <div className=\"o-enchantsList\">\n      {enchants.length > 0 ? (\n        <>\n          <div className=\"o-enchantsList__header\">\n            <div className=\"o-enchantsList__header__items\">\n              <h3 className=\"o-enchantsList__header__thead\">\n                Enchant\n              </h3>\n              <h3 className=\"o-enchantsList__header__thead\">\n                Affixes\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-enchantsList__container\">\n            <div className=\"o-enchantsList__enchants\">\n              <InfiniteScroll>\n                {paginatedData.map(enchant => (\n                  <Enchant key={`enchant-${enchant.uuid}`} enchant={enchant} />\n                ))}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"o-enchantsList__noEnchant\">\n          No Enchant was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Enchants/Categories/Categories';\nimport Filters from 'components/organisms/Enchants/Filters/Filters';\nimport List from 'components/organisms/Enchants/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nimport './EnchantsTemplate.scss';\n\nconst EnchantsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n\n  const enchants = getFilteredEnchants();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-enchants__wrapper\">\n        <Categories />\n        <div className=\"t-enchants__list\">\n          <List enchants={enchants} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredEnchants() {\n    return Engine.Enchants.all({\n      search: filtersStore.enchants.search,\n      type: filtersStore.enchants.type,\n      category: filtersStore.enchants.category,\n    });\n  }\n};\n\nexport default observer(EnchantsTemplate);","import React, { FunctionComponent } from 'react';\n\nimport EnchantsTemplate from 'components/templates/Enchants/EnchantsTemplate';\nimport useSeo from 'hooks/useSeo';\n\nconst EnchantsPage: FunctionComponent = () => {\n  const Seo = useSeo({\n    title: 'Enchants database',\n    description: 'Find all the enchants you need to craft your dream items.',\n  });\n\n  return (\n    <>\n      <Seo />\n      <EnchantsTemplate />\n    </>\n  );\n};\n\nexport default EnchantsPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport './Tabs.scss';\n\nexport interface TabsNavItem {\n  label: string;\n  color: string;\n  borderColor?: string;\n  hoverColor?: string;\n}\n\ninterface Props {\n  className?: string;\n  defaultItem?: number;\n  navItems: TabsNavItem[];\n}\n\n// TODO: Should definitely handle colors differently, this is disgusting\nconst EnchantsPool: FunctionComponent<Props> = ({\n  className,\n  navItems,\n  defaultItem,\n  children,\n}) => {\n  const [currentTab, setCurrentTab] = useState(defaultItem || 0);\n\n  React.useEffect(() => {\n    setCurrentTab(defaultItem || 0);\n  }, [defaultItem]);\n\n  return (\n    <div className={`m-tabs ${className ? className : ''}`}>\n      <ul className=\"m-tabs__navigation\">\n        {navItems.map((navItem: TabsNavItem, index) => (\n          <li\n            key={`tab-${navItem.label}-${index}`}\n            className={`m-tabs__navigation-tab ${currentTab === index ? 'selected' : ''}`}\n            style={{\n              '--box-shadow-color': navItem.hoverColor || navItem.color,\n              color: navItem.color,\n              borderColor: navItem.borderColor || navItem.color,\n            } as React.CSSProperties}\n            onClick={() => onTabClick(index)}\n          >\n            {navItem.label}\n          </li>\n        ))}\n      </ul>\n\n      {React.Children.map(children, node => (\n        <div key={`tabPanel-${currentTab}`}>\n          {node}\n        </div>\n      ))?.filter((_, i) => i === currentTab)}\n    </div>\n  );\n\n  function onTabClick(index: number) {\n    setCurrentTab(index);\n  }\n\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent, useState } from 'react';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { pickBy, map, camelCase, isString } from 'lodash';\n\nimport Tabs from 'components/molecules/Tabs/Tabs';\nimport useEngine from 'hooks/useEngine';\nimport { CraftableEnchantTypes, EnchantType, Enchant } from 'types/Enchant.types';\nimport { ItemType, ItemRarity } from 'types/Item.types';\n\nimport './ItemsEnchantsPool.scss';\n\ninterface Props {\n  type: ItemType,\n}\n\nconst ItemsEnchantsPool: FunctionComponent<Props> = ({\n  type,\n}) => {\n  const Engine = useEngine();\n  const enchantsPool = Engine.Enchants.getTypeEnchantsPool(type);\n  const availableEnchantTypes = (enchantsPool ?\n    Object.keys(pickBy(enchantsPool, pool => pool.length > 0))\n    : []\n  ) as CraftableEnchantTypes[];\n  const [currentEnchant, setCurrentEnchant] = useState<Enchant | null>(null);\n\n  return (\n    <div className=\"m-enchantsPool\">\n      {enchantsPool ? (\n        <div className=\"m-enchantsPool__content\">\n          <Tabs\n            navItems={availableEnchantTypes.map(enchantType => ({\n              label: enchantType,\n              color: `var(--color-enchant-${enchantType.toLowerCase()})`,\n              borderColor: enchantType === EnchantType.Minor ?\n                'var(--color-element-mid-beige)' :\n                `var(--color-enchant-${enchantType.toLowerCase()})`,\n              hoverColor: `var(--color-enchant-dim-${enchantType.toLowerCase()})`,\n            }))}\n          >\n            {availableEnchantTypes.map((enchantType) => {\n              return (\n                <div key={`pool-${enchantType}`}>\n                  {renderPoolForType(enchantType)}\n                </div>\n              );\n            })}\n          </Tabs>\n\n        </div>\n      ) : (\n        <div className=\"m-enchantsPool__none\">\n          {type}s are not enchantable\n        </div>\n      )}\n    </div>\n  );\n\n  function renderPoolForType(type: CraftableEnchantTypes) {\n    if (!enchantsPool) {\n      return null;\n    }\n\n    return enchantsPool[type].map((enchant) => {\n      const isSelected = currentEnchant?.uuid === enchant.uuid;\n\n      return (\n        <div\n          key={`epool-${type}-${enchant.uuid}`}\n          className={`m-enchantsPool__enchant etype-${type.toLowerCase()} ${isSelected ? 'expanded' : ''}`}\n        >\n          <span\n            className=\"m-enchantsPool__enchant-name\"\n            onClick={() => setCurrentEnchant(isSelected ? null : enchant)}\n          >\n            {enchant.name}\n          </span>\n          {isSelected && (\n            <div className=\"m-enchantsPool__enchant__data\">\n              <strong className=\"m-enchantsPool__enchant__data-description\">\n                {renderDescription(enchant)}\n              </strong>\n              {map(enchant.ranges, (rolls, rarity) => {\n                if (rarity === ItemRarity.Mythical) {\n                  return null;\n                }\n\n                return (\n                  <div key={`epool-rolls-${rarity}`} className=\"m-enchantsPool__enchant__rolls\">\n                    <strong\n                      className=\"m-enchantsPool__enchant__rolls-rarity\"\n                      style={{ color: `var(--color-item-${camelCase(rarity)})` }}\n                    >\n                      {rarity}\n                    </strong>\n                    <ul>\n                      <li className=\"m-enchantsPool__enchant__roll\">\n                        <span className=\"m-enchantsPool__enchant__roll-header\">\n                    Roll range\n                        </span>\n                        <em className=\"m-enchantsPool__enchant__roll-roll\">\n                          {rolls.minimum} - {rolls.maximum}\n                        </em>\n                      </li>\n                      <li className=\"m-enchantsPool__enchant__roll\">\n                        <span className=\"m-enchantsPool__enchant__roll-header\">\n                    Augment caps\n                        </span>\n                        <em className=\"m-enchantsPool__enchant__roll-roll\">\n                          {rolls.cap} - {rolls.greaterCap}\n                        </em>\n                      </li>\n                    </ul>\n                  </div>\n                );\n              }).reverse()}\n\n            </div>\n          )}\n        </div>\n      );\n    });\n  }\n\n  // TODO: Refactor with AppliedEnchant and Enchant page\n  function renderDescription(enchant: Enchant) {\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-enchantsPool__enchant__data-description-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (replacedRanges && isString(replacedRanges[0]) && !replacedRanges[0].match(/^\\+/)) {\n      replacedRanges[0] = `- ${replacedRanges[0]}`;\n    }\n\n    return replacedRanges;\n  }\n};\n\nexport default ItemsEnchantsPool;","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { isString } from 'lodash';\n\nimport Tabs from 'components/molecules/Tabs/Tabs';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\nimport { EnchantType, Enchant } from 'types/Enchant.types';\nimport { ItemRarity } from 'types/Item.types';\n\nimport './RunesEnchantsPool.scss';\n\nconst EnchantsPool: FunctionComponent = () => {\n  const Engine = useEngine();\n  const enchantsPool = Engine.Enchants.getRunesEnchantsPool();\n  const availableEnchantTypes = [EnchantType.Legendary];\n  const [currentEnchant, setCurrentEnchant] = useState<Enchant | null>(null);\n\n  return (\n    <div className=\"m-runesEnchantsPool\">\n      <div className=\"m-runesEnchantsPool__content\">\n        <Tabs\n          navItems={availableEnchantTypes.map(enchantType => ({\n            label: enchantType,\n            color: `var(--color-enchant-${enchantType.toLowerCase()})`,\n            borderColor: enchantType === EnchantType.Minor ?\n              'var(--color-element-mid-beige)' :\n              `var(--color-enchant-${enchantType.toLowerCase()})`,\n            hoverColor: `var(--color-enchant-dim-${enchantType.toLowerCase()})`,\n          }))}\n        >\n          {availableEnchantTypes.map((enchantType) => {\n            return (\n              <div key={`pool-${enchantType}`}>\n                {renderPool()}\n              </div>\n            );\n          })}\n        </Tabs>\n      </div>\n    </div>\n  );\n\n  function renderPool() {\n    return enchantsPool.map((enchant) => {\n      const isSelected = currentEnchant?.uuid === enchant.uuid;\n      const rolls = enchant.ranges[ItemRarity.TrueLegendary];\n\n      return (\n        <div\n          key={`epool-legendary-${enchant.uuid}`}\n          className={`m-runesEnchantsPool__enchant etype-legendary ${isSelected ? 'expanded' : ''}`}\n        >\n          <span\n            className=\"m-runesEnchantsPool__enchant-name\"\n            onClick={() => setCurrentEnchant(isSelected ? null : enchant)}\n          >\n            {enchant.name}\n          </span>\n          {isSelected && (\n            <div className=\"m-runesEnchantsPool__enchant__data\">\n              <strong className=\"m-runesEnchantsPool__enchant__data-description\">\n                {renderDescription(enchant)}\n              </strong>\n\n              <div key={`epool-rolls-trueLegendary`} className=\"m-runesEnchantsPool__enchant__rolls\">\n                <ul>\n                  <li className=\"m-runesEnchantsPool__enchant__roll\">\n                    <span className=\"m-runesEnchantsPool__enchant__roll-header\">\n                      Roll range\n                    </span>\n                    <em className=\"m-runesEnchantsPool__enchant__roll-roll\">\n                      {rolls.minimum} - {rolls.maximum}\n                    </em>\n                  </li>\n                  <li className=\"m-runesEnchantsPool__enchant__roll\">\n                    <span className=\"m-runesEnchantsPool__enchant__roll-header\">\n                      Augment caps\n                    </span>\n                    <em className=\"m-runesEnchantsPool__enchant__roll-roll\">\n                      {rolls.cap} - {rolls.greaterCap}\n                    </em>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    });\n  }\n\n  // TODO: Refactor with AppliedEnchant and enchant page\n  function renderDescription(enchant: Enchant) {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${enchant.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-runesEnchantsPool__enchant__data-description-amount\"\n        >\n          X\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i, offset) => {\n        const skillId = parseInt(match);\n        const skillName = Engine.Skills.find(skillId)?.name;\n\n        if (skillName) {\n          return (\n            <Link\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"m-runesEnchantsPool__enchant__data-description-skill\"\n            >\n              {skillName}\n            </Link>\n          );\n        } else {\n          return (\n            <Link\n              key={`tpl-${enchant.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"m-runesEnchantsPool__enchant__data-description-skill unknown\"\n            >\n              Unknown Skill\n            </Link>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (finalNodes && isString(finalNodes[0]) && !finalNodes[0].match(/^\\+/)) {\n      finalNodes[0] = `- ${finalNodes[0]}`;\n    }\n\n    return finalNodes;\n  }\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent } from 'react';\n\nimport Drawer from 'rc-drawer';\n\nimport ItemsEnchantsPool from 'components/molecules/Items/ItemsEnchantsPool/ItemsEnchantsPool';\nimport RunesEnchantsPool from 'components/molecules/Items/RunesEnchantsPool/RunesEnchantsPool';\nimport useResponsive from 'hooks/useResponsive';\nimport { ItemType } from 'types/Item.types';\n\nimport './EnchantsPool.scss';\n\ninterface Props {\n  itemType: ItemType;\n}\n\nconst EnchantsPool: FunctionComponent<Props> = ({\n  itemType,\n}) => {\n  const { isUpToTablet } = useResponsive();\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        className={`o-enchantsPool__enchantsPoolMobile`}\n        width=\"80vw\"\n        placement={'left'}\n      >\n        <div className=\"o-enchantsPool__possibleEnchants\">\n          <div className=\"o-enchantsPool__title\">\n            Possible enchants\n          </div>\n          {itemType === ItemType.Rune ? (\n            <RunesEnchantsPool />\n          ) : (\n            <ItemsEnchantsPool type={itemType} />\n          )}\n        </div>\n      </Drawer>\n    );\n  }\n\n  return (\n    <div className=\"o-enchantsPool__possibleEnchants\">\n      {itemType === ItemType.Rune ? (\n        <RunesEnchantsPool />\n      ) : (\n        <ItemsEnchantsPool type={itemType} />\n      )}\n    </div>\n  );\n};\n\nexport default EnchantsPool;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\n\nimport { isString } from 'lodash';\n\nimport { RoutePath } from 'routes';\nimport { SimpleEnchant } from 'types/Enchant.types';\nimport { Item } from 'types/Item.types';\n\nimport './AppliedEnchant.scss';\n\ninterface Props {\n  item: Item\n  enchant: SimpleEnchant;\n}\n\nconst AppliedEnchant: FunctionComponent<Props> = ({\n  item,\n  enchant,\n}) => {\n  return (\n    <li className=\"m-appliedEnchant\">\n      {descriptionToTemplate()}\n    </li>\n  );\n\n  // TODO: Refactor with EnchantsPool\n  function descriptionToTemplate() {\n    let finalNodes = null;\n\n    const replacedRanges = replaceWithJSX(enchant.description, /(AMOUNT)/, (_, i) => {\n      return (\n        <span\n          key={`tpl-${item.uuid}-enchant-${enchant.name}-${i}`}\n          className=\"m-appliedEnchant__range\"\n        >\n          {renderRange()}\n        </span>\n      );\n    });\n\n    if (enchant.skills) {\n      const replacedSkills = replaceWithJSX(replacedRanges, /<SKILL_(\\d+)>/g, (match, i, offset) => {\n        const skillId = parseInt(match);\n        const skillName = enchant.skills ? enchant.skills[skillId] : null;\n        if (skillName) {\n          return (\n            <Link\n              key={`tpl-${item.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"m-appliedEnchant__skill\"\n            >\n              {skillName}\n            </Link>\n          );\n        } else {\n          return (\n            <Link\n              key={`tpl-${item.uuid}-skill-${skillId}-${i}-${offset}`}\n              to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n              className=\"m-appliedEnchant__skill unkown\"\n            >\n            Unknown Skill\n            </Link>\n          );\n        }\n      });\n\n      finalNodes = replacedSkills;\n    } else {\n      finalNodes = replacedRanges;\n    }\n\n    // Just add a `-` at the beginning of the string if there is no `+`\n    if (finalNodes && isString(finalNodes[0]) && !finalNodes[0].match(/^\\+/)) {\n      finalNodes[0] = `- ${finalNodes[0]}`;\n    }\n\n    return finalNodes;\n  }\n\n  function renderRange() {\n    if (enchant.min === enchant.max) {\n      return (\n        <em className=\"m-appliedEnchant__max\">{enchant.max}</em>\n      );\n    } else {\n      return (\n        <>\n          [<em className=\"m-appliedEnchant__min\">{enchant.min}</em>-<em className=\"m-appliedEnchant__max\">{enchant.max}</em>]\n        </>\n      );\n    }\n  }\n};\n\nexport default AppliedEnchant;","import React, { FunctionComponent } from 'react';\n\nimport { ItemEnchantSlot, EnchantType } from 'types/Enchant.types';\nimport { Item } from 'types/Item.types';\n\nimport './EnchantSlot.scss';\n\ninterface Props {\n  item: Item;\n  enchantSlot: ItemEnchantSlot;\n}\n\nconst EnchantSlot: FunctionComponent<Props> = ({\n  item,\n  enchantSlot,\n}) => {\n  return (\n    <li className=\"m-enchantSlot\">\n      +<em className=\"m-enchantSlot__count\">{enchantSlot.count}</em>&nbsp;\n      {formattedTypes()}&nbsp;\n      {enchantSlot.count > 1 ? 'enchants' : 'enchant'}\n    </li>\n  );\n\n  function formattedTypes() {\n    const renderSlotType = (type: EnchantType) => (\n      <em\n        key={`${item.uuid}-slot-${type}`}\n        className=\"m-enchantSlot__type\"\n        style={{ color: `var(--color-enchant-${type.toLowerCase()})` }}\n      >\n        {type}\n      </em>\n    );\n\n    return enchantSlot\n      .types\n      .map<React.ReactNode>(renderSlotType)\n      .reduce((prev, curr) => [prev, ' or ', curr]);\n  }\n};\n\nexport default EnchantSlot;","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { map } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport { ItemSetData } from 'engine/EngineItems';\nimport { RoutePath } from 'routes';\n\nimport './Set.scss';\n\ninterface Props {\n  set: ItemSetData,\n  setCollapsed?: boolean,\n}\n\nconst ItemSet: FunctionComponent<Props> = ({\n  set,\n  setCollapsed = true,\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(setCollapsed);\n\n  return (\n    <div className=\"m-itemSet\">\n      <div\n        className=\"m-itemSet__nameContainer\"\n        onClick={() => setIsCollapsed(!isCollapsed)}\n      >\n        Set: <span className=\"m-itemSet__name\">{set.name}</span>\n        <span className={`m-itemSet__collapseIcon ${isCollapsed ? '' : 'expanded'}`}>\n          {isCollapsed ? (\n            <Icon name={IconName.ArrowRightYellow} width={6} height={12} />\n          ) : (\n            <Icon name={IconName.ArrowDownYellow} width={14} height={7} />\n          )}\n        </span>\n      </div>\n      <div className={`m-itemSet__contentContainer ${isCollapsed ? '' : 'expanded'}`}>\n        <div className=\"m-itemSet__content\">\n          <div className=\"m-itemSet__setInfo\">\n            <strong className=\"m-itemSet__setInfo-itemTypes\">\n              {set.types.join(', ')}\n            </strong>\n            <ul className=\"m-itemSet__setInfo-bonuses\">\n              {map(set.bonuses, (bonus, piecesCount) => (\n                <li\n                  key={`set-bonus-${set.uuid}-${piecesCount}`}\n                  className=\"m-itemSet__setInfo-bonus\"\n                >\n                  <em className=\"m-itemSet__setInfo-bonus-count\">{piecesCount})</em>\n                  {bonus}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <ul className=\"m-itemSet__itemsInfo\">\n            {set.items.map(item => (\n              <li\n                key={`set-items-${set.uuid}-${item.uuid}`}\n              >\n                <Link to={RoutePath.Item.replace(':uuid', item.uuid.toString())} className=\"m-itemSet__itemsInfo-item\">\n                  {item.icon && (\n                    <GameIcon type={GameIconType.Item} name={item.icon} width={18} />\n                  )}\n                  <em className=\"m-itemSet__itemsInfo-item-name\">\n                    {item.name}\n                  </em>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemSet;","import React, { Fragment, FunctionComponent, useMemo } from 'react';\n\nimport { camelCase, map } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport AppliedEnchant from 'components/molecules/Items/AppliedEnchant/AppliedEnchant';\nimport EnchantSlot from 'components/molecules/Items/EnchantSlot/EnchantSlot';\nimport useEngine from 'hooks/useEngine';\nimport { Item as ItemInterface, ItemCategory, ItemType } from 'types/Item.types';\n\nimport './DownloadableItem.scss';\n\ninterface Props {\n  item: ItemInterface,\n  setCollapsed?: boolean,\n}\n\nconst Item: FunctionComponent<Props> = ({\n  item,\n}) => {\n  const Engine = useEngine();\n  const itemEnchants = useMemo(() => Engine.Enchants.getItemEnchantsSlots(item), [item]);\n  const itemSetData = useMemo(() => Engine.Items.getSetData(item), [item]);\n  const classRestriction = item.classRestriction || 'Any Class';\n\n  return (\n    <div className=\"o-downloadableItem__container\">\n      <div className=\"o-downloadableItem\">\n        <div className=\"o-downloadableItem__header\">\n          <div className=\"o-downloadableItem__header-content\">\n            <span className=\"o-downloadableItem__icon\">\n              {item.icon && (\n                <GameIcon type={GameIconType.Item} name={item.icon} width={32} />\n              )}\n            </span>\n            <div className=\"o-downloadableItem__header-title\">\n              <h2\n                className=\"o-downloadableItem__name\"\n                style={{ color: `var(--color-item-${camelCase(item.rarity)})` }}\n              >\n                {item.name}\n              </h2>\n              <h3\n                className=\"o-downloadableItem__rarity\"\n\n              >\n                {item.rarity} {item.type}\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-downloadableItem__header-req\">\n            <span>\n              Level: {item.minLevel}\n            </span>\n            {classRestriction} Item\n          </div>\n        </div>\n        <div className=\"o-downloadableItem__content\">\n          {item.description && (\n            <div className=\"o-downloadableItem__description\">\n              {item.description}\n            </div>\n          )}\n          {itemEnchants &&(\n            <div className=\"o-downloadableItem__enchants\">\n              {renderBaseEnchants()}\n            </div>\n          )}\n          {itemSetData && (\n            <div className=\"o-downloadableItem__set\">\n              <span className=\"o-downloadableItem__set-name\">Set: {itemSetData.name}</span>\n              <div className=\"o-downloadableItem__setInfo\">\n                <strong className=\"o-downloadableItem__setInfo-itemTypes\">\n                  {itemSetData.types.join(', ')}\n                </strong>\n                <ul className=\"o-downloadableItem__setInfo-bonuses\">\n                  {map(itemSetData.bonuses, (bonus, piecesCount) => (\n                    <li\n                      key={`set-bonus-${itemSetData.uuid}-${piecesCount}`}\n                      className=\"o-downloadableItem__setInfo-bonus\"\n                    >\n                      <em className=\"o-downloadableItem__setInfo-bonus-count\">{piecesCount})</em>\n                      {bonus}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          )}\n          {itemEnchants &&\n            <div className=\"o-downloadableItem__enchants\">\n              <div className=\"o-downloadableItem__enchants__slotsContainer\">\n                {renderFixedEnchants()}\n                {renderEnchantsSlots()}\n              </div>\n            </div>\n          }\n          {item.flavor && (\n            <div className=\"o-downloadableItem__flavor\">\n              {item.flavor}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderBaseEnchants() {\n    return itemEnchants && itemEnchants.baseEnchants?.length > 0 && (\n      <ul className=\"o-downloadableItem__enchants__base\">\n        {itemEnchants.baseEnchants?.map((enchant, index) => (\n          <AppliedEnchant\n            key={`${item.uuid}-ebase-${index}`}\n            item={item}\n            enchant={enchant}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  function renderFixedEnchants() {\n    const isGem = item.category === ItemCategory.Gem;\n    // TODO: Extract to a proper dataMapping\n    const enchantForType = ['Weapon/Offhand', 'Helm/Armor/Boots', 'Amulet/Ring/Accessory'];\n\n    return itemEnchants && (\n      <ul className=\"o-downloadableItem__enchants__fixed\">\n        {itemEnchants.fixedEnchants?.map((enchant, index) => (\n          <Fragment key={`fr-${item.uuid}-fbase-${index}`}>\n            {isGem && <span className=\"o-downloadableItem__enchants__fixed-label\">{enchantForType[index]}</span>}\n            <AppliedEnchant\n              item={item}\n              key={`${item.uuid}-fbase-${index}`}\n              enchant={enchant}\n            />\n          </Fragment>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderEnchantsSlots() {\n    return itemEnchants && (\n      <ul className=\"o-downloadableItem__enchants__slots\">\n        {itemEnchants.enchantSlots?.map((slot, index) => {\n          return (!slot.categoriesRestriction || slot.categoriesRestriction.includes(item.category)) && (\n            <EnchantSlot\n              key={`${item.uuid}-eslot-${index}`}\n              item={item}\n              enchantSlot={slot}\n            />\n          );\n        })}\n        {[ItemType.Helm, ItemType.Armor, ItemType.Boots].includes(item.type) &&\n          <li className=\"o-downloadableItem__enchants__slots-replace\">\n            <em className=\"o-downloadableItem__enchants__slots-replace-chance\">25%</em> chance to replace 1 <em style={{ color: 'var(--color-enchant-major)' }}>Major</em> with 1 <em style={{ color: 'var(--color-enchant-epic)' }}>Epic</em>\n          </li>\n        }\n      </ul>\n    );\n  }\n};\n\nexport default Item;","import React, { createRef, FunctionComponent, useState, useEffect } from 'react';\nimport { Tooltip } from 'react-tippy';\n\nimport useAsDownloadableImage from 'hooks/useAsDownloadableImage';\nimport { Item } from 'types/Item.types';\n\nimport DownloadableItem from './DownloadableItem/DownloadableItem';\n\nimport './ItemDownloader.scss';\n\nconst ItemDownloader: FunctionComponent<{ item: Item }> = ({\n  item,\n}) => {\n  const elementRef = createRef<HTMLDivElement>();\n  const [renderItem, setRenderItem] = useState(false);\n  const download = useAsDownloadableImage(elementRef, { height: '100%', opacity: '1', width: 'auto' });\n\n  useEffect(() => {\n    if (renderItem) {\n      download(item.name, () => {\n        setRenderItem(false);\n      });\n\n      // If the item hasn't downloaded after 4 seconds, cancel.\n      setTimeout(() => setRenderItem(false), 4000);\n    }\n  });\n\n  return (\n    <span className=\"o-itemDownloader\" title=\"Download as an image\">\n      {renderItem ? (\n        <span className=\"o-itemDownloader__icon\">\n          <svg style={{ display: 'block' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"-5 0 50 35\" stroke=\"#dc9d63\">\n            <g fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(1 1)\" strokeWidth=\"8\">\n                <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"/>\n                <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                </path>\n              </g>\n            </g>\n          </svg>\n        </span>\n      ) : (\n        <span className=\"o-itemDownloader__icon\" onClick={() => setRenderItem(true)}>\n          <Tooltip\n            title=\"Download item as an image\"\n            position=\"right\"\n            arrow={true}\n            distance={0}\n            offset={-10}\n            size=\"small\"\n          >\n            <svg style={{ display: 'block' }} xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\" width=\"18\" height=\"18\">\n              <g>\n                <path fill=\"#DECFB0\" d=\"M412.907,214.08C398.4,140.693,333.653,85.333,256,85.333c-61.653,0-115.093,34.987-141.867,86.08    C50.027,178.347,0,232.64,0,298.667c0,70.72,57.28,128,128,128h277.333C464.213,426.667,512,378.88,512,320    C512,263.68,468.16,218.027,412.907,214.08z M256,384L149.333,277.333h64V192h85.333v85.333h64L256,384z\"/>\n              </g>\n            </svg>\n          </Tooltip>\n        </span>\n      )}\n      {renderItem && (\n        <div className=\"o-itemDownloader__item\" ref={elementRef} style={{ height: '0', opacity: '0', width: '0' }}>\n          <DownloadableItem item={item} />\n        </div>\n      )}\n    </span>\n  );\n};\n\nexport default ItemDownloader;","import { useState, useEffect, RefObject, CSSProperties } from 'react';\n\nimport { saveAs } from 'file-saver';\nimport { toBlob } from 'html-to-image';\n\nexport default function useAsDownloadableImage(node: RefObject<HTMLElement>, style: CSSProperties): (name: string, callback?: () => void) => void {\n  const [blob, setBlob] = useState<Blob>();\n\n  useEffect(() => {\n    // Make sure the node.current render is finished\n    setTimeout(() => {\n      if (node.current) {\n        // @ts-ignore\n        toBlob(node.current, { pixelRatio: 1, style })\n          .then((blob) => {\n            if (blob) {\n              setBlob(blob);\n            }\n          });\n      }\n    }, 500);\n  }, [node, style]);\n\n  return (name: string, callback?: () => void) => {\n    if (blob) {\n      saveAs(blob, `${name}.png`);\n      callback && callback();\n    }\n  };\n}\n","import React, { Fragment, FunctionComponent, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { camelCase } from 'lodash';\n\nimport Badge from 'components/atoms/Badge/Badge';\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport AppliedEnchant from 'components/molecules/Items/AppliedEnchant/AppliedEnchant';\nimport EnchantSlot from 'components/molecules/Items/EnchantSlot/EnchantSlot';\nimport ItemSet from 'components/molecules/Items/Set/Set';\n// import DownloadableItem from 'components/organisms/ItemDownloader/DownloadableItem/DownloadableItem';\nimport ItemDownloader from 'components/organisms/ItemDownloader/ItemDownloader';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\nimport { Item as ItemInterface, ItemCategory, ItemType } from 'types/Item.types';\n\nimport './Item.scss';\n\ninterface Props {\n  item: ItemInterface,\n  setCollapsed?: boolean,\n}\n\nconst Item: FunctionComponent<Props> = ({\n  item,\n  setCollapsed,\n}) => {\n  const Engine = useEngine();\n  const itemEnchants = useMemo(() => Engine.Enchants.getItemEnchantsSlots(item), [item]);\n  const itemSetData = useMemo(() => Engine.Items.getSetData(item), [item]);\n  const classRestriction = item.classRestriction || 'Any Class';\n  // return <DownloadableItem item={item} />;\n\n  return (\n    <div className=\"o-item__container\">\n      <div className=\"o-item\">\n        <div className=\"o-item__header\">\n          <div className=\"o-item__header-content\">\n            <span className=\"o-item__icon\">\n              {item.icon && (\n                <GameIcon type={GameIconType.Item} name={item.icon} width={32} />\n              )}\n            </span>\n            <div className=\"o-item__header-title\">\n              <h2 className=\"o-item__name\">\n                <Link to={RoutePath.Item.replace(':uuid', item.uuid.toString())} className=\"o-item__header-title-link\">\n                  {item.name}\n                </Link>\n                <ItemDownloader item={item} />\n              </h2>\n              <h3\n                className=\"o-item__rarity\"\n                style={{ color: `var(--color-item-${camelCase(item.rarity)})` }}\n              >\n                {item.rarity} {item.type}\n              </h3>\n            </div>\n          </div>\n          <div className=\"o-item__header-req\">\n            <Badge\n              label={classRestriction}\n              color={`var(--color-class-${camelCase(classRestriction)})`}\n            />\n            <span>\n              LVL. {item.minLevel}\n            </span>\n          </div>\n        </div>\n        <div className=\"o-item__content\">\n          {item.description && (\n            <div className=\"o-item__description\">\n              {item.description}\n            </div>\n          )}\n          {itemEnchants &&\n            <div className=\"o-item__enchants\">\n              {renderBaseEnchants()}\n              <div className=\"o-item__enchants__slotsContainer\">\n                {renderFixedEnchants()}\n                {renderEnchantsSlots()}\n              </div>\n            </div>\n          }\n          {item.flavor && (\n            <div className=\"o-item__flavor\">\n              {item.flavor}\n            </div>\n          )}\n        </div>\n        {itemSetData && (\n          <div className=\"o-item__set\">\n            <ItemSet set={itemSetData} setCollapsed={setCollapsed} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  function renderBaseEnchants() {\n    return itemEnchants && itemEnchants.baseEnchants?.length > 0 && (\n      <ul className=\"o-item__enchants__base\">\n        {itemEnchants.baseEnchants?.map((enchant, index) => (\n          <AppliedEnchant\n            key={`${item.uuid}-ebase-${index}`}\n            item={item}\n            enchant={enchant}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  function renderFixedEnchants() {\n    const isGem = item.category === ItemCategory.Gem;\n    // TODO: Extract to a proper dataMapping\n    const enchantForType = ['Weapon/Offhand', 'Helm/Armor/Boots', 'Amulet/Ring/Accessory'];\n\n    return itemEnchants && (\n      <ul className=\"o-item__enchants__fixed\">\n        {itemEnchants.fixedEnchants?.map((enchant, index) => (\n          <Fragment key={`fr-${item.uuid}-fbase-${index}`}>\n            {isGem && <span className=\"o-item__enchants__fixed-label\">{enchantForType[index]}</span>}\n            <AppliedEnchant\n              item={item}\n              key={`${item.uuid}-fbase-${index}`}\n              enchant={enchant}\n            />\n          </Fragment>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderEnchantsSlots() {\n    return itemEnchants && (\n      <ul className=\"o-item__enchants__slots\">\n        {itemEnchants.enchantSlots?.map((slot, index) => {\n          return (!slot.categoriesRestriction || slot.categoriesRestriction.includes(item.category)) && (\n            <EnchantSlot\n              key={`${item.uuid}-eslot-${index}`}\n              item={item}\n              enchantSlot={slot}\n            />\n          );\n        })}\n        {[ItemType.Helm, ItemType.Armor, ItemType.Boots].includes(item.type) &&\n          <li className=\"o-item__enchants__slots-replace\">\n            <em className=\"o-item__enchants__slots-replace-chance\">25%</em> chance to replace 1 <em style={{ color: 'var(--color-enchant-major)' }}>Major</em> with 1 <em style={{ color: 'var(--color-enchant-epic)' }}>Epic</em>\n          </li>\n        }\n      </ul>\n    );\n  }\n};\n\nexport default Item;","import React, { FunctionComponent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport EnchantsPool from 'components/organisms/Items/EnchantsPool/EnchantsPool';\nimport Item from 'components/organisms/Items/Item/Item';\nimport useEngine from 'hooks/useEngine';\nimport useSeo from 'hooks/useSeo';\nimport { RoutePath } from 'routes';\n\nimport './ItemTemplate.scss';\n\nconst ItemTemplate: FunctionComponent = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const Engine = useEngine();\n  const item = Engine.Items.find(parseInt(uuid));\n  const Seo = useSeo({\n    title: item ? item.name : 'Item not found',\n    description: item ? `Find all the information about ${item.name}` : 'Item not found',\n  });\n\n  return (\n    <>\n      <Seo />\n      <div className=\"t-item\">\n        {item ? (\n          <>\n            <div className=\"t-item__header\">\n              <Link to={RoutePath.Items}>\n                <Icon\n                  className=\"t-item__header-icon\"\n                  width={7}\n                  height={14}\n                  name={IconName.ArrowRightWhite}\n                /> Back to items\n              </Link>\n            </div>\n            <div className=\"t-item__container\">\n              <Item item={item} setCollapsed={false} />\n              <EnchantsPool itemType={item.type} />\n            </div>\n          </>\n        ) : (\n          <div className=\"t-item__notFound\">\n            Item Not Found\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ItemTemplate;","import React, { FunctionComponent } from 'react';\n\nimport ItemTemplate from 'components/templates/Item/ItemTemplate';\n\nexport const ItemPage: FunctionComponent = () => {\n  return (\n    <ItemTemplate />\n  );\n};\n\nexport default ItemPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport { map } from 'lodash';\nimport Drawer from 'rc-drawer';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useEngine from 'hooks/useEngine';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { ItemsFilters, FiltersType } from 'types/Filters.types';\nimport { ItemCategory, ItemType } from 'types/Item.types';\n\nimport './Categories.scss';\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n\n  const { Items: { typesByCategories, defaultCategory, defaultType } } = Engine;\n  const baseCategory = (filters.category ?? defaultCategory) as ItemCategory;\n  const baseType = (filters.type ?? defaultType) as ItemType;\n\n  const [selectedCategory, setSelectedCategory] = useState<ItemCategory>(baseCategory);\n  const [selectedType, setSelectedType] = useState<ItemType>(baseType);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-itemCategories__menuMobile category-${selectedCategory.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderCategoryMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderCategoryMenu();\n  }\n\n  function renderItemTypes(category: ItemCategory, itemTypes: ItemType[]) {\n    return (\n      <ul className=\"o-itemCategories__itemTypes\">\n        {itemTypes.map(itemType => (\n          <li\n            key={`item-type-${itemType}`}\n            className={`o-itemCategories__itemType ${selectedType === itemType ? 'selected' : ''}`}\n          >\n            <span\n              className=\"o-itemCategories__itemTypeName\"\n              onClick={() => onItemTypeSelect(category, itemType)}\n            >\n              {itemType === ItemType.Rune ? 'Rune' : itemType}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderCategoryMenu() {\n    return (\n      <ul className=\"o-itemCategories\">\n        {map(typesByCategories, ((itemTypes, category: ItemCategory) => {\n          const isSelected = selectedCategory === category;\n          return (\n            <li\n              key={`item-category-${category}`}\n              className={`o-itemCategories__category ${isSelected ? 'selected' : ''}`}\n            >\n              <span\n                className=\"o-itemCategories__categoryName\"\n                onClick={() => onCategorySelect(category)}\n              >\n                <Icon\n                  className=\"o-itemCategories__categoryName-arrow\"\n                  width={isSelected ? 14 : 6}\n                  height={isSelected ? 7 : 12}\n                  name={isSelected ? IconName.ArrowDownBlue : IconName.ArrowRightBlue}\n                />\n                {category}\n                <GameIcon\n                  className=\"o-itemCategories__categoryName-icon\"\n                  type={GameIconType.ItemCategory}\n                  name={category}\n                  width={28}\n                />\n              </span>\n              {renderItemTypes(category, itemTypes)}\n            </li>\n          );\n        }))}\n      </ul>\n    );\n  }\n\n  function onCategorySelect(category: ItemCategory) {\n    const defaultItemType = typesByCategories[category][0];\n\n    setSelectedCategory(category);\n    setSelectedType(defaultItemType);\n    setFilters({ category, type: defaultItemType });\n  }\n\n  function onItemTypeSelect(category: ItemCategory, itemType: ItemType) {\n    setSelectedType(itemType);\n    setFilters({ category, type: itemType });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default Categories;","import React, { FunctionComponent, useState } from 'react';\n\nimport './CheckboxSelect.scss';\n\nexport interface CheckboxSelectProps {\n  className?: string;\n  selected: boolean;\n  label: string;\n  value: string;\n  color: string;\n  onChange: (selected: boolean) => void;\n}\n\nconst CheckboxSelect: FunctionComponent<CheckboxSelectProps> = ({\n  className,\n  selected,\n  label,\n  value,\n  color,\n  onChange,\n}) => {\n  const [isSelected, setIsSelected] = useState(selected);\n  const optionStyles = isSelected ? {\n    color: color,\n    textShadow: `0px -2px 16px ${color}`,\n  } : {};\n  const borderStyles = isSelected ? {\n    backgroundColor: color,\n    boxShadow: `0 0 12px ${color}, 0 1px 6px ${color}`,\n  } : {};\n\n  return (\n    <div className={`a-checkboxSelect ${className ? className : ''}`}>\n      <div\n        key={`checkboxSelect-label-${value}`}\n        className={`a-checkboxSelect__label ${isSelected ? 'selected' : ''}`}\n        onClick={onClickOption}\n        style={optionStyles}\n      >\n        {label}\n        <span className=\"a-checkboxSelect-borderBottom\" style={borderStyles}></span>\n      </div>\n    </div>\n  );\n\n  function onClickOption() {\n    setIsSelected(!isSelected);\n    onChange(!isSelected);\n  }\n};\n\nexport default CheckboxSelect;","import React, { FunctionComponent, useState } from 'react';\n\nimport { xor } from 'lodash';\n\nimport './Multiselect.scss';\n\nexport interface MultiselectOption {\n  label: string;\n  value: string;\n  color: string;\n}\n\nexport interface MultiselectProps {\n  className?: string;\n  defaultValues: string[];\n  options: MultiselectOption[];\n  onChange: (values: string[]) => void;\n}\n\nconst Multiselect: FunctionComponent<MultiselectProps> = ({\n  className,\n  defaultValues,\n  options,\n  onChange,\n}) => {\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(defaultValues);\n\n  return (\n    <div className={`a-multiselect ${className ? className : ''}`}>\n      {options.map((option) => {\n        const isSelected = selectedOptions.includes(option.value);\n        const optionStyles = isSelected ? {\n          color: option.color,\n          textShadow: `0px -2px 16px ${option.color}`,\n        } : {};\n        const borderStyles = isSelected ? {\n          backgroundColor: option.color,\n          boxShadow: `0 0 12px ${option.color}, 0 1px 6px ${option.color}`,\n        } : {};\n\n        return (\n          <div\n            key={`multiselect-option-${option.value}`}\n            className={`a-multiselect__option ${isSelected ? 'selected' : ''}`}\n            onClick={() => onClickOption(option)}\n            style={optionStyles}\n          >\n            {option.label}\n            <span className=\"a-multiselect__option-borderBottom\" style={borderStyles}></span>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  function onClickOption(option: MultiselectOption) {\n    const newSelectedOptions = xor(selectedOptions, [option.value]);\n    setSelectedOptions(newSelectedOptions);\n    onChange(newSelectedOptions);\n  }\n};\n\nexport default Multiselect;","import React, { FunctionComponent } from 'react';\n\nimport { camelCase } from 'lodash';\n\nimport CheckboxSelect from 'components/atoms/CheckboxSelect/CheckboxSelect';\nimport Dropdown from 'components/atoms/Dropdown/Dropdown';\nimport Multiselect, { MultiselectOption } from 'components/atoms/Multiselect/Multiselect';\nimport Search from 'components/atoms/Search/Search';\nimport { DEFAULT_RARITIES_FILTERS } from 'engine/EngineItems';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport useFilters from 'hooks/useFilters';\nimport { CharacterClass } from 'types/Character.types';\nimport { ItemsFilters, FiltersType } from 'types/Filters.types';\nimport { ItemRarity } from 'types/Item.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n\n  const raritiesOptions: MultiselectOption[] = allEnumValues(ItemRarity).map(rarity => ({\n    label: rarity,\n    value: rarity,\n    color: `var(--color-item-${camelCase(rarity)})`,\n  }));\n\n  const classOptions = allEnumValues(CharacterClass).map(charClass => ({\n    label: charClass === CharacterClass.All ? 'All classes' : charClass,\n    value: charClass,\n  }));\n\n  return (\n    <div className=\"o-itemFilters\">\n      <Search\n        className=\"o-itemFilters__search\"\n        placeholder=\"Search anything: Fire, Movement, Tornado...\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n      <Multiselect\n        className=\"o-itemFilters__raritySelect\"\n        defaultValues={filters.rarities ? filters.rarities : DEFAULT_RARITIES_FILTERS}\n        options={raritiesOptions}\n        onChange={onRaritiesSelect}\n      />\n      <CheckboxSelect\n        className=\"o-itemFilters__setCheckbox\"\n        selected={filters.onlySet || false}\n        label=\"Only Sets\"\n        value=\"Set\"\n        color={`var(--color-item-set)`}\n        onChange={onSetSelect}\n      />\n      <Dropdown\n        className=\"o-itemFilters__classDropdown\"\n        label=\"\"\n        defaultValue={filters.characterClass || CharacterClass.All}\n        options={classOptions}\n        onChange={onClassSelect}\n      />\n    </div>\n  );\n\n  function onRaritiesSelect(rarities: string[]) {\n    setFilters({ rarities });\n  }\n\n  function onSetSelect(isSelected: boolean) {\n    setFilters({ onlySet: isSelected });\n  }\n\n  function onClassSelect(characterClass: string) {\n    setFilters({ characterClass });\n  }\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React, { FunctionComponent } from 'react';\n\ninterface Props {\n  currentOrder: 'asc' | 'desc' | null;\n  label: string;\n  onChange: () => void;\n}\n\nimport './SortSelect.scss';\n\nconst SortSelect: FunctionComponent<Props> = ({\n  currentOrder,\n  label,\n  onChange,\n}) => {\n  return (\n    <span className=\"a-sortSelect\" onClick={onChange}>\n      {label}\n      <span className=\"a-sortSelect__icon\">\n        <span className={`a-sortSelect__icon-up ${currentOrder === 'asc' ? 'selected' : ''}`}></span>\n        <span className={`a-sortSelect__icon-down ${currentOrder === 'desc' ? 'selected' : ''}`}></span>\n      </span>\n    </span>\n  );\n};\n\nexport default SortSelect;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport SortSelect from 'components/atoms/SortSelect/SortSelect';\nimport useFilters from 'hooks/useFilters';\nimport { ItemsFilters, FiltersType, SortOrder } from 'types/Filters.types';\n\nimport './Header.scss';\n\nconst Header: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<ItemsFilters>(FiltersType.Items);\n  let nameSortOrder: 'asc' | 'desc' | null = null;\n  let levelSortOrder: 'asc' | 'desc' | null = null;\n\n  if (filters.orderBy && [SortOrder.NameAsc, SortOrder.NameDesc].includes(filters.orderBy)) {\n    nameSortOrder = filters.orderBy === SortOrder.NameAsc ? 'asc' : 'desc';\n  }\n\n  if (filters.orderBy && [SortOrder.LevelAsc, SortOrder.LevelDesc].includes(filters.orderBy)) {\n    levelSortOrder = filters.orderBy === SortOrder.LevelAsc ? 'asc' : 'desc';\n  }\n\n  return (\n    <div className=\"m-header\">\n      <div className=\"m-header__items\">\n        <h3 className=\"m-header__thead\">\n          <SortSelect\n            label=\"Item\"\n            currentOrder={nameSortOrder}\n            onChange={() => orderBy(filters.orderBy === SortOrder.NameAsc ? SortOrder.NameDesc : SortOrder.NameAsc)}\n          />\n        </h3>\n        <h3  className=\"m-header__thead req\">\n          <SortSelect\n            label=\"Req.\"\n            currentOrder={levelSortOrder}\n            onChange={() => orderBy(filters.orderBy === SortOrder.LevelAsc ? SortOrder.LevelDesc : SortOrder.LevelAsc)}\n          />\n        </h3>\n      </div>\n      <div className=\"m-header__enchants\">\n        <h3 className=\"m-header__thead\">Possible Enchants</h3>\n      </div>\n    </div>\n  );\n\n  function orderBy(orderBy: SortOrder) {\n    setFilters({ orderBy });\n  }\n};\n\nexport default observer(Header);","import React, { FunctionComponent } from 'react';\n\nimport Header from 'components/molecules/Items/Header/Header';\nimport EnchantsPool from 'components/organisms/Items/EnchantsPool/EnchantsPool';\nimport Item from 'components/organisms/Items/Item/Item';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\nimport { Item as ItemInterface } from 'types/Item.types';\n\nimport './List.scss';\n\ninterface Props {\n  items: ItemInterface[];\n}\n\nconst List: FunctionComponent<Props> = ({ items }) => {\n  const currentType = items[0]?.type;\n  const { paginatedData, InfiniteScroll } =  useInfiniteScroll<ItemInterface>(items, 10);\n\n  return (\n    <div className=\"o-itemsList\">\n      {items.length > 0 ? (\n        <>\n          <Header />\n          <div className=\"o-itemsList__container\">\n            <div className=\"o-itemsList__items\">\n              <InfiniteScroll>\n                {paginatedData.map(item => (\n                  <Item key={`item-${item.uuid}`} item={item} />\n                ))}\n              </InfiniteScroll>\n            </div>\n            <EnchantsPool itemType={currentType} />\n          </div>\n        </>\n      ) : (\n        <div className=\"o-itemsList__noItem\">\n          No item was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Items/Categories/Categories';\nimport Filters from 'components/organisms/Items/Filters/Filters';\nimport List from 'components/organisms/Items/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nimport './ItemsTemplate.scss';\n\nconst ItemsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n\n  const items = getFilteredItems();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-items__wrapper\">\n        <Categories />\n        <div className=\"t-items__list\">\n          <List items={items} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredItems() {\n    return Engine.Items.all({\n      search: filtersStore.items.search,\n      category: filtersStore.items.category,\n      type: filtersStore.items.type,\n      characterClass: filtersStore.items.characterClass,\n      rarities: filtersStore.items.rarities,\n      orderBy: filtersStore.items.orderBy,\n      onlySet: filtersStore.items.onlySet,\n    });\n  }\n};\n\nexport default observer(ItemsTemplate);","import React, { FunctionComponent } from 'react';\n\nimport ItemsTemplate from 'components/templates/Items/ItemsTemplate';\nimport useSeo from 'hooks/useSeo';\n\nexport const ItemsPage: FunctionComponent = () => {\n  const Seo = useSeo({\n    title: 'Items database',\n    description: 'Find all the items you need to craft your dream build.',\n  });\n\n  return (\n    <>\n      <Seo />\n      <ItemsTemplate />\n    </>\n  );\n};\n\nexport default ItemsPage;","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport replaceWithJSX from 'react-string-replace';\nimport { Tooltip } from 'react-tippy';\n\nimport { camelCase, isString, compact } from 'lodash';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport useEngine from 'hooks/useEngine';\nimport { RoutePath } from 'routes';\nimport { CharacterClass } from 'types/Character.types';\nimport { Skill as SkillInterface, SkillTree, SkillFamily, SkillType } from 'types/Skill.types';\n\nimport './Skill.scss';\n\nconst SKILLS_TEMPLATE_REGEX = /\\|((?:\\w|'|\\s|\\|?)+)¥/g;\nconst DAMAGE_TYPES_TEMPLATE_REGEX = /(?:XDAM\\s?)?_\\w{3}_(\\w+)¥/g;\nconst VALUES_TEMPLATE_REGEX = /(EFFECT|DURATION|DAMAGE|VALUE2|VALUE|PROC|RANGE2|RANGE)/g;\nconst GENERIC_REPLACE_REGEX = /(?:\\||~)((?:\\w|\\.|'|-|%|\\s)+)¥/g;\nconst SINGLE_REPLACE_REGEX = /\\|(\\w+)/g;\n\n// TODO: Add this in the skills parser, automatically\nconst DEFAULT_MASTERY_VALUE = 10;\nconst DEFAULT_VALUE2 = 3;\n\nconst SKILL_FAMILIES = allEnumValues(SkillFamily);\n\n// TODO: Move outside\ninterface SkillLinkProps {\n  uuid: number;\n  content: string | ReactNode;\n  charClass?: CharacterClass;\n  className?: string;\n  key?: string;\n}\ninterface Props {\n  skill: SkillInterface,\n}\n\nconst Skill: FunctionComponent<Props> = ({\n  skill,\n}) => {\n  // Mastery skills can share the same UUID\n  const safeUuid = `${skill.uuid}-${skill.class.toLowerCase()}`;\n  const Engine = useEngine();\n\n  return (\n    <div className=\"o-skill\">\n      <div className=\"o-skill__header\">\n        <div className=\"o-skill__header-content\">\n          <span className=\"o-skill__icon\">\n            {skill.icon && (\n              <GameIcon\n                type={skill.tree === SkillTree.Mastery ? GameIconType.SkillMastery : GameIconType.SkillSpell}\n                name={skill.icon}\n                width={32}\n              />\n            )}\n          </span>\n          <div className=\"o-skill__header-title\">\n            <h2 className=\"o-skill__header-name\">\n              {renderSkillLink({\n                uuid: skill.uuid,\n                content: skill.name,\n                charClass: skill.class,\n                className: 'o-skill__header-title-link',\n              })}\n            </h2>\n            <h3 className=\"o-skill__header-category\">\n              <strong style={{ color: `var(--color-damage-type-${camelCase(skill.element)})` }}>\n                {skill.element}\n              </strong>\n              &nbsp;-&nbsp;\n              <span className=\"o-skill__header-tree\">\n                {skill.type ? skill.type : skill.tree}\n              </span>\n              {skill.family && (\n                <>\n                  &nbsp;-&nbsp;\n                  <span\n                    className=\"o-skill__header-family\"\n                    style={{ color: `var(--color-damage-type-${camelCase(skill.element)})` }}\n                  >\n                    {skill.family}\n                  </span>\n                </>\n              )}\n            </h3>\n          </div>\n        </div>\n        <div className=\"o-skill__header-meta\">\n          <span className=\"o-skill__header-meta-category\">\n            <span className=\"o-skill__header-meta-class\">\n              <Tooltip\n                title={skill.class}\n                position=\"bottom\"\n                arrow={true}\n                distance={5}\n                offset={0}\n                size=\"small\"\n              >\n                <GameIcon\n                  type={GameIconType.ClassProfile}\n                  name={skill.class.toLowerCase()}\n                  height={32}\n                />\n              </Tooltip>\n            </span>\n            <span className=\"o-skill__header-meta-tree\">\n              <Tooltip\n                title={skill.tree}\n                position=\"bottom\"\n                arrow={true}\n                distance={10}\n                offset={0}\n                size=\"small\"\n              >\n                <GameIcon\n                  type={GameIconType.SkillTree}\n                  name={skill.tree.toLowerCase().replace(/\\s/g, '')}\n                  height={32}\n                />\n              </Tooltip>\n            </span>\n          </span>\n        </div>\n      </div>\n      <div className=\"o-skill__content\">\n        <div className=\"o-skill__content-main\">\n          <div className=\"o-skill__description\">\n            {renderDescription()}\n          </div>\n        </div>\n        <div className=\"o-skill__content-sub\">\n          <ul className=\"o-skill__content-list\">\n            {skill.skillRequirement.length > 0 && (\n              <li>\n                <span className=\"o-skill__content-list-title\">\n                  Parent skill\n                </span>\n                <span className=\"o-skill__content-list-value requirements\">\n                  {renderSkillsRequirement()}\n                </span>\n              </li>\n            )}\n            <li>\n              <span className=\"o-skill__content-list-title\">\n                Max rank\n              </span>\n              <span className=\"o-skill__content-list-value maxRank\">\n                {skill.maxRank}\n              </span>\n            </li>\n            {skill.cooldown && (\n              <li>\n                <span className=\"o-skill__content-list-title\">\n                Cooldown\n                </span>\n                <span className=\"o-skill__content-list-value cooldown\">\n                  {skill.cooldown}\n                </span>\n              </li>\n            )}\n            {skill.cost100 && (\n              <li>\n                <span className=\"o-skill__content-list-title\">\n                Mana cost\n                </span>\n                <span className=\"o-skill__content-list-value cost\">\n                  {skill.cost100}\n                </span>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n\n  // TODO: SkillLink component, reusable everywhere\n  function renderSkillLink({ uuid, content, charClass, className, key }: SkillLinkProps) {\n    return (\n      <Link\n        to={{\n          pathname: RoutePath.Skill.replace(':uuid', uuid.toString()),\n          search: charClass ? `?skillCharacterClass=${charClass}` : '',\n        }}\n        className={className}\n        key={key}\n      >\n        {content}\n      </Link>\n    );\n  }\n\n  function renderSkillsRequirement() {\n    return compact(\n      skill.skillRequirement.map<React.ReactNode>((skillId) => {\n        const skillReq = Engine.Skills.find(skillId, { class: skill.class });\n        return skillReq ? (\n          <span\n            className=\"o-skill__parentSkill\"\n            key={`req-skills-${safeUuid}-${skillId}`}\n          >\n            <Tooltip\n              title={skillReq.name}\n              position=\"bottom\"\n              arrow={true}\n              distance={10}\n              offset={0}\n              size=\"small\"\n            >\n              {renderSkillLink({\n                uuid: skillReq.uuid,\n                charClass: skillReq.class,\n                content: (\n                  <GameIcon\n                    type={skillReq.tree === SkillTree.Mastery ? GameIconType.SkillMastery : GameIconType.SkillSpell}\n                    name={skillReq.icon || 'default'}\n                    width={24}\n                  />\n                ),\n              })}\n\n            </Tooltip>\n          </span>\n        ) : null;\n      }) // TODO: Create \"join\" helper and replace all those occurences\n    ).reduce((prev, curr) => [prev, ' or ', curr]);\n  }\n\n  // TODO: Refactor in useTemplateResolver (skill, amount, effect, etc...) that can be used elsewhere\n  function renderDescription() {\n    let finalNodes = null;\n    let replacementCounter = 0; // Fuck react unique keys\n\n    finalNodes = replaceWithJSX(skill.description, SKILLS_TEMPLATE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n      const skillName = match.replace(/\\|/g, '');\n      const skillId = Engine.Skills.findByName(skillName)?.uuid;\n\n      if (skillId) {\n        return (\n          <Link\n            to={RoutePath.Skill.replace(':uuid', skillId.toString())}\n            key={`tpl-${safeUuid}-skill-${skillId}-${i}-${offset}`}\n            className=\"o-skill__description-skill-spell\"\n          >\n            {skillName}\n          </Link>\n        );\n      // It's a skill family\n      } else if (SKILL_FAMILIES.includes(skillName as SkillFamily)) {\n        return (\n          // TODO: In search add `skillsTree=Any&characterClass=CURRENT`\n          <Link\n            to={{ pathname: RoutePath.Skills, search: `?skillsFamily=${skillName}` }}\n            key={`tpl-${safeUuid}-skill-${skillId}-${i}-${offset}`}\n            className=\"o-skill__description-skill-spell family\"\n          >\n            {skillName}\n          </Link>\n        );\n      // @ts-ignore\n      } else if (SkillType[skillName]) {\n        return (\n          // TODO: In search add `skillsTree=Any&characterClass=CURRENT`\n          <Link\n            to={{ pathname: RoutePath.Skills, search: `?skillsTypes=${skillName}` }}\n            key={`tpl-${safeUuid}-skill-${skillId}-${i}-${offset}`}\n            className=\"o-skill__description-skill-spell type\"\n          >\n            {skillName}\n          </Link>\n        );\n      } else {\n        return (\n          <em\n            key={`tpl-${safeUuid}-skill-${skillId}-${i}-${offset}`}\n            className=\"o-skill__description-skill-spell unknown\"\n          >\n            {skillName}\n          </em>\n        );\n      }\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, DAMAGE_TYPES_TEMPLATE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n      const damageTypeId = match.toLowerCase();\n\n      return (\n        <span\n          key={`tpl-skill-${safeUuid}-dt-${damageTypeId}-${i}-${offset}-${replacementCounter}`}\n          style={{ color: `var(--color-damage-type-${damageTypeId})` }}\n          className=\"o-skill__description-skill-damageType\"\n        >\n          {match}\n        </span>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, VALUES_TEMPLATE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n      const valueType = match.toLowerCase();\n      const key = `tpl-skill-${safeUuid}-vals-${valueType}-${i}-${offset}-${replacementCounter}`;\n\n      // @ts-ignore\n      const values: Array<string | number> = skill[valueType] || [];\n\n      // VALUE2 seems to be hardcoded\n      if (valueType === 'value2' && values.length === 0) {\n        values.push(DEFAULT_VALUE2);\n      } else if (values.length === 0) {\n        // Some masteries don't come with values even tho they should, so we use the DEFAULT_MASTERY_VALUE\n        values.push(DEFAULT_MASTERY_VALUE);\n      }\n\n      return (\n        <span\n          key={key}\n          className=\"o-skill__description-skill-values\"\n        >\n          {values.length > 6 ? renderRange(values) : renderValues(values, key)}\n        </span>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, '|Use:¥', (match, i, offset) => {\n      replacementCounter++;\n\n      return (\n        <strong\n          key={`tpl-skill-${safeUuid}-use-${i}-${offset}-${replacementCounter}`}\n          className=\"o-skill__description-skill-onUse\"\n        >\n          <br/>Use:\n        </strong>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, GENERIC_REPLACE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n\n      return (\n        <strong\n          key={`tpl-skill-${safeUuid}-simpleValue-${i}-${offset}-${replacementCounter}`}\n          className=\"o-skill__description-skill-simpleValue\"\n        >\n          {match}\n        </strong>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, SINGLE_REPLACE_REGEX, (match, i, offset) => {\n      replacementCounter++;\n\n      // TODO: Same color as spell unknown, spell unknown should be a different color than links\n      return (\n        <em\n          key={`tpl-skill-${safeUuid}-singleValue-${i}-${offset}-${replacementCounter}`}\n          className=\"o-skill__description-skill-singleValue\"\n        >\n          {match}\n        </em>\n      );\n    });\n\n    finalNodes = replaceWithJSX(finalNodes, 'REQUIRED', (match, i, offset) => {\n      replacementCounter++;\n\n      return (\n        <strong\n          key={`tpl-skill-${safeUuid}-required-${i}-${offset}-${replacementCounter}`}\n          className=\"o-skill__description-skill-required\"\n        >\n          The previously selected skill\n        </strong>\n      );\n    });\n\n    return finalNodes;\n  }\n\n  function renderValues(values: Array<string | number>, key: string) {\n    const valueNodes = values.map<React.ReactNode>((value, index) => {\n      const val = isString(value) ? parseInt(value) : value;\n      return (\n        <em key={`${key}-${value}-${index}`} className=\"o-skill__description-skill-value\">\n          {val}\n        </em>\n      );\n    });\n\n    if (valueNodes.length === 1) {\n      return valueNodes;\n    } else {\n      return (\n        <>\n          [\n          {valueNodes.reduce((prev, curr) => [prev, ' / ', curr])}\n          ]\n        </>\n      );\n    }\n\n  }\n\n  function renderRange(values: Array<string | number>) {\n    const min = isString(values[0]) ? parseInt(values[0]) : values[0];\n    let max = values[values.length - 1];\n    max = isString(max) ? parseInt(max) : max;\n\n    if (min === max) {\n      return (\n        <em className=\"o-skill__description-skill-valueRange-max\">{max}</em>\n      );\n    } else {\n      return (\n        <>\n          [\n          <em className=\"o-skill__description-skill-valueRange-min\">{min}</em>\n          -\n          <em className=\"o-skill__description-skill-valueRange-max\">{max}</em>\n          ]\n        </>\n      );\n    }\n  }\n};\n\nexport default Skill;","import React, { FunctionComponent } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { isEmpty } from 'lodash';\nimport qs from 'query-string';\n\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport Skill from 'components/organisms/Skills/Skill/Skill';\nimport useEngine from 'hooks/useEngine';\nimport useSeo from 'hooks/useSeo';\nimport { RoutePath } from 'routes';\nimport { CharacterClass } from 'types/Character.types';\n\nimport './SkillTemplate.scss';\n\nconst SkillTemplate: FunctionComponent = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const location = useLocation();\n  const queryParams = qs.parse(location.search);\n  const findParams = !isEmpty(queryParams) ? { class: queryParams.skillCharacterClass as CharacterClass } : undefined;\n\n  const Engine = useEngine();\n  const skill = Engine.Skills.find(parseInt(uuid), findParams);\n  const Seo = useSeo({\n    title: skill ? skill.name : 'Skill not found',\n    description: skill ? `Find all the information about ${skill.name}` : 'Skill not found',\n  });\n\n  return (\n    <>\n      <Seo />\n      <div className=\"t-skill\">\n        {skill ? (\n          <>\n            <div className=\"t-skill__header\">\n              <Link to={RoutePath.Skills}>\n                <Icon\n                  className=\"t-skill__header-icon\"\n                  width={7}\n                  height={14}\n                  name={IconName.ArrowRightWhite}\n                /> Back to skills\n              </Link>\n            </div>\n            <div className=\"t-skill__container\">\n              <Skill skill={skill} />\n            </div>\n          </>\n        ) : (\n          <div className=\"t-skill__notFound\">\n            Skill Not Found\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SkillTemplate;","import React, { FunctionComponent } from 'react';\n\nimport SkillTemplate from 'components/templates/Skill/SkillTemplate';\n\nexport const SkillPage: FunctionComponent = () => {\n  return (\n    <SkillTemplate />\n  );\n};\n\nexport default SkillPage;","import React, { FunctionComponent, useState } from 'react';\n\nimport { map } from 'lodash';\nimport Drawer from 'rc-drawer';\n\nimport GameIcon, { GameIconType } from 'components/atoms/GameIcon/GameIcon';\nimport Icon, { IconName } from 'components/atoms/Icon/Icon';\nimport useEngine from 'hooks/useEngine';\nimport useFilters from 'hooks/useFilters';\nimport useResponsive from 'hooks/useResponsive';\nimport { CharacterClass } from 'types/Character.types';\nimport { SkillsFilters, FiltersType } from 'types/Filters.types';\nimport { SkillTree } from 'types/Skill.types';\n\nimport './Categories.scss';\n\n// TODO: Refacto in a sidebar component that can be used for skills, enchants and items\nconst Categories: FunctionComponent = () => {\n  const { isUpToTablet } = useResponsive();\n  const Engine = useEngine();\n  const [filters, setFilters] = useFilters<SkillsFilters>(FiltersType.Skills);\n\n  const { Skills: { treesByClasses, defaultClass, defaultTree } } = Engine;\n  const baseClass = (filters.characterClass ?? defaultClass) as CharacterClass;\n  const baseTree = (filters.tree ?? defaultTree) as SkillTree;\n\n  const [selectedClass, setSelectedClass] = useState<CharacterClass>(baseClass);\n  const [selectedTree, setSelectedTree] = useState<SkillTree>(baseTree);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  if (isUpToTablet) {\n    return (\n      <Drawer\n        open={isMobileMenuOpen}\n        onHandleClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        onClose={() => setIsMobileMenuOpen(false)}\n        className={`o-skillClasses__menuMobile class-${selectedClass.toLowerCase()}`}\n        width=\"60vw\"\n        placement={'left'}\n      >\n        {renderCategoryMenu()}\n      </Drawer>\n    );\n  } else {\n    return renderCategoryMenu();\n  }\n\n  function renderSkillTrees(characterClass: CharacterClass, skillTrees: SkillTree[]) {\n    return (\n      <ul className=\"o-skillClasses__skillTrees\">\n        {skillTrees.map(skillTree => (\n          <li\n            key={`skill-tree-${skillTree}`}\n            className={`o-skillClasses__skillTree ${selectedTree === skillTree ? 'selected' : ''}`}\n          >\n            <span\n              className=\"o-skillClasses__skillTreeName\"\n              onClick={() => onSkillTreeSelect(characterClass, skillTree)}\n            >\n              {skillTree}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function renderCategoryMenu() {\n    return (\n      <ul className=\"o-skillClasses\">\n        {map(treesByClasses, ((skillTrees, characterClass: CharacterClass) => {\n          const isSelected = selectedClass === characterClass;\n\n          if (!skillTrees) { return null; }\n\n          return (\n            <li\n              key={`skill-class-${characterClass}`}\n              className={`o-skillClasses__class ${isSelected ? 'selected' : ''}`}\n            >\n              <span\n                className=\"o-skillClasses__className\"\n                onClick={() => onClassSelect(characterClass)}\n              >\n                <Icon\n                  className=\"o-skillClasses__className-arrow\"\n                  width={isSelected ? 14 : 6}\n                  height={isSelected ? 7 : 12}\n                  name={isSelected ? IconName.ArrowDownBlue : IconName.ArrowRightBlue}\n                />\n                {characterClass}\n                <GameIcon\n                  className=\"o-skillClasses__className-icon\"\n                  type={GameIconType.ClassHeader}\n                  name={characterClass.toLowerCase()}\n                  width={32}\n                />\n              </span>\n              {renderSkillTrees(characterClass, skillTrees)}\n            </li>\n          );\n        }))}\n      </ul>\n    );\n  }\n\n  function onClassSelect(characterClass: CharacterClass) {\n    const defaultSkillTree = Engine.Skills.defaultTreeForClass(characterClass);\n\n    setSelectedClass(characterClass);\n    setSelectedTree(defaultSkillTree);\n    setFilters({ characterClass, tree: defaultSkillTree });\n  }\n\n  function onSkillTreeSelect(characterClass: CharacterClass, skillTree: SkillTree) {\n    setSelectedTree(skillTree);\n    setFilters({ characterClass, tree: skillTree });\n    setIsMobileMenuOpen(false);\n  }\n};\n\nexport default Categories;","import React, { FunctionComponent } from 'react';\n\nimport Dropdown from 'components/atoms/Dropdown/Dropdown';\nimport Multiselect, { MultiselectOption } from 'components/atoms/Multiselect/Multiselect';\nimport Search from 'components/atoms/Search/Search';\nimport { allEnumValues } from 'helpers/typeUtils';\nimport useFilters from 'hooks/useFilters';\nimport { SkillsFilters, FiltersType } from 'types/Filters.types';\nimport { SkillType, SkillFamily } from 'types/Skill.types';\n\nimport './Filters.scss';\n\nconst Filters: FunctionComponent = () => {\n  const [filters, setFilters] = useFilters<SkillsFilters>(FiltersType.Skills);\n  const skillTypes = allEnumValues(SkillType);\n\n  const typesOptions: MultiselectOption[] = skillTypes.map(type => ({\n    label: type,\n    value: type,\n    color: `var(--color-element-orange)`,\n  }));\n\n  const familyOptions = [...['All'], ...allEnumValues(SkillFamily)].map(family => ({\n    label: family === 'All' ? 'Any family' : family,\n    value: family,\n  }));\n\n  return (\n    <div className=\"o-skillFilters\">\n      <Search\n        className=\"o-skillFilters__search\"\n        placeholder=\"Search anything: Fire, Movement, Tornado...\"\n        value={filters.search || ''}\n        onChange={onSearchChange}\n      />\n      <Multiselect\n        className=\"o-skillFilters__typeSelect\"\n        defaultValues={filters.types ? filters.types : skillTypes}\n        options={typesOptions}\n        onChange={onTypesSelect}\n      />\n      <Dropdown\n        className=\"o-skillFilters__familyDropdown\"\n        label=\"\"\n        defaultValue={filters.family || 'All'}\n        options={familyOptions}\n        onChange={onFamilySelect}\n      />\n    </div>\n  );\n\n  function onTypesSelect(types: string[]) {\n    setFilters({ types });\n  }\n\n  function onFamilySelect(family: string) {\n    setFilters({ family });\n  }\n\n  function onSearchChange(search?: string) {\n    setFilters({ search });\n  }\n};\n\nexport default Filters;","import React, { FunctionComponent } from 'react';\n\nimport './Header.scss';\n\n// TODO: Refactor with Item and Enchant headers\nconst Header: FunctionComponent = () => {\n\n  return (\n    <div className=\"m-header\">\n      <div className=\"m-header__skills\">\n        <h3 className=\"m-header__thead\">\n          Skill\n        </h3>\n        <h3  className=\"m-header__thead reqSkill\">\n          Req.\n        </h3>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Header;","import React, { FunctionComponent } from 'react';\n\nimport Header from 'components/molecules/Skills/Header/Header';\nimport Skill from 'components/organisms/Skills/Skill/Skill';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\nimport { Skill as SkillInterface } from 'types/Skill.types';\n\nimport './List.scss';\n\ninterface Props {\n  skills: SkillInterface[];\n}\n\nconst List: FunctionComponent<Props> = ({ skills }) => {\n  const { paginatedData, InfiniteScroll } =  useInfiniteScroll<SkillInterface>(skills, 10);\n\n  return (\n    <div className=\"o-skillsList\">\n      {skills.length > 0 ? (\n        <>\n          <Header />\n          <div className=\"o-skillsList__container\">\n            <div className=\"o-skillsList__skills\">\n              <InfiniteScroll>\n                {paginatedData.map(skill => (\n                  <Skill key={`skill-${skill.uuid}-${skill.class}`} skill={skill} />\n                ))}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"o-skillsList__noSkill\">\n          No skill was found matching these criteria.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default List;","import React, { FunctionComponent } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport Categories from 'components/organisms/Skills/Categories/Categories';\nimport Filters from 'components/organisms/Skills/Filters/Filters';\nimport List from 'components/organisms/Skills/List/List';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nimport './SkillsTemplate.scss';\n\nconst SkillsTemplate: FunctionComponent = () => {\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const Engine = useEngine();\n\n  const skills = getFilteredSkills();\n\n  return (\n    <>\n      <Filters />\n      <div className=\"t-skills__wrapper\">\n        <Categories />\n        <div className=\"t-skills__list\">\n          <List skills={skills} />\n        </div>\n      </div>\n    </>\n  );\n\n  function getFilteredSkills() {\n    return Engine.Skills.all({\n      search: filtersStore.skills.search,\n      tree: filtersStore.skills.tree,\n      types: filtersStore.skills.types,\n      characterClass: filtersStore.skills.characterClass,\n      family: filtersStore.skills.family,\n    });\n  }\n};\n\nexport default observer(SkillsTemplate);","import React, { FunctionComponent } from 'react';\n\nimport SkillsTemplate from 'components/templates/Skills/SkillsTemplate';\nimport useSeo from 'hooks/useSeo';\n\nconst EnchantsPage: FunctionComponent = () => {\n  const Seo = useSeo({\n    title: 'Skills database',\n    description: 'Find the skills that best suit your build.',\n  });\n\n  return (\n    <>\n      <Seo />\n      <SkillsTemplate />\n    </>\n  );\n};\n\nexport default EnchantsPage;","import React, { FunctionComponent, useEffect, useState, useRef } from 'react';\nimport { Router } from 'react-router';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { createBrowserHistory } from 'history';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport Loader from 'components/atoms/Loader/Loader';\nimport ScrollToTop from 'components/atoms/ScrollToTop/ScrollToTop';\nimport useEngine from 'hooks/useEngine';\nimport { useStores } from 'hooks/useStores';\nimport Layout from 'layouts/Default';\nimport DevelopersPage from 'pages/developers/Developers';\nimport EnchantsPage from 'pages/enchants/Enchants';\nimport ItemPage from 'pages/items/Item';\nimport ItemsPage from 'pages/items/Items';\nimport SkillPage from 'pages/skills/Skill';\nimport SkillsPage from 'pages/skills/Skills';\nimport { RoutePath } from 'routes';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore } from 'types/DataStore.types';\n\ninterface Stores {\n  [DataStore.Filters]: FiltersStore;\n}\n\nconst Main: FunctionComponent =  () => {\n  const engine = useEngine();\n  const { filtersStore } = useStores<Stores>(DataStore.Filters);\n  const history = useRef(createBrowserHistory());\n  const [engineLoaded, setEngineLoaded] = useState(engine.loaded);\n\n  useEffect(() => {\n    // Load engine data\n    autorun(() => {\n      setEngineLoaded(false);\n      if (!engine.loaded && filtersStore.currentPatch) {\n        // First load\n        engine.loadData().then(() => setEngineLoaded(true));\n      } else {\n        // Subsequent version changes\n        engine.loadVersion(filtersStore.currentPatch).then(() => setTimeout(() => setEngineLoaded(true), 500));\n      }\n    });\n  }, []);\n\n  return (\n    <Router history={history.current}>\n      <ScrollToTop />\n      <Layout>\n        <Switch>\n          <Route path=\"/\">\n            {!engineLoaded ? (\n              <Loader width={100} height={100} color=\"var(--color-element-yellow)\" />\n            ) : (\n              <Switch>\n                <Route exact path={RoutePath.Items} component={ItemsPage} />\n                <Route exact path={RoutePath.Item} component={ItemPage} />\n                <Route exact path={RoutePath.Enchants} component={EnchantsPage} />\n                <Route exact path={RoutePath.Skills} component={SkillsPage} />\n                <Route exact path={RoutePath.Skill} component={SkillPage} />\n                <Route exact path={RoutePath.Developers} component={DevelopersPage} />\n\n                <Route>\n                  <Redirect to={RoutePath.Items} />\n                </Route>\n              </Switch>\n            )}\n\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default observer(Main);","import camelCaseKeys from 'camelcase-keys';\nimport { flatten } from 'flatten-anything';\nimport { isEmpty, merge, pick, has } from 'lodash';\nimport { observable, action, computed } from 'mobx';\nimport qs from 'query-string';\n\nimport patches from 'engine/data/patches.json';\nimport {\n  GeneralFilters,\n  ItemsFilters,\n  EnchantsFilters,\n  SkillsFilters,\n  Filters,\n  FiltersType,\n  QueryFiltersInterface,\n  SortOrder,\n} from 'types/Filters.types';\n\n// Has a dependency on query params, not very clean but it works. See `useFilters`\nexport class FiltersStore {\n  @observable\n  public general: GeneralFilters;\n\n  @observable\n  public items: ItemsFilters;\n\n  @observable\n  public enchants: EnchantsFilters;\n\n  @observable\n  public skills: SkillsFilters;\n\n  // A bit ugly but gets the job done\n  constructor() {\n    const query = qs.parse(location.search) as unknown as QueryFiltersInterface;\n\n    const latestPatch = patches[patches.length - 1];\n    /* Make sure the patch in the query string exists,\n     * And, yes, I DARED nest that, sue me! :smirk:\n     */\n    const defaultPatch = query.patch\n      ? patches.includes(query.patch)\n        ? query.patch\n        : latestPatch\n      : latestPatch;\n\n    this.general = {\n      patch: defaultPatch,\n    };\n\n    this.items = {\n      search: query.itemsSearch,\n      category: query.itemsCategory,\n      type: query.itemsType,\n      characterClass: query.itemsCharacterClass,\n      rarities: query.itemsRarities,\n      orderBy: query.itemsOrderBy as SortOrder,\n      onlySet: query.itemsOnlySet ? query.itemsOnlySet === 'true' : undefined, // typecast\n    };\n\n    this.enchants = {\n      search: query.enchantsSearch,\n      type: query.enchantsType,\n      category: query.enchantsCategory,\n    };\n\n    this.skills = {\n      search: query.skillsSearch,\n      characterClass: query.skillsCharacterClass,\n      tree: query.skillsTree,\n      types: query.skillsTypes,\n      family: query.skillsFamily,\n    };\n  }\n\n  @action\n  public setGeneralFilters(filters: Partial<GeneralFilters>) {\n    this.general = merge(this.general, filters);\n  }\n\n  @action\n  public setItemsFilters(filters: Partial<ItemsFilters>) {\n    this.items = merge(this.items, filters);\n\n    // Override rarities instead of merge as it is an array of unique toggleable values\n    if (filters.rarities) {\n      this.items.rarities = filters.rarities;\n    }\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.items.search = undefined;\n    }\n  }\n\n  @action\n  public setEnchantsFilters(filters: Partial<EnchantsFilters>) {\n    this.enchants = merge(this.enchants, filters);\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.enchants.search = undefined;\n    }\n  }\n\n  @action\n  public setSkillsFilters(filters: Partial<SkillsFilters>) {\n    this.skills = merge(this.skills, filters);\n\n    // Allow undefined value for search\n    if (has(filters, 'search') && isEmpty(filters.search)) {\n      this.skills.search = undefined;\n    }\n  }\n\n  @computed\n  get filters(): Filters {\n    return {\n      general: this.general,\n      items: this.items,\n      enchants: this.enchants,\n      skills: this.skills,\n    };\n  }\n\n  @computed\n  get currentPatch() {\n    return this.general.patch;\n  }\n\n  public toQueryString(filtersTypes: FiltersType[]): string {\n    const query = camelCaseKeys(\n      flatten(pick(this.filters, filtersTypes), 1)\n    ) as Record<string, string>;\n\n    // Rename patch key so it is less intrusive\n    if (filtersTypes.includes(FiltersType.General)) {\n      query.patch = query.generalPatch;\n      delete query.generalPatch;\n    }\n\n    return qs.stringify(query as unknown as QueryFiltersInterface);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { useAsync } from 'react-async-hook';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport { Provider } from 'mobx-react';\n\nimport Loader from 'components/atoms/Loader/Loader';\nimport EngineContext from 'engine/context';\nimport Engine from 'engine/Engine';\nimport Main from 'pages/Main';\nimport { FiltersStore } from 'stores/FiltersStore';\nimport { DataStore, Stores } from 'types/DataStore.types';\n\nconst App: FunctionComponent = () => {\n  const [stores, setAllStores] = useState<Stores | null>(null);\n  const [engine, setEngine] = useState<Engine | null>(null);\n\n  useAsync(() => loadStoresAndData(), []);\n\n  if (!stores || !engine) {\n    return <Loader width={100} height={100} color=\"white\" />;\n  }\n\n  return (\n    <HelmetProvider>\n      <Provider {...stores}>\n        <EngineContext.Provider value={engine}>\n          <Main />\n        </EngineContext.Provider>\n      </Provider>\n    </HelmetProvider>\n  );\n\n  // return (\n  //   <I18nextProvider i18n={i18n}>\n  //           <Provider {...stores}>\n  //             <Main history={history} />\n  //           </Provider>\n  //   </I18nextProvider>\n  // );\n\n  async function loadStoresAndData() {\n    const loadedStores = await loadStores();\n    setAllStores(loadedStores);\n    setEngine(new Engine(loadedStores[DataStore.Filters].currentPatch));\n  }\n\n};\n\nasync function loadStores(): Promise<Stores> {\n  // Init rest of stores, (MobX requires all stores are instantiated immediately)\n  return {\n    [DataStore.Filters]: new FiltersStore(),\n  };\n}\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configure } from 'mobx';\n\nimport App from 'pages/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport 'assets/styles/fonts.css';\nimport 'assets/styles/variables.css';\nimport 'assets/styles/global.css';\nimport 'rc-drawer/assets/index.css';\nimport 'react-tippy/dist/tippy.css';\n\n// Mobx : all state that is observed somewhere needs to be changed through actions\nconfigure({ enforceActions: 'observed' });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}